{"version":3,"sources":["webpack://git-base/./src/api/api1.ts","webpack://git-base/./src/api/extension.ts","webpack://git-base/./src/decorators.ts","webpack://git-base/./src/model.ts","webpack://git-base/./src/remoteSource.ts","webpack://git-base/./src/util.ts","webpack://git-base/external \"vscode\"","webpack://git-base/webpack/bootstrap","webpack://git-base/./src/extension.ts"],"names":["constructor","a","pickRemoteSource","options","this","registerRemoteSourceProvider","provider","extension","disposables","push","commands","registerCommand","opts","model","Disposable","from","b","enabled","fire","EventEmitter","onDidChangeEnablement","event","undefined","getAPI","version","Error","ApiImpl","decorate","decorator","_target","key","descriptor","fnKey","fn","value","get","delay","timerKey","args","clearTimeout","setTimeout","apply","throttle","currentKey","nextKey","trigger","done","then","clear","Set","onDidAddRemoteSourceProvider","c","onDidRemoveRemoteSourceProvider","add","toDisposable","delete","getRemoteProviders","values","async","getQuickPickResult","quickpick","result","Promise","onDidAccept","selectedItems","onDidHide","show","hide","RemoteSourceProviderQuickPick","e","f","d","window","createQuickPick","ignoreFocusOut","supportsQuery","placeholder","l10n","t","onDidChangeValue","g","h","busy","remoteSources","getRemoteSources","length","items","label","alwaysShow","map","remoteSource","icon","name","description","url","detail","err","message","console","error","pickProviderSource","remote","pick","showQuickPick","placeHolder","branch","getBranches","branches","debounce","title","providerName","filter","remoteProviders","providerLabel","recentSources","showRecentSources","sources","getRecentRemoteSources","item","kind","QuickPickItemKind","Separator","sort","timestamp","updatePicks","urlLabel","dispose","promise","Versions","major","minor","patch","pre","parseInt","fromString","ver","split","compare","v1","v2","localeCompare","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call","context","apiImpl","GitBaseExtensionImpl","Model","subscriptions","registerAPICommands"],"mappings":"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","file":"extension.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, commands } from 'vscode';\nimport { Model } from '../model';\nimport { pickRemoteSource } from '../remoteSource';\nimport { GitBaseExtensionImpl } from './extension';\nimport { API, PickRemoteSourceOptions, PickRemoteSourceResult, RemoteSourceProvider } from './git-base';\n\nexport class ApiImpl implements API {\n\n\tconstructor(private a: Model) { }\n\n\tpickRemoteSource(options: PickRemoteSourceOptions): Promise<PickRemoteSourceResult | string | undefined> {\n\t\treturn pickRemoteSource(this.a, options as any);\n\t}\n\n\tregisterRemoteSourceProvider(provider: RemoteSourceProvider): Disposable {\n\t\treturn this.a.registerRemoteSourceProvider(provider);\n\t}\n}\n\nexport function registerAPICommands(extension: GitBaseExtensionImpl): Disposable {\n\tconst disposables: Disposable[] = [];\n\n\tdisposables.push(commands.registerCommand('git-base.api.getRemoteSources', (opts?: PickRemoteSourceOptions) => {\n\t\tif (!extension.model) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn pickRemoteSource(extension.model, opts as any);\n\t}));\n\n\treturn Disposable.from(...disposables);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Model } from '../model';\nimport { GitBaseExtension, API } from './git-base';\nimport { Event, EventEmitter } from 'vscode';\nimport { ApiImpl } from './api1';\n\nexport class GitBaseExtensionImpl implements GitBaseExtension {\n\n\tenabled: boolean = false;\n\n\tprivate a = new EventEmitter<boolean>();\n\treadonly onDidChangeEnablement: Event<boolean> = this.a.event;\n\n\tprivate b: Model | undefined = undefined;\n\n\tset model(model: Model | undefined) {\n\t\tthis.b = model;\n\n\t\tconst enabled = !!model;\n\n\t\tif (this.enabled === enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.enabled = enabled;\n\t\tthis.a.fire(this.enabled);\n\t}\n\n\tget model(): Model | undefined {\n\t\treturn this.b;\n\t}\n\n\tconstructor(model?: Model) {\n\t\tif (model) {\n\t\t\tthis.enabled = true;\n\t\t\tthis.b = model;\n\t\t}\n\t}\n\n\tgetAPI(version: number): API {\n\t\tif (!this.b) {\n\t\t\tthrow new Error('Git model not found');\n\t\t}\n\n\t\tif (version !== 1) {\n\t\t\tthrow new Error(`No API version ${version} found.`);\n\t\t}\n\n\t\treturn new ApiImpl(this.b);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { done } from './util';\n\nexport function debounce(delay: number): Function {\n\treturn decorate((fn, key) => {\n\t\tconst timerKey = `$debounce$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tclearTimeout(this[timerKey]);\n\t\t\tthis[timerKey] = setTimeout(() => fn.apply(this, args), delay);\n\t\t};\n\t});\n}\n\nexport const throttle = decorate(_throttle);\n\nfunction _throttle<T>(fn: Function, key: string): Function {\n\tconst currentKey = `$throttle$current$${key}`;\n\tconst nextKey = `$throttle$next$${key}`;\n\n\tconst trigger = function (this: any, ...args: any[]) {\n\t\tif (this[nextKey]) {\n\t\t\treturn this[nextKey];\n\t\t}\n\n\t\tif (this[currentKey]) {\n\t\t\tthis[nextKey] = done(this[currentKey]).then(() => {\n\t\t\t\tthis[nextKey] = undefined;\n\t\t\t\treturn trigger.apply(this, args);\n\t\t\t});\n\n\t\t\treturn this[nextKey];\n\t\t}\n\n\t\tthis[currentKey] = fn.apply(this, args) as Promise<T>;\n\n\t\tconst clear = () => this[currentKey] = undefined;\n\t\tdone(this[currentKey]).then(clear, clear);\n\n\t\treturn this[currentKey];\n\t};\n\n\treturn trigger;\n}\n\nfunction decorate(decorator: (fn: Function, key: string) => Function): Function {\n\treturn (_target: any, key: string, descriptor: any) => {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn || !fnKey) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tdescriptor[fnKey] = decorator(fn, key);\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EventEmitter, Disposable } from 'vscode';\nimport { toDisposable } from './util';\nimport { RemoteSourceProvider } from './api/git-base';\nimport { IRemoteSourceProviderRegistry } from './remoteProvider';\n\nexport class Model implements IRemoteSourceProviderRegistry {\n\n\tprivate a = new Set<RemoteSourceProvider>();\n\n\tprivate b = new EventEmitter<RemoteSourceProvider>();\n\treadonly onDidAddRemoteSourceProvider = this.b.event;\n\n\tprivate c = new EventEmitter<RemoteSourceProvider>();\n\treadonly onDidRemoveRemoteSourceProvider = this.c.event;\n\n\tregisterRemoteSourceProvider(provider: RemoteSourceProvider): Disposable {\n\t\tthis.a.add(provider);\n\t\tthis.b.fire(provider);\n\n\t\treturn toDisposable(() => {\n\t\t\tthis.a.delete(provider);\n\t\t\tthis.c.fire(provider);\n\t\t});\n\t}\n\n\tgetRemoteProviders(): RemoteSourceProvider[] {\n\t\treturn [...this.a.values()];\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { QuickPickItem, window, QuickPick, QuickPickItemKind, l10n } from 'vscode';\nimport { RemoteSourceProvider, RemoteSource, PickRemoteSourceOptions, PickRemoteSourceResult } from './api/git-base';\nimport { Model } from './model';\nimport { throttle, debounce } from './decorators';\n\nasync function getQuickPickResult<T extends QuickPickItem>(quickpick: QuickPick<T>): Promise<T | undefined> {\n\tconst result = await new Promise<T | undefined>(c => {\n\t\tquickpick.onDidAccept(() => c(quickpick.selectedItems[0]));\n\t\tquickpick.onDidHide(() => c(undefined));\n\t\tquickpick.show();\n\t});\n\n\tquickpick.hide();\n\treturn result;\n}\n\nclass RemoteSourceProviderQuickPick {\n\n\tprivate d: QuickPick<QuickPickItem & { remoteSource?: RemoteSource }> | undefined;\n\n\tconstructor(private e: RemoteSourceProvider) { }\n\n\tprivate f() {\n\t\tif (!this.d) {\n\t\t\tthis.d = window.createQuickPick();\n\t\t\tthis.d.ignoreFocusOut = true;\n\t\t\tif (this.e.supportsQuery) {\n\t\t\t\tthis.d.placeholder = this.e.placeholder ?? l10n.t('Repository name (type to search)');\n\t\t\t\tthis.d.onDidChangeValue(this.g, this);\n\t\t\t} else {\n\t\t\t\tthis.d.placeholder = this.e.placeholder ?? l10n.t('Repository name');\n\t\t\t}\n\t\t}\n\t}\n\n\t@debounce(300)\n\tprivate g(): void {\n\t\tthis.h();\n\t}\n\n\t@throttle\n\tprivate async h(): Promise<void> {\n\t\ttry {\n\t\t\tthis.f();\n\t\t\tthis.d!.busy = true;\n\t\t\tthis.d!.show();\n\n\t\t\tconst remoteSources = await this.e.getRemoteSources(this.d?.value) || [];\n\n\t\t\tif (remoteSources.length === 0) {\n\t\t\t\tthis.d!.items = [{\n\t\t\t\t\tlabel: l10n.t('No remote repositories found.'),\n\t\t\t\t\talwaysShow: true\n\t\t\t\t}];\n\t\t\t} else {\n\t\t\t\tthis.d!.items = remoteSources.map(remoteSource => ({\n\t\t\t\t\tlabel: remoteSource.icon ? `$(${remoteSource.icon}) ${remoteSource.name}` : remoteSource.name,\n\t\t\t\t\tdescription: remoteSource.description || (typeof remoteSource.url === 'string' ? remoteSource.url : remoteSource.url[0]),\n\t\t\t\t\tdetail: remoteSource.detail,\n\t\t\t\t\tremoteSource,\n\t\t\t\t\talwaysShow: true\n\t\t\t\t}));\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthis.d!.items = [{ label: l10n.t('{0} Error: {1}', '$(error)', err.message), alwaysShow: true }];\n\t\t\tconsole.error(err);\n\t\t} finally {\n\t\t\tthis.d!.busy = false;\n\t\t}\n\t}\n\n\tasync pick(): Promise<RemoteSource | undefined> {\n\t\tawait this.h();\n\t\tconst result = await getQuickPickResult(this.d!);\n\t\treturn result?.remoteSource;\n\t}\n}\n\nexport async function pickRemoteSource(model: Model, options: PickRemoteSourceOptions & { branch?: false | undefined }): Promise<string | undefined>;\nexport async function pickRemoteSource(model: Model, options: PickRemoteSourceOptions & { branch: true }): Promise<PickRemoteSourceResult | undefined>;\nexport async function pickRemoteSource(model: Model, options: PickRemoteSourceOptions = {}): Promise<string | PickRemoteSourceResult | undefined> {\n\tconst quickpick = window.createQuickPick<(QuickPickItem & { provider?: RemoteSourceProvider; url?: string })>();\n\tquickpick.ignoreFocusOut = true;\n\tquickpick.title = options.title;\n\n\tif (options.providerName) {\n\t\tconst provider = model.getRemoteProviders()\n\t\t\t.filter(provider => provider.name === options.providerName)[0];\n\n\t\tif (provider) {\n\t\t\treturn await pickProviderSource(provider, options);\n\t\t}\n\t}\n\n\tconst remoteProviders = model.getRemoteProviders()\n\t\t.map(provider => ({ label: (provider.icon ? `$(${provider.icon}) ` : '') + (options.providerLabel ? options.providerLabel(provider) : provider.name), alwaysShow: true, provider }));\n\n\tconst recentSources: (QuickPickItem & { url?: string; timestamp: number })[] = [];\n\tif (options.showRecentSources) {\n\t\tfor (const { provider } of remoteProviders) {\n\t\t\tconst sources = (await provider.getRecentRemoteSources?.() ?? []).map((item) => {\n\t\t\t\treturn {\n\t\t\t\t\t...item,\n\t\t\t\t\tlabel: (item.icon ? `$(${item.icon}) ` : '') + item.name,\n\t\t\t\t\turl: typeof item.url === 'string' ? item.url : item.url[0],\n\t\t\t\t};\n\t\t\t});\n\t\t\trecentSources.push(...sources);\n\t\t}\n\t}\n\n\tconst items = [\n\t\t{ kind: QuickPickItemKind.Separator, label: l10n.t('remote sources') },\n\t\t...remoteProviders,\n\t\t{ kind: QuickPickItemKind.Separator, label: l10n.t('recently opened') },\n\t\t...recentSources.sort((a, b) => b.timestamp - a.timestamp)\n\t];\n\n\tquickpick.placeholder = options.placeholder ?? (remoteProviders.length === 0\n\t\t? l10n.t('Provide repository URL')\n\t\t: l10n.t('Provide repository URL or pick a repository source.'));\n\n\tconst updatePicks = (value?: string) => {\n\t\tif (value) {\n\t\t\tconst label = (typeof options.urlLabel === 'string' ? options.urlLabel : options.urlLabel?.(value)) ?? l10n.t('URL');\n\t\t\tquickpick.items = [{\n\t\t\t\tlabel: label,\n\t\t\t\tdescription: value,\n\t\t\t\talwaysShow: true,\n\t\t\t\turl: value\n\t\t\t},\n\t\t\t...items\n\t\t\t];\n\t\t} else {\n\t\t\tquickpick.items = items;\n\t\t}\n\t};\n\n\tquickpick.onDidChangeValue(updatePicks);\n\tupdatePicks();\n\n\tconst result = await getQuickPickResult(quickpick);\n\n\tif (result) {\n\t\tif (result.url) {\n\t\t\treturn result.url;\n\t\t} else if (result.provider) {\n\t\t\treturn await pickProviderSource(result.provider, options);\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nasync function pickProviderSource(provider: RemoteSourceProvider, options: PickRemoteSourceOptions = {}): Promise<string | PickRemoteSourceResult | undefined> {\n\tconst quickpick = new RemoteSourceProviderQuickPick(provider);\n\tconst remote = await quickpick.pick();\n\n\tlet url: string | undefined;\n\n\tif (remote) {\n\t\tif (typeof remote.url === 'string') {\n\t\t\turl = remote.url;\n\t\t} else if (remote.url.length > 0) {\n\t\t\turl = await window.showQuickPick(remote.url, { ignoreFocusOut: true, placeHolder: l10n.t('Choose a URL to clone from.') });\n\t\t}\n\t}\n\n\tif (!url || !options.branch) {\n\t\treturn url;\n\t}\n\n\tif (!provider.getBranches) {\n\t\treturn { url };\n\t}\n\n\tconst branches = await provider.getBranches(url);\n\n\tif (!branches) {\n\t\treturn { url };\n\t}\n\n\tconst branch = await window.showQuickPick(branches, {\n\t\tplaceHolder: l10n.t('Branch name')\n\t});\n\n\tif (!branch) {\n\t\treturn { url };\n\t}\n\n\treturn { url, branch };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function toDisposable(dispose: () => void): IDisposable {\n\treturn { dispose };\n}\n\nexport function done<T>(promise: Promise<T>): Promise<void> {\n\treturn promise.then<void>(() => undefined);\n}\n\nexport namespace Versions {\n\tdeclare type VersionComparisonResult = -1 | 0 | 1;\n\n\texport interface Version {\n\t\tmajor: number;\n\t\tminor: number;\n\t\tpatch: number;\n\t\tpre?: string;\n\t}\n\n\texport function compare(v1: string | Version, v2: string | Version): VersionComparisonResult {\n\t\tif (typeof v1 === 'string') {\n\t\t\tv1 = fromString(v1);\n\t\t}\n\t\tif (typeof v2 === 'string') {\n\t\t\tv2 = fromString(v2);\n\t\t}\n\n\t\tif (v1.major > v2.major) { return 1; }\n\t\tif (v1.major < v2.major) { return -1; }\n\n\t\tif (v1.minor > v2.minor) { return 1; }\n\t\tif (v1.minor < v2.minor) { return -1; }\n\n\t\tif (v1.patch > v2.patch) { return 1; }\n\t\tif (v1.patch < v2.patch) { return -1; }\n\n\t\tif (v1.pre === undefined && v2.pre !== undefined) { return 1; }\n\t\tif (v1.pre !== undefined && v2.pre === undefined) { return -1; }\n\n\t\tif (v1.pre !== undefined && v2.pre !== undefined) {\n\t\t\treturn v1.pre.localeCompare(v2.pre) as VersionComparisonResult;\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\texport function from(major: string | number, minor: string | number, patch?: string | number, pre?: string): Version {\n\t\treturn {\n\t\t\tmajor: typeof major === 'string' ? parseInt(major, 10) : major,\n\t\t\tminor: typeof minor === 'string' ? parseInt(minor, 10) : minor,\n\t\t\tpatch: patch === undefined || patch === null ? 0 : typeof patch === 'string' ? parseInt(patch, 10) : patch,\n\t\t\tpre: pre,\n\t\t};\n\t}\n\n\texport function fromString(version: string): Version {\n\t\tconst [ver, pre] = version.split('-');\n\t\tconst [major, minor, patch] = ver.split('.');\n\t\treturn from(major, minor, patch, pre);\n\t}\n}\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ExtensionContext } from 'vscode';\nimport { registerAPICommands } from './api/api1';\nimport { GitBaseExtensionImpl } from './api/extension';\nimport { Model } from './model';\n\nexport function activate(context: ExtensionContext): GitBaseExtensionImpl {\n\tconst apiImpl = new GitBaseExtensionImpl(new Model());\n\tcontext.subscriptions.push(registerAPICommands(apiImpl));\n\n\treturn apiImpl;\n}\n"],"sourceRoot":""}