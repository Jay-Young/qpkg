{"version":3,"sources":["webpack://jake/external \"child_process\"","webpack://jake/external \"fs\"","webpack://jake/external \"path\"","webpack://jake/external \"vscode\"","webpack://jake/webpack/bootstrap","webpack://jake/./src/main.ts"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","exists","file","Promise","resolve","_reject","fs","value","buildNames","isBuildTask","name","buildName","indexOf","testNames","isTestTask","testName","_channel","detector","getOutputChannel","vscode","window","createOutputChannel","showError","showWarningMessage","l10n","t","then","show","async","findJakeCommand","rootPath","jakeCommand","platform","process","path","join","FolderDetector","constructor","c","d","this","isEnabled","workspace","getConfiguration","uri","get","start","pattern","fsPath","a","createFileSystemWatcher","onDidChange","b","onDidCreate","onDidDelete","e","_task","jakeTask","definition","task","kind","options","cwd","workspaceFolder","Task","ShellExecution","scheme","emptyTasks","jakefile","commandLine","stdout","stderr","command","reject","cp","exec","error","appendLine","result","lines","split","line","length","matches","taskName","type","push","lowerCaseLine","toLowerCase","group","TaskGroup","Build","Test","err","channel","dispose","TaskDetector","Map","folders","workspaceFolders","onDidChangeWorkspaceFolders","event","added","removed","onDidChangeConfiguration","clear","remove","toString","delete","add","set","values","folder","has","size","thisCapture","tasks","registerTaskProvider","provideTasks","getTasks","resolveTask","getTask","f","next","promises","all","scope","TaskScope","Workspace","Global","_context"],"mappings":"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","file":"main.js","sourcesContent":["module.exports = require(\"child_process\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport * as cp from 'child_process';\nimport * as vscode from 'vscode';\n\ntype AutoDetect = 'on' | 'off';\n\nfunction exists(file: string): Promise<boolean> {\n\treturn new Promise<boolean>((resolve, _reject) => {\n\t\tfs.exists(file, (value) => {\n\t\t\tresolve(value);\n\t\t});\n\t});\n}\n\nfunction exec(command: string, options: cp.ExecOptions): Promise<{ stdout: string; stderr: string }> {\n\treturn new Promise<{ stdout: string; stderr: string }>((resolve, reject) => {\n\t\tcp.exec(command, options, (error, stdout, stderr) => {\n\t\t\tif (error) {\n\t\t\t\treject({ error, stdout, stderr });\n\t\t\t}\n\t\t\tresolve({ stdout, stderr });\n\t\t});\n\t});\n}\n\nconst buildNames: string[] = ['build', 'compile', 'watch'];\nfunction isBuildTask(name: string): boolean {\n\tfor (const buildName of buildNames) {\n\t\tif (name.indexOf(buildName) !== -1) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nconst testNames: string[] = ['test'];\nfunction isTestTask(name: string): boolean {\n\tfor (const testName of testNames) {\n\t\tif (name.indexOf(testName) !== -1) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nlet _channel: vscode.OutputChannel;\nfunction getOutputChannel(): vscode.OutputChannel {\n\tif (!_channel) {\n\t\t_channel = vscode.window.createOutputChannel('Jake Auto Detection');\n\t}\n\treturn _channel;\n}\n\nfunction showError() {\n\tvscode.window.showWarningMessage(vscode.l10n.t(\"Problem finding jake tasks. See the output for more information.\"),\n\t\tvscode.l10n.t(\"Go to output\")).then(() => {\n\t\t\tgetOutputChannel().show(true);\n\t\t});\n}\n\nasync function findJakeCommand(rootPath: string): Promise<string> {\n\tlet jakeCommand: string;\n\tconst platform = process.platform;\n\tif (platform === 'win32' && await exists(path.join(rootPath!, 'node_modules', '.bin', 'jake.cmd'))) {\n\t\tjakeCommand = path.join('.', 'node_modules', '.bin', 'jake.cmd');\n\t} else if ((platform === 'linux' || platform === 'darwin') && await exists(path.join(rootPath!, 'node_modules', '.bin', 'jake'))) {\n\t\tjakeCommand = path.join('.', 'node_modules', '.bin', 'jake');\n\t} else {\n\t\tjakeCommand = 'jake';\n\t}\n\treturn jakeCommand;\n}\n\ninterface JakeTaskDefinition extends vscode.TaskDefinition {\n\ttask: string;\n\tfile?: string;\n}\n\nclass FolderDetector {\n\n\tprivate a: vscode.FileSystemWatcher | undefined;\n\tprivate b: Thenable<vscode.Task[]> | undefined;\n\n\tconstructor(\n\t\tprivate c: vscode.WorkspaceFolder,\n\t\tprivate d: Promise<string>) {\n\t}\n\n\tpublic get workspaceFolder(): vscode.WorkspaceFolder {\n\t\treturn this.c;\n\t}\n\n\tpublic isEnabled(): boolean {\n\t\treturn vscode.workspace.getConfiguration('jake', this.c.uri).get<AutoDetect>('autoDetect') === 'on';\n\t}\n\n\tpublic start(): void {\n\t\tconst pattern = path.join(this.c.uri.fsPath, '{node_modules,Jakefile,Jakefile.js}');\n\t\tthis.a = vscode.workspace.createFileSystemWatcher(pattern);\n\t\tthis.a.onDidChange(() => this.b = undefined);\n\t\tthis.a.onDidCreate(() => this.b = undefined);\n\t\tthis.a.onDidDelete(() => this.b = undefined);\n\t}\n\n\tpublic async getTasks(): Promise<vscode.Task[]> {\n\t\tif (this.isEnabled()) {\n\t\t\tif (!this.b) {\n\t\t\t\tthis.b = this.e();\n\t\t\t}\n\t\t\treturn this.b;\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tpublic async getTask(_task: vscode.Task): Promise<vscode.Task | undefined> {\n\t\tconst jakeTask = (<any>_task.definition).task;\n\t\tif (jakeTask) {\n\t\t\tconst kind: JakeTaskDefinition = (<any>_task.definition);\n\t\t\tconst options: vscode.ShellExecutionOptions = { cwd: this.workspaceFolder.uri.fsPath };\n\t\t\tconst task = new vscode.Task(kind, this.workspaceFolder, jakeTask, 'jake', new vscode.ShellExecution(await this.d, [jakeTask], options));\n\t\t\treturn task;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async e(): Promise<vscode.Task[]> {\n\t\tconst rootPath = this.c.uri.scheme === 'file' ? this.c.uri.fsPath : undefined;\n\t\tconst emptyTasks: vscode.Task[] = [];\n\t\tif (!rootPath) {\n\t\t\treturn emptyTasks;\n\t\t}\n\t\tlet jakefile = path.join(rootPath, 'Jakefile');\n\t\tif (!await exists(jakefile)) {\n\t\t\tjakefile = path.join(rootPath, 'Jakefile.js');\n\t\t\tif (! await exists(jakefile)) {\n\t\t\t\treturn emptyTasks;\n\t\t\t}\n\t\t}\n\n\t\tconst commandLine = `${await this.d} --tasks`;\n\t\ttry {\n\t\t\tconst { stdout, stderr } = await exec(commandLine, { cwd: rootPath });\n\t\t\tif (stderr) {\n\t\t\t\tgetOutputChannel().appendLine(stderr);\n\t\t\t\tshowError();\n\t\t\t}\n\t\t\tconst result: vscode.Task[] = [];\n\t\t\tif (stdout) {\n\t\t\t\tconst lines = stdout.split(/\\r{0,1}\\n/);\n\t\t\t\tfor (const line of lines) {\n\t\t\t\t\tif (line.length === 0) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconst regExp = /^jake\\s+([^\\s]+)\\s/g;\n\t\t\t\t\tconst matches = regExp.exec(line);\n\t\t\t\t\tif (matches && matches.length === 2) {\n\t\t\t\t\t\tconst taskName = matches[1];\n\t\t\t\t\t\tconst kind: JakeTaskDefinition = {\n\t\t\t\t\t\t\ttype: 'jake',\n\t\t\t\t\t\t\ttask: taskName\n\t\t\t\t\t\t};\n\t\t\t\t\t\tconst options: vscode.ShellExecutionOptions = { cwd: this.workspaceFolder.uri.fsPath };\n\t\t\t\t\t\tconst task = new vscode.Task(kind, taskName, 'jake', new vscode.ShellExecution(`${await this.d} ${taskName}`, options));\n\t\t\t\t\t\tresult.push(task);\n\t\t\t\t\t\tconst lowerCaseLine = line.toLowerCase();\n\t\t\t\t\t\tif (isBuildTask(lowerCaseLine)) {\n\t\t\t\t\t\t\ttask.group = vscode.TaskGroup.Build;\n\t\t\t\t\t\t} else if (isTestTask(lowerCaseLine)) {\n\t\t\t\t\t\t\ttask.group = vscode.TaskGroup.Test;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t} catch (err) {\n\t\t\tconst channel = getOutputChannel();\n\t\t\tif (err.stderr) {\n\t\t\t\tchannel.appendLine(err.stderr);\n\t\t\t}\n\t\t\tif (err.stdout) {\n\t\t\t\tchannel.appendLine(err.stdout);\n\t\t\t}\n\t\t\tchannel.appendLine(vscode.l10n.t(\"Auto detecting Jake for folder {0} failed with error: {1}', this.workspaceFolder.name, err.error ? err.error.toString() : 'unknown\"));\n\t\t\tshowError();\n\t\t\treturn emptyTasks;\n\t\t}\n\t}\n\n\tpublic dispose() {\n\t\tthis.b = undefined;\n\t\tif (this.a) {\n\t\t\tthis.a.dispose();\n\t\t}\n\t}\n}\n\nclass TaskDetector {\n\n\tprivate a: vscode.Disposable | undefined;\n\tprivate b: Map<string, FolderDetector> = new Map();\n\n\tconstructor() {\n\t}\n\n\tpublic start(): void {\n\t\tconst folders = vscode.workspace.workspaceFolders;\n\t\tif (folders) {\n\t\t\tthis.c(folders, []);\n\t\t}\n\t\tvscode.workspace.onDidChangeWorkspaceFolders((event) => this.c(event.added, event.removed));\n\t\tvscode.workspace.onDidChangeConfiguration(this.d, this);\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.a) {\n\t\t\tthis.a.dispose();\n\t\t\tthis.a = undefined;\n\t\t}\n\t\tthis.b.clear();\n\t}\n\n\tprivate c(added: readonly vscode.WorkspaceFolder[], removed: readonly vscode.WorkspaceFolder[]): void {\n\t\tfor (const remove of removed) {\n\t\t\tconst detector = this.b.get(remove.uri.toString());\n\t\t\tif (detector) {\n\t\t\t\tdetector.dispose();\n\t\t\t\tthis.b.delete(remove.uri.toString());\n\t\t\t}\n\t\t}\n\t\tfor (const add of added) {\n\t\t\tconst detector = new FolderDetector(add, findJakeCommand(add.uri.fsPath));\n\t\t\tthis.b.set(add.uri.toString(), detector);\n\t\t\tif (detector.isEnabled()) {\n\t\t\t\tdetector.start();\n\t\t\t}\n\t\t}\n\t\tthis.e();\n\t}\n\n\tprivate d(): void {\n\t\tfor (const detector of this.b.values()) {\n\t\t\tdetector.dispose();\n\t\t\tthis.b.delete(detector.workspaceFolder.uri.toString());\n\t\t}\n\t\tconst folders = vscode.workspace.workspaceFolders;\n\t\tif (folders) {\n\t\t\tfor (const folder of folders) {\n\t\t\t\tif (!this.b.has(folder.uri.toString())) {\n\t\t\t\t\tconst detector = new FolderDetector(folder, findJakeCommand(folder.uri.fsPath));\n\t\t\t\t\tthis.b.set(folder.uri.toString(), detector);\n\t\t\t\t\tif (detector.isEnabled()) {\n\t\t\t\t\t\tdetector.start();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.e();\n\t}\n\n\tprivate e(): void {\n\t\tif (!this.a && this.b.size > 0) {\n\t\t\tconst thisCapture = this;\n\t\t\tthis.a = vscode.tasks.registerTaskProvider('jake', {\n\t\t\t\tprovideTasks(): Promise<vscode.Task[]> {\n\t\t\t\t\treturn thisCapture.getTasks();\n\t\t\t\t},\n\t\t\t\tresolveTask(_task: vscode.Task): Promise<vscode.Task | undefined> {\n\t\t\t\t\treturn thisCapture.getTask(_task);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse if (this.a && this.b.size === 0) {\n\t\t\tthis.a.dispose();\n\t\t\tthis.a = undefined;\n\t\t}\n\t}\n\n\tpublic getTasks(): Promise<vscode.Task[]> {\n\t\treturn this.f();\n\t}\n\n\tprivate f(): Promise<vscode.Task[]> {\n\t\tif (this.b.size === 0) {\n\t\t\treturn Promise.resolve([]);\n\t\t} else if (this.b.size === 1) {\n\t\t\treturn this.b.values().next().value.getTasks();\n\t\t} else {\n\t\t\tconst promises: Promise<vscode.Task[]>[] = [];\n\t\t\tfor (const detector of this.b.values()) {\n\t\t\t\tpromises.push(detector.getTasks().then((value) => value, () => []));\n\t\t\t}\n\t\t\treturn Promise.all(promises).then((values) => {\n\t\t\t\tconst result: vscode.Task[] = [];\n\t\t\t\tfor (const tasks of values) {\n\t\t\t\t\tif (tasks && tasks.length > 0) {\n\t\t\t\t\t\tresult.push(...tasks);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic async getTask(task: vscode.Task): Promise<vscode.Task | undefined> {\n\t\tif (this.b.size === 0) {\n\t\t\treturn undefined;\n\t\t} else if (this.b.size === 1) {\n\t\t\treturn this.b.values().next().value.getTask(task);\n\t\t} else {\n\t\t\tif ((task.scope === vscode.TaskScope.Workspace) || (task.scope === vscode.TaskScope.Global)) {\n\t\t\t\t// Not supported, we don't have enough info to create the task.\n\t\t\t\treturn undefined;\n\t\t\t} else if (task.scope) {\n\t\t\t\tconst detector = this.b.get(task.scope.uri.toString());\n\t\t\t\tif (detector) {\n\t\t\t\t\treturn detector.getTask(task);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\t}\n}\n\nlet detector: TaskDetector;\nexport function activate(_context: vscode.ExtensionContext): void {\n\tdetector = new TaskDetector();\n\tdetector.start();\n}\n\nexport function deactivate(): void {\n\tdetector.dispose();\n}\n"],"sourceRoot":""}