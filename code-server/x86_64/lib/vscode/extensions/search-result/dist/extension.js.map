{"version":3,"sources":["webpack://search-result/external \"path\"","webpack://search-result/external \"vscode\"","webpack://search-result/webpack/bootstrap","webpack://search-result/./src/extension.ts"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","FILE_LINE_REGEX","RESULT_LINE_REGEX","ELISION_REGEX","SEARCH_RESULT_SELECTOR","language","exclusive","DIRECTIVES","FLAGS","cachedLastParse","documentChangeListener","relativePathToUri","path","resultsUri","userDataPrefix","startsWith","vscode","Uri","file","slice","length","with","scheme","pathUtils","isAbsolute","test","indexOf","homePath","process","env","HOME","HOMEPATH","join","uriFromFolderWithPath","folder","joinPath","uri","workspace","workspaceFolders","multiRootFormattedPath","exec","workspaceName","workspacePath","filter","wf","name","prefixMatch","toString","console","error","context","contextLineDecorations","window","createTextEditorDecorationType","opacity","matchLineDecorations","fontWeight","decorate","editor","parsed","parseSearchResults","document","isResultLine","contextRanges","line","isContext","map","prefixRange","matchRanges","setDecorations","activeTextEditor","languageId","subscriptions","push","languages","registerDocumentSymbolProvider","provideDocumentSymbols","token","isFileLine","DocumentSymbol","SymbolKind","File","allLocations","originSelectionRange","reduce","p","c","union","location","registerCompletionItemProvider","provideCompletionItems","position","lineAt","character","text","header","Array","from","_","i","suggestion","every","flag","label","insertText","registerDefinitionProvider","provideDefinition","lineResult","type","locations","find","l","contains","targetPos","Position","targetSelectionRange","start","Range","registerDocumentLinkProvider","range","target","targetUri","onDidChangeActiveTextEditor","dispose","onDidChangeTextDocument","doc","version","parse","lines","getText","split","links","currentTarget","currentTargetLocations","isCancellationRequested","fileLine","targetRange","resultLine","indentation","_lineNumber","separator","lineNumber","metadataOffset","Math","max","match","lastEnd","offset","lastIndex","Number","includes","convenienceLocation"],"mappings":"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","file":"extension.js","sourcesContent":["module.exports = require(\"path\");","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport * as pathUtils from 'path';\n\nconst FILE_LINE_REGEX = /^(\\S.*):$/;\nconst RESULT_LINE_REGEX = /^(\\s+)(\\d+)(: |  )(\\s*)(.*)$/;\nconst ELISION_REGEX = /⟪ ([0-9]+) characters skipped ⟫/g;\nconst SEARCH_RESULT_SELECTOR = { language: 'search-result', exclusive: true };\nconst DIRECTIVES = ['# Query:', '# Flags:', '# Including:', '# Excluding:', '# ContextLines:'];\nconst FLAGS = ['RegExp', 'CaseSensitive', 'IgnoreExcludeSettings', 'WordMatch'];\n\nlet cachedLastParse: { version: number; parse: ParsedSearchResults; uri: vscode.Uri } | undefined;\nlet documentChangeListener: vscode.Disposable | undefined;\n\n\nexport function activate(context: vscode.ExtensionContext) {\n\n\tconst contextLineDecorations = vscode.window.createTextEditorDecorationType({ opacity: '0.7' });\n\tconst matchLineDecorations = vscode.window.createTextEditorDecorationType({ fontWeight: 'bold' });\n\n\tconst decorate = (editor: vscode.TextEditor) => {\n\t\tconst parsed = parseSearchResults(editor.document).filter(isResultLine);\n\t\tconst contextRanges = parsed.filter(line => line.isContext).map(line => line.prefixRange);\n\t\tconst matchRanges = parsed.filter(line => !line.isContext).map(line => line.prefixRange);\n\t\teditor.setDecorations(contextLineDecorations, contextRanges);\n\t\teditor.setDecorations(matchLineDecorations, matchRanges);\n\t};\n\n\tif (vscode.window.activeTextEditor && vscode.window.activeTextEditor.document.languageId === 'search-result') {\n\t\tdecorate(vscode.window.activeTextEditor);\n\t}\n\n\tcontext.subscriptions.push(\n\n\t\tvscode.languages.registerDocumentSymbolProvider(SEARCH_RESULT_SELECTOR, {\n\t\t\tprovideDocumentSymbols(document: vscode.TextDocument, token: vscode.CancellationToken): vscode.DocumentSymbol[] {\n\t\t\t\tconst results = parseSearchResults(document, token)\n\t\t\t\t\t.filter(isFileLine)\n\t\t\t\t\t.map(line => new vscode.DocumentSymbol(\n\t\t\t\t\t\tline.path,\n\t\t\t\t\t\t'',\n\t\t\t\t\t\tvscode.SymbolKind.File,\n\t\t\t\t\t\tline.allLocations.map(({ originSelectionRange }) => originSelectionRange!).reduce((p, c) => p.union(c), line.location.originSelectionRange!),\n\t\t\t\t\t\tline.location.originSelectionRange!,\n\t\t\t\t\t));\n\n\t\t\t\treturn results;\n\t\t\t}\n\t\t}),\n\n\t\tvscode.languages.registerCompletionItemProvider(SEARCH_RESULT_SELECTOR, {\n\t\t\tprovideCompletionItems(document: vscode.TextDocument, position: vscode.Position): vscode.CompletionItem[] {\n\n\t\t\t\tconst line = document.lineAt(position.line);\n\t\t\t\tif (position.line > 3) { return []; }\n\t\t\t\tif (position.character === 0 || (position.character === 1 && line.text === '#')) {\n\t\t\t\t\tconst header = Array.from({ length: DIRECTIVES.length }).map((_, i) => document.lineAt(i).text);\n\n\t\t\t\t\treturn DIRECTIVES\n\t\t\t\t\t\t.filter(suggestion => header.every(line => line.indexOf(suggestion) === -1))\n\t\t\t\t\t\t.map(flag => ({ label: flag, insertText: (flag.slice(position.character)) + ' ' }));\n\t\t\t\t}\n\n\t\t\t\tif (line.text.indexOf('# Flags:') === -1) { return []; }\n\n\t\t\t\treturn FLAGS\n\t\t\t\t\t.filter(flag => line.text.indexOf(flag) === -1)\n\t\t\t\t\t.map(flag => ({ label: flag, insertText: flag + ' ' }));\n\t\t\t}\n\t\t}, '#'),\n\n\t\tvscode.languages.registerDefinitionProvider(SEARCH_RESULT_SELECTOR, {\n\t\t\tprovideDefinition(document: vscode.TextDocument, position: vscode.Position, token: vscode.CancellationToken): vscode.DefinitionLink[] {\n\t\t\t\tconst lineResult = parseSearchResults(document, token)[position.line];\n\t\t\t\tif (!lineResult) { return []; }\n\t\t\t\tif (lineResult.type === 'file') {\n\t\t\t\t\treturn lineResult.allLocations;\n\t\t\t\t}\n\n\t\t\t\tconst location = lineResult.locations.find(l => l.originSelectionRange.contains(position));\n\t\t\t\tif (!location) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\tconst targetPos = new vscode.Position(\n\t\t\t\t\tlocation.targetSelectionRange.start.line,\n\t\t\t\t\tlocation.targetSelectionRange.start.character + (position.character - location.originSelectionRange.start.character)\n\t\t\t\t);\n\t\t\t\treturn [{\n\t\t\t\t\t...location,\n\t\t\t\t\ttargetSelectionRange: new vscode.Range(targetPos, targetPos),\n\t\t\t\t}];\n\t\t\t}\n\t\t}),\n\n\t\tvscode.languages.registerDocumentLinkProvider(SEARCH_RESULT_SELECTOR, {\n\t\t\tasync provideDocumentLinks(document: vscode.TextDocument, token: vscode.CancellationToken): Promise<vscode.DocumentLink[]> {\n\t\t\t\treturn parseSearchResults(document, token)\n\t\t\t\t\t.filter(isFileLine)\n\t\t\t\t\t.map(({ location }) => ({ range: location.originSelectionRange!, target: location.targetUri }));\n\t\t\t}\n\t\t}),\n\n\t\tvscode.window.onDidChangeActiveTextEditor(editor => {\n\t\t\tif (editor?.document.languageId === 'search-result') {\n\t\t\t\t// Clear the parse whenever we open a new editor.\n\t\t\t\t// Conservative because things like the URI might remain constant even if the contents change, and re-parsing even large files is relatively fast.\n\t\t\t\tcachedLastParse = undefined;\n\n\t\t\t\tdocumentChangeListener?.dispose();\n\t\t\t\tdocumentChangeListener = vscode.workspace.onDidChangeTextDocument(doc => {\n\t\t\t\t\tif (doc.document.uri === editor.document.uri) {\n\t\t\t\t\t\tdecorate(editor);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tdecorate(editor);\n\t\t\t}\n\t\t}),\n\n\t\t{ dispose() { cachedLastParse = undefined; documentChangeListener?.dispose(); } }\n\t);\n}\n\n\nfunction relativePathToUri(path: string, resultsUri: vscode.Uri): vscode.Uri | undefined {\n\n\tconst userDataPrefix = '(Settings) ';\n\tif (path.startsWith(userDataPrefix)) {\n\t\treturn vscode.Uri.file(path.slice(userDataPrefix.length)).with({ scheme: 'vscode-userdata' });\n\t}\n\n\tif (pathUtils.isAbsolute(path)) {\n\t\tif (/^[\\\\\\/]Untitled-\\d*$/.test(path)) {\n\t\t\treturn vscode.Uri.file(path.slice(1)).with({ scheme: 'untitled', path: path.slice(1) });\n\t\t}\n\t\treturn vscode.Uri.file(path);\n\t}\n\n\tif (path.indexOf('~/') === 0) {\n\t\tconst homePath = process.env.HOME || process.env.HOMEPATH || '';\n\t\treturn vscode.Uri.file(pathUtils.join(homePath, path.slice(2)));\n\t}\n\n\tconst uriFromFolderWithPath = (folder: vscode.WorkspaceFolder, path: string): vscode.Uri =>\n\t\tvscode.Uri.joinPath(folder.uri, path);\n\n\tif (vscode.workspace.workspaceFolders) {\n\t\tconst multiRootFormattedPath = /^(.*) • (.*)$/.exec(path);\n\t\tif (multiRootFormattedPath) {\n\t\t\tconst [, workspaceName, workspacePath] = multiRootFormattedPath;\n\t\t\tconst folder = vscode.workspace.workspaceFolders.filter(wf => wf.name === workspaceName)[0];\n\t\t\tif (folder) {\n\t\t\t\treturn uriFromFolderWithPath(folder, workspacePath);\n\t\t\t}\n\t\t}\n\t\telse if (vscode.workspace.workspaceFolders.length === 1) {\n\t\t\treturn uriFromFolderWithPath(vscode.workspace.workspaceFolders[0], path);\n\t\t} else if (resultsUri.scheme !== 'untitled') {\n\t\t\t// We're in a multi-root workspace, but the path is not multi-root formatted\n\t\t\t// Possibly a saved search from a single root session. Try checking if the search result document's URI is in a current workspace folder.\n\t\t\tconst prefixMatch = vscode.workspace.workspaceFolders.filter(wf => resultsUri.toString().startsWith(wf.uri.toString()))[0];\n\t\t\tif (prefixMatch) {\n\t\t\t\treturn uriFromFolderWithPath(prefixMatch, path);\n\t\t\t}\n\t\t}\n\t}\n\n\tconsole.error(`Unable to resolve path ${path}`);\n\treturn undefined;\n}\n\ntype ParsedSearchFileLine = { type: 'file'; location: vscode.LocationLink; allLocations: vscode.LocationLink[]; path: string };\ntype ParsedSearchResultLine = { type: 'result'; locations: Required<vscode.LocationLink>[]; isContext: boolean; prefixRange: vscode.Range };\ntype ParsedSearchResults = Array<ParsedSearchFileLine | ParsedSearchResultLine>;\nconst isFileLine = (line: ParsedSearchResultLine | ParsedSearchFileLine): line is ParsedSearchFileLine => line.type === 'file';\nconst isResultLine = (line: ParsedSearchResultLine | ParsedSearchFileLine): line is ParsedSearchResultLine => line.type === 'result';\n\n\nfunction parseSearchResults(document: vscode.TextDocument, token?: vscode.CancellationToken): ParsedSearchResults {\n\n\tif (cachedLastParse && cachedLastParse.uri === document.uri && cachedLastParse.version === document.version) {\n\t\treturn cachedLastParse.parse;\n\t}\n\n\tconst lines = document.getText().split(/\\r?\\n/);\n\tconst links: ParsedSearchResults = [];\n\n\tlet currentTarget: vscode.Uri | undefined = undefined;\n\tlet currentTargetLocations: vscode.LocationLink[] | undefined = undefined;\n\n\tfor (let i = 0; i < lines.length; i++) {\n\t\t// TODO: This is probably always false, given we're pegging the thread...\n\t\tif (token?.isCancellationRequested) { return []; }\n\t\tconst line = lines[i];\n\n\t\tconst fileLine = FILE_LINE_REGEX.exec(line);\n\t\tif (fileLine) {\n\t\t\tconst [, path] = fileLine;\n\n\t\t\tcurrentTarget = relativePathToUri(path, document.uri);\n\t\t\tif (!currentTarget) { continue; }\n\t\t\tcurrentTargetLocations = [];\n\n\t\t\tconst location: vscode.LocationLink = {\n\t\t\t\ttargetRange: new vscode.Range(0, 0, 0, 1),\n\t\t\t\ttargetUri: currentTarget,\n\t\t\t\toriginSelectionRange: new vscode.Range(i, 0, i, line.length),\n\t\t\t};\n\n\n\t\t\tlinks[i] = { type: 'file', location, allLocations: currentTargetLocations, path };\n\t\t}\n\n\t\tif (!currentTarget) { continue; }\n\n\t\tconst resultLine = RESULT_LINE_REGEX.exec(line);\n\t\tif (resultLine) {\n\t\t\tconst [, indentation, _lineNumber, separator] = resultLine;\n\t\t\tconst lineNumber = +_lineNumber - 1;\n\t\t\tconst metadataOffset = (indentation + _lineNumber + separator).length;\n\t\t\tconst targetRange = new vscode.Range(Math.max(lineNumber - 3, 0), 0, lineNumber + 3, line.length);\n\n\t\t\tconst locations: Required<vscode.LocationLink>[] = [];\n\n\t\t\tlet lastEnd = metadataOffset;\n\t\t\tlet offset = 0;\n\t\t\tELISION_REGEX.lastIndex = metadataOffset;\n\t\t\tfor (let match: RegExpExecArray | null; (match = ELISION_REGEX.exec(line));) {\n\t\t\t\tlocations.push({\n\t\t\t\t\ttargetRange,\n\t\t\t\t\ttargetSelectionRange: new vscode.Range(lineNumber, offset, lineNumber, offset),\n\t\t\t\t\ttargetUri: currentTarget,\n\t\t\t\t\toriginSelectionRange: new vscode.Range(i, lastEnd, i, ELISION_REGEX.lastIndex - match[0].length),\n\t\t\t\t});\n\n\t\t\t\toffset += (ELISION_REGEX.lastIndex - lastEnd - match[0].length) + Number(match[1]);\n\t\t\t\tlastEnd = ELISION_REGEX.lastIndex;\n\t\t\t}\n\n\t\t\tif (lastEnd < line.length) {\n\t\t\t\tlocations.push({\n\t\t\t\t\ttargetRange,\n\t\t\t\t\ttargetSelectionRange: new vscode.Range(lineNumber, offset, lineNumber, offset),\n\t\t\t\t\ttargetUri: currentTarget,\n\t\t\t\t\toriginSelectionRange: new vscode.Range(i, lastEnd, i, line.length),\n\t\t\t\t});\n\t\t\t}\n\t\t\t// only show result lines in file-level peek\n\t\t\tif (separator.includes(':')) {\n\t\t\t\tcurrentTargetLocations?.push(...locations);\n\t\t\t}\n\n\t\t\t// Allow line number, indentation, etc to take you to definition as well.\n\t\t\tconst convenienceLocation: Required<vscode.LocationLink> = {\n\t\t\t\ttargetRange,\n\t\t\t\ttargetSelectionRange: new vscode.Range(lineNumber, 0, lineNumber, 1),\n\t\t\t\ttargetUri: currentTarget,\n\t\t\t\toriginSelectionRange: new vscode.Range(i, 0, i, metadataOffset - 1),\n\t\t\t};\n\t\t\tlocations.push(convenienceLocation);\n\t\t\tlinks[i] = { type: 'result', locations, isContext: separator === ' ', prefixRange: new vscode.Range(i, 0, i, metadataOffset) };\n\t\t}\n\t}\n\n\tcachedLastParse = {\n\t\tversion: document.version,\n\t\tparse: links,\n\t\turi: document.uri\n\t};\n\n\treturn links;\n}\n"],"sourceRoot":""}