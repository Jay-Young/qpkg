{"version":3,"sources":["webpack://simple-browser/./src/dispose.ts","webpack://simple-browser/./src/simpleBrowserManager.ts","webpack://simple-browser/./src/simpleBrowserView.ts","webpack://simple-browser/external \"vscode\"","webpack://simple-browser/webpack/bootstrap","webpack://simple-browser/./src/extension.ts"],"names":["disposeAll","disposables","length","pop","dispose","a","b","this","c","value","push","constructor","undefined","show","inputUri","options","url","toString","view","SimpleBrowserView","create","restore","panel","state","onDispose","Disposable","extensionUri","showOptions","webview","vscode","window","createWebviewPanel","viewType","f","viewColumn","ViewColumn","Active","preserveFocus","enableScripts","enableForms","retainContextWhenHidden","localResourceRoots","Uri","joinPath","j","webviewPanel","super","h","EventEmitter","event","g","onDidReceiveMessage","e","type","parse","env","openExternal","onDidDispose","workspace","onDidChangeConfiguration","affectsConfiguration","configuration","getConfiguration","postMessage","focusLockEnabled","get","fire","html","k","reveal","nonce","text","possible","i","charAt","Math","floor","random","getNonce","mainJs","l","mainCss","codiconsUri","cspSource","JSON","stringify","replace","l10n","t","parts","asWebviewUri","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","enabledHosts","Set","context","manager","SimpleBrowserManager","subscriptions","registerWebviewPanelSerializer","deserializeWebviewPanel","async","commands","registerCommand","showInputBox","placeHolder","prompt","registerExternalUriOpener","canOpenExternalUri","uri","originalUri","URL","has","hostname","navigator","uiKind","UIKind","Web","ExternalUriOpenerPriority","Default","Option","None","openExternalUri","resolveUri","activeTextEditor","Beside","schemes","label"],"mappings":"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","file":"extension.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\n\nexport function disposeAll(disposables: vscode.Disposable[]) {\n\twhile (disposables.length) {\n\t\tconst item = disposables.pop();\n\t\titem?.dispose();\n\t}\n}\n\nexport abstract class Disposable {\n\tprivate a = false;\n\n\tprotected b: vscode.Disposable[] = [];\n\n\tpublic dispose(): any {\n\t\tif (this.a) {\n\t\t\treturn;\n\t\t}\n\t\tthis.a = true;\n\t\tdisposeAll(this.b);\n\t}\n\n\tprotected c<T extends vscode.Disposable>(value: T): T {\n\t\tif (this.a) {\n\t\t\tvalue.dispose();\n\t\t} else {\n\t\t\tthis.b.push(value);\n\t\t}\n\t\treturn value;\n\t}\n\n\tprotected get d() {\n\t\treturn this.a;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { ShowOptions, SimpleBrowserView } from './simpleBrowserView';\n\nexport class SimpleBrowserManager {\n\n\tprivate a?: SimpleBrowserView;\n\n\tconstructor(\n\t\tprivate readonly b: vscode.Uri,\n\t) { }\n\n\tdispose() {\n\t\tthis.a?.dispose();\n\t\tthis.a = undefined;\n\t}\n\n\tpublic show(inputUri: string | vscode.Uri, options?: ShowOptions): void {\n\t\tconst url = typeof inputUri === 'string' ? inputUri : inputUri.toString(true);\n\t\tif (this.a) {\n\t\t\tthis.a.show(url, options);\n\t\t} else {\n\t\t\tconst view = SimpleBrowserView.create(this.b, url, options);\n\t\t\tthis.c(view);\n\n\t\t\tthis.a = view;\n\t\t}\n\t}\n\n\tpublic restore(panel: vscode.WebviewPanel, state: any): void {\n\t\tconst url = state?.url ?? '';\n\t\tconst view = SimpleBrowserView.restore(this.b, url, panel);\n\t\tthis.c(view);\n\t\tthis.a ??= view;\n\t}\n\n\tprivate c(view: SimpleBrowserView) {\n\t\tview.onDispose(() => {\n\t\t\tif (this.a === view) {\n\t\t\t\tthis.a = undefined;\n\t\t\t}\n\t\t});\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { Disposable } from './dispose';\n\n\nexport interface ShowOptions {\n\treadonly preserveFocus?: boolean;\n\treadonly viewColumn?: vscode.ViewColumn;\n}\n\nexport class SimpleBrowserView extends Disposable {\n\n\tpublic static readonly viewType = 'simpleBrowser.view';\n\tprivate static readonly f = vscode.l10n.t(\"Simple Browser\");\n\n\tprivate readonly g: vscode.WebviewPanel;\n\n\tprivate readonly h = this.c(new vscode.EventEmitter<void>());\n\tpublic readonly onDispose = this.h.event;\n\n\tpublic static create(\n\t\textensionUri: vscode.Uri,\n\t\turl: string,\n\t\tshowOptions?: ShowOptions\n\t): SimpleBrowserView {\n\t\tconst webview = vscode.window.createWebviewPanel(SimpleBrowserView.viewType, SimpleBrowserView.f, {\n\t\t\tviewColumn: showOptions?.viewColumn ?? vscode.ViewColumn.Active,\n\t\t\tpreserveFocus: showOptions?.preserveFocus\n\t\t}, {\n\t\t\tenableScripts: true,\n\t\t\tenableForms: true,\n\t\t\tretainContextWhenHidden: true,\n\t\t\tlocalResourceRoots: [\n\t\t\t\tvscode.Uri.joinPath(extensionUri, 'media')\n\t\t\t]\n\t\t});\n\t\treturn new SimpleBrowserView(extensionUri, url, webview);\n\t}\n\n\tpublic static restore(\n\t\textensionUri: vscode.Uri,\n\t\turl: string,\n\t\twebview: vscode.WebviewPanel,\n\t): SimpleBrowserView {\n\t\treturn new SimpleBrowserView(extensionUri, url, webview);\n\t}\n\n\tprivate constructor(\n\t\tprivate readonly j: vscode.Uri,\n\t\turl: string,\n\t\twebviewPanel: vscode.WebviewPanel,\n\t) {\n\t\tsuper();\n\n\t\tthis.g = this.c(webviewPanel);\n\n\t\tthis.c(this.g.webview.onDidReceiveMessage(e => {\n\t\t\tswitch (e.type) {\n\t\t\t\tcase 'openExternal':\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst url = vscode.Uri.parse(e.url);\n\t\t\t\t\t\tvscode.env.openExternal(url);\n\t\t\t\t\t} catch {\n\t\t\t\t\t\t// Noop\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}));\n\n\t\tthis.c(this.g.onDidDispose(() => {\n\t\t\tthis.dispose();\n\t\t}));\n\n\t\tthis.c(vscode.workspace.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('simpleBrowser.focusLockIndicator.enabled')) {\n\t\t\t\tconst configuration = vscode.workspace.getConfiguration('simpleBrowser');\n\t\t\t\tthis.g.webview.postMessage({\n\t\t\t\t\ttype: 'didChangeFocusLockIndicatorEnabled',\n\t\t\t\t\tfocusLockEnabled: configuration.get<boolean>('focusLockIndicator.enabled', true)\n\t\t\t\t});\n\t\t\t}\n\t\t}));\n\n\t\tthis.show(url);\n\t}\n\n\tpublic override dispose() {\n\t\tthis.h.fire();\n\t\tsuper.dispose();\n\t}\n\n\tpublic show(url: string, options?: ShowOptions) {\n\t\tthis.g.webview.html = this.k(url);\n\t\tthis.g.reveal(options?.viewColumn, options?.preserveFocus);\n\t}\n\n\tprivate k(url: string) {\n\t\tconst configuration = vscode.workspace.getConfiguration('simpleBrowser');\n\n\t\tconst nonce = getNonce();\n\n\t\tconst mainJs = this.l('media', 'index.js');\n\t\tconst mainCss = this.l('media', 'main.css');\n\t\tconst codiconsUri = this.l('media', 'codicon.css');\n\n\t\treturn /* html */ `<!DOCTYPE html>\n\t\t\t<html>\n\t\t\t<head>\n\t\t\t\t<meta http-equiv=\"Content-type\" content=\"text/html;charset=UTF-8\">\n\n\t\t\t\t<meta http-equiv=\"Content-Security-Policy\" content=\"\n\t\t\t\t\tdefault-src 'none';\n\t\t\t\t\tfont-src ${this.g.webview.cspSource};\n\t\t\t\t\tstyle-src ${this.g.webview.cspSource};\n\t\t\t\t\tscript-src 'nonce-${nonce}';\n\t\t\t\t\tframe-src *;\n\t\t\t\t\t\">\n\n\t\t\t\t<meta id=\"simple-browser-settings\" data-settings=\"${escapeAttribute(JSON.stringify({\n\t\t\turl: url,\n\t\t\tfocusLockEnabled: configuration.get<boolean>('focusLockIndicator.enabled', true)\n\t\t}))}\">\n\n\t\t\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"${mainCss}\">\n\t\t\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"${codiconsUri}\">\n\t\t\t</head>\n\t\t\t<body>\n\t\t\t\t<header class=\"header\">\n\t\t\t\t\t<nav class=\"controls\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttitle=\"${vscode.l10n.t(\"Back\")}\"\n\t\t\t\t\t\t\tclass=\"back-button icon\"><i class=\"codicon codicon-arrow-left\"></i></button>\n\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttitle=\"${vscode.l10n.t(\"Forward\")}\"\n\t\t\t\t\t\t\tclass=\"forward-button icon\"><i class=\"codicon codicon-arrow-right\"></i></button>\n\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttitle=\"${vscode.l10n.t(\"Reload\")}\"\n\t\t\t\t\t\t\tclass=\"reload-button icon\"><i class=\"codicon codicon-refresh\"></i></button>\n\t\t\t\t\t</nav>\n\n\t\t\t\t\t<input class=\"url-input\" type=\"text\">\n\n\t\t\t\t\t<nav class=\"controls\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttitle=\"${vscode.l10n.t(\"Open in browser\")}\"\n\t\t\t\t\t\t\tclass=\"open-external-button icon\"><i class=\"codicon codicon-link-external\"></i></button>\n\t\t\t\t\t</nav>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"content\">\n\t\t\t\t\t<div class=\"iframe-focused-alert\">${vscode.l10n.t(\"Focus Lock\")}</div>\n\t\t\t\t\t<iframe sandbox=\"allow-scripts allow-forms allow-same-origin\"></iframe>\n\t\t\t\t</div>\n\n\t\t\t\t<script src=\"${mainJs}\" nonce=\"${nonce}\"></script>\n\t\t\t</body>\n\t\t\t</html>`;\n\t}\n\n\tprivate l(...parts: string[]): vscode.Uri {\n\t\treturn this.g.webview.asWebviewUri(vscode.Uri.joinPath(this.j, ...parts));\n\t}\n}\n\nfunction escapeAttribute(value: string | vscode.Uri): string {\n\treturn value.toString().replace(/\"/g, '&quot;');\n}\n\n\nfunction getNonce() {\n\tlet text = '';\n\tconst possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\tfor (let i = 0; i < 64; i++) {\n\t\ttext += possible.charAt(Math.floor(Math.random() * possible.length));\n\t}\n\treturn text;\n}\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SimpleBrowserManager } from './simpleBrowserManager';\nimport { SimpleBrowserView } from './simpleBrowserView';\n\ndeclare class URL {\n\tconstructor(input: string, base?: string | URL);\n\thostname: string;\n}\n\nconst openApiCommand = 'simpleBrowser.api.open';\nconst showCommand = 'simpleBrowser.show';\n\nconst enabledHosts = new Set<string>([\n\t'localhost',\n\t// localhost IPv4\n\t'127.0.0.1',\n\t// localhost IPv6\n\t'[0:0:0:0:0:0:0:1]',\n\t'[::1]',\n\t// all interfaces IPv4\n\t'0.0.0.0',\n\t// all interfaces IPv6\n\t'[0:0:0:0:0:0:0:0]',\n\t'[::]'\n]);\n\nconst openerId = 'simpleBrowser.open';\n\nexport function activate(context: vscode.ExtensionContext) {\n\n\tconst manager = new SimpleBrowserManager(context.extensionUri);\n\tcontext.subscriptions.push(manager);\n\n\tcontext.subscriptions.push(vscode.window.registerWebviewPanelSerializer(SimpleBrowserView.viewType, {\n\t\tdeserializeWebviewPanel: async (panel, state) => {\n\t\t\tmanager.restore(panel, state);\n\t\t}\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand(showCommand, async (url?: string) => {\n\t\tif (!url) {\n\t\t\turl = await vscode.window.showInputBox({\n\t\t\t\tplaceHolder: vscode.l10n.t(\"https://example.com\"),\n\t\t\t\tprompt: vscode.l10n.t(\"Enter url to visit\")\n\t\t\t});\n\t\t}\n\n\t\tif (url) {\n\t\t\tmanager.show(url);\n\t\t}\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand(openApiCommand, (url: vscode.Uri, showOptions?: {\n\t\tpreserveFocus?: boolean;\n\t\tviewColumn: vscode.ViewColumn;\n\t}) => {\n\t\tmanager.show(url, showOptions);\n\t}));\n\n\tcontext.subscriptions.push(vscode.window.registerExternalUriOpener(openerId, {\n\t\tcanOpenExternalUri(uri: vscode.Uri) {\n\t\t\t// We have to replace the IPv6 hosts with IPv4 because URL can't handle IPv6.\n\t\t\tconst originalUri = new URL(uri.toString(true));\n\t\t\tif (enabledHosts.has(originalUri.hostname)) {\n\t\t\t\treturn isWeb()\n\t\t\t\t\t? vscode.ExternalUriOpenerPriority.Default\n\t\t\t\t\t: vscode.ExternalUriOpenerPriority.Option;\n\t\t\t}\n\n\t\t\treturn vscode.ExternalUriOpenerPriority.None;\n\t\t},\n\t\topenExternalUri(resolveUri: vscode.Uri) {\n\t\t\treturn manager.show(resolveUri, {\n\t\t\t\tviewColumn: vscode.window.activeTextEditor ? vscode.ViewColumn.Beside : vscode.ViewColumn.Active\n\t\t\t});\n\t\t}\n\t}, {\n\t\tschemes: ['http', 'https'],\n\t\tlabel: vscode.l10n.t(\"Open in simple browser\"),\n\t}));\n}\n\nfunction isWeb(): boolean {\n\t// @ts-expect-error\n\treturn typeof navigator !== 'undefined' && vscode.env.uiKind === vscode.UIKind.Web;\n}\n"],"sourceRoot":""}