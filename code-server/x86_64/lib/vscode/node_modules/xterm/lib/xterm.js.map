{"version":3,"file":"xterm.js","mappings":"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7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,C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","sources":["webpack://xterm/webpack/universalModuleDefinition","webpack://xterm/./src/browser/AccessibilityManager.ts","webpack://xterm/./src/browser/Clipboard.ts","webpack://xterm/./src/browser/ColorContrastCache.ts","webpack://xterm/./src/browser/Lifecycle.ts","webpack://xterm/./src/browser/Linkifier2.ts","webpack://xterm/./src/browser/LocalizableStrings.ts","webpack://xterm/./src/browser/OscLinkProvider.ts","webpack://xterm/./src/browser/RenderDebouncer.ts","webpack://xterm/./src/browser/ScreenDprMonitor.ts","webpack://xterm/./src/browser/Terminal.ts","webpack://xterm/./src/browser/TimeBasedDebouncer.ts","webpack://xterm/./src/browser/Viewport.ts","webpack://xterm/./src/browser/decorations/BufferDecorationRenderer.ts","webpack://xterm/./src/browser/decorations/ColorZoneStore.ts","webpack://xterm/./src/browser/decorations/OverviewRulerRenderer.ts","webpack://xterm/./src/browser/input/CompositionHelper.ts","webpack://xterm/./src/browser/input/Mouse.ts","webpack://xterm/./src/browser/input/MoveToCell.ts","webpack://xterm/./src/browser/renderer/dom/DomRenderer.ts","webpack://xterm/./src/browser/renderer/dom/DomRendererRowFactory.ts","webpack://xterm/./src/browser/renderer/shared/Constants.ts","webpack://xterm/./src/browser/renderer/shared/RendererUtils.ts","webpack://xterm/./src/browser/selection/SelectionModel.ts","webpack://xterm/./src/browser/services/CharSizeService.ts","webpack://xterm/./src/browser/services/CharacterJoinerService.ts","webpack://xterm/./src/browser/services/CoreBrowserService.ts","webpack://xterm/./src/browser/services/MouseService.ts","webpack://xterm/./src/browser/services/RenderService.ts","webpack://xterm/./src/browser/services/SelectionService.ts","webpack://xterm/./src/browser/services/Services.ts","webpack://xterm/./src/browser/services/ThemeService.ts","webpack://xterm/./src/common/CircularList.ts","webpack://xterm/./src/common/Clone.ts","webpack://xterm/./src/common/Color.ts","webpack://xterm/./src/common/CoreTerminal.ts","webpack://xterm/./src/common/EventEmitter.ts","webpack://xterm/./src/common/InputHandler.ts","webpack://xterm/./src/common/Lifecycle.ts","webpack://xterm/./src/common/MultiKeyMap.ts","webpack://xterm/./src/common/Platform.ts","webpack://xterm/./src/common/SortedList.ts","webpack://xterm/./src/common/TaskQueue.ts","webpack://xterm/./src/common/WindowsMode.ts","webpack://xterm/./src/common/buffer/AttributeData.ts","webpack://xterm/./src/common/buffer/Buffer.ts","webpack://xterm/./src/common/buffer/BufferLine.ts","webpack://xterm/./src/common/buffer/BufferRange.ts","webpack://xterm/./src/common/buffer/BufferReflow.ts","webpack://xterm/./src/common/buffer/BufferSet.ts","webpack://xterm/./src/common/buffer/CellData.ts","webpack://xterm/./src/common/buffer/Constants.ts","webpack://xterm/./src/common/buffer/Marker.ts","webpack://xterm/./src/common/data/Charsets.ts","webpack://xterm/./src/common/data/EscapeSequences.ts","webpack://xterm/./src/common/input/Keyboard.ts","webpack://xterm/./src/common/input/TextDecoder.ts","webpack://xterm/./src/common/input/UnicodeV6.ts","webpack://xterm/./src/common/input/WriteBuffer.ts","webpack://xterm/./src/common/input/XParseColor.ts","webpack://xterm/./src/common/parser/Constants.ts","webpack://xterm/./src/common/parser/DcsParser.ts","webpack://xterm/./src/common/parser/EscapeSequenceParser.ts","webpack://xterm/./src/common/parser/OscParser.ts","webpack://xterm/./src/common/parser/Params.ts","webpack://xterm/./src/common/public/AddonManager.ts","webpack://xterm/./src/common/public/BufferApiView.ts","webpack://xterm/./src/common/public/BufferLineApiView.ts","webpack://xterm/./src/common/public/BufferNamespaceApi.ts","webpack://xterm/./src/common/public/ParserApi.ts","webpack://xterm/./src/common/public/UnicodeApi.ts","webpack://xterm/./src/common/services/BufferService.ts","webpack://xterm/./src/common/services/CharsetService.ts","webpack://xterm/./src/common/services/CoreMouseService.ts","webpack://xterm/./src/common/services/CoreService.ts","webpack://xterm/./src/common/services/DecorationService.ts","webpack://xterm/./src/common/services/InstantiationService.ts","webpack://xterm/./src/common/services/LogService.ts","webpack://xterm/./src/common/services/OptionsService.ts","webpack://xterm/./src/common/services/OscLinkService.ts","webpack://xterm/./src/common/services/ServiceRegistry.ts","webpack://xterm/./src/common/services/Services.ts","webpack://xterm/./src/common/services/UnicodeService.ts","webpack://xterm/webpack/bootstrap","webpack://xterm/./src/browser/public/Terminal.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityContainer: HTMLElement;\n\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n  private _liveRegionDebouncer: IRenderDebouncer;\n\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityContainer = document.createElement('div');\n    this._accessibilityContainer.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityContainer.appendChild(this._rowContainer);\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityContainer.appendChild(this._liveRegion);\n    this._liveRegionDebouncer = this.register(new TimeBasedDebouncer(this._announceCharacters.bind(this)));\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityContainer);\n\n    this.register(this._liveRegionDebouncer);\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor(window);\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n\n    this._refreshRows();\n    this.register(toDisposable(() => {\n      this._accessibilityContainer.remove();\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityContainer.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      this._liveRegion.remove();\n    }\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._liveRegionDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityContainer.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray, toDisposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _wasResized: boolean = false;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n    }));\n    // Listen to resize to catch the case where it's resized and the cursor is out of the viewport.\n    this.register(this._bufferService.onResize(() => {\n      this._clearCurrentLink();\n      this._wasResized = true;\n    }));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y || this._wasResized) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      this._wasResized = false;\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Listen to viewport changes to re-render the link under the cursor (only when the line the\n      // link is on changes)\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // Sanity check, this shouldn't happen in practice as this listener would be disposed\n          if (!this._currentLink) {\n            return;\n          }\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          const end = this._bufferService.buffer.ydisp + 1 + e.end;\n          // Only clear the link if the viewport change happened on this line\n          if (this._currentLink.link.range.start.y >= start && this._currentLink.link.range.end.y <= end) {\n            this._clearCurrentLink(start, end);\n            if (this._lastMouseEvent && this._element) {\n              // re-eval previously active link after changes\n              const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService!);\n              if (position) {\n                this._askForLink(position, false);\n              }\n            }\n          }\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink, ILinkProvider } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  constructor(private _parentWindow: Window) {\n    super();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this.register(toDisposable(() => {\n      this.clearListener();\n    }));\n  }\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(this._parentWindow.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, IViewport, ILinkifier2, CharacterJoinerHandler, IBufferRange, IBufferElementProvider } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ILinkProvider, IDecorationOptions, IDecoration } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IColorEvent, ColorIndex, ColorRequestType } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ICoreBrowserService, ICharacterJoinerService, IThemeService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { color, rgba } from 'common/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { toDisposable } from 'common/Lifecycle';\nimport { ThemeService } from 'browser/services/ThemeService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case ColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case ColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case ColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const channels = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = rgba.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = rgba.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager && this._renderService) {\n        this._accessibilityManager = this._instantiationService.createInstance(AccessibilityManager, this);\n      }\n    } else {\n      this._accessibilityManager?.dispose();\n      this._accessibilityManager = undefined;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea, this._document.defaultView ?? window);\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea\n    );\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = this._instantiationService.createInstance(AccessibilityManager, this);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this.element!, this.screenElement!, this._viewportElement!, this.linkifier2);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderService.dimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._scrollLines(0);\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n\n  public getBufferElements(startLine: number, endLine?: number): { bufferElements: HTMLElement[], cursorElement?: HTMLElement } {\n    let currentLine: string = '';\n    let cursorElement: HTMLElement | undefined;\n    const bufferElements: HTMLElement[] = [];\n    const end = endLine ?? this._bufferService.buffer.lines.length;\n    const lines = this._bufferService.buffer.lines;\n    for (let i = startLine; i < end; i++) {\n      const line = lines.get(i);\n      if (!line) {\n        continue;\n      }\n      const isWrapped = lines.get(i + 1)?.isWrapped;\n      currentLine += line.translateToString(!isWrapped);\n      if (!isWrapped || i === lines.length - 1) {\n        const div = document.createElement('div');\n        div.textContent = currentLine;\n        bufferElements.push(div);\n        if (currentLine.length > 0) {\n          cursorElement = div;\n        }\n        currentLine = '';\n      }\n    }\n    return { bufferElements, cursorElement };\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.classList.toggle('xterm-decoration-top-layer', decoration?.options?.layer === 'top');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowseService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(this._coreBrowseService.window, 'resize', () => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowseService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowseService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowseService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowseService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowseService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BOLD_CLASS, CURSOR_BLINK_CLASS, CURSOR_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DIM_CLASS, DomRendererRowFactory, ITALIC_CLASS } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _cellToRowElements: Int16Array[] = [];\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(this._themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(this._themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      this._rowContainer.remove();\n      this._selectionContainer.remove();\n      this._themeStyleElement.remove();\n      this._dimensionsStyleElement.remove();\n    }));\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.css.cell.width}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      `}`;\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .xterm-dim {` +\n      ` color: ${color.multiplyOpacity(colors.foreground, 0.5).css};` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${colors.cursorAccent.css};` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} ,` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} ,` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} ` +\n      `{` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css};` +\n      ` color: ${colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i}.${DIM_CLASS} { color: ${color.multiplyOpacity(c, 0.5).css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR}.${DIM_CLASS} { color: ${color.multiplyOpacity(color.opaque(colors.background), 0.5).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${colStart * this.dimensions.css.cell.width}px`;\n    element.style.width = `${this.dimensions.css.cell.width * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    // Refresh CSS\n    this._injectCss(this._themeService.colors);\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      if (!this._cellToRowElements[y] || this._cellToRowElements[y].length !== this._bufferService.cols) {\n        this._cellToRowElements[y] = new Int16Array(this._bufferService.cols);\n      }\n      rowElement.replaceChildren(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.css.cell.width, this._bufferService.cols, this._cellToRowElements[y]));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    /**\n     * NOTE: The linkifier may send out of viewport y-values if:\n     * - negative y-value: the link started at a higher line\n     * - y-value >= maxY: the link ends at a line below viewport\n     *\n     * For negative y-values we can simply adjust x = 0,\n     * as higher up link start means, that everything from\n     * (0,0) is a link under top-down-left-right char progression\n     *\n     * Additionally there might be a small chance of out-of-sync x|y-values\n     * from a race condition of render updates vs. link event handler execution:\n     * - (sync) resize: chances terminal buffer in sync, schedules render update async\n     * - (async) link handler race condition: new buffer metrics, but still on old render state\n     * - (async) render update: brings term metrics and render state back in sync\n     */\n    if (y < 0) x = 0;\n    if (y2 < 0) x2 = 0;\n\n    // avoid out-of-sync y-values, simply clamp into valid area\n    const maxY = this._cellToRowElements.length - 1;\n    y = Math.max(Math.min(y, maxY), 0);\n    y2 = Math.max(Math.min(y2, maxY), 0);\n    const elemY = this._cellToRowElements[y];\n    const elemY2 = this._cellToRowElements[y2];\n    if (x >= elemY.length || x2 >= elemY2.length) {\n      // avoid out-of-sync x-values\n      // simply exit early, gets fixed by the next render update\n      return;\n    }\n    x = elemY[x];\n    x2 = elemY2[x2];\n\n    if (x === -1 || x2 === -1) {\n      return;\n    }\n\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = row.children[x] as HTMLElement;\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const OVERLINE_CLASS = 'xterm-overline';\nexport const STRIKETHROUGH_CLASS = 'xterm-strikethrough';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number, cellMap: Int16Array): DocumentFragment {\n    // NOTE: `cellMap` maps cell positions to a span element index in a row.\n    // All positions should be updated, even skipped ones after wide chars or left overs at the end,\n    // otherwise the mouse hover logic might mark the wrong elements as underlined.\n\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    const colors = this._themeService.colors;\n    let elemIndex = -1;\n\n    let x = 0;\n    for (; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      // still have to update cellMap with current element index\n      if (width === 0) {\n        cellMap[x] = elemIndex;\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(`${UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (charElement.textContent === ' ') {\n          charElement.textContent = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isOverline()) {\n        charElement.classList.add(OVERLINE_CLASS);\n        if (charElement.textContent === ' ') {\n          charElement.textContent = '\\xa0'; // = &nbsp;\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        charElement.classList.add(STRIKETHROUGH_CLASS);\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection foreground if applicable\n      const isInSelection = this._isCellInSelection(x, row);\n      if (!isTop) {\n        if (colors.selectionForeground && isInSelection) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If in the selection, force the element to be above the selection to improve contrast and\n      // support opaque selections\n      if (isInSelection) {\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        isTop = true;\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        charElement.classList.add(`xterm-decoration-top`);\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      fragment.appendChild(charElement);\n      cellMap[x] = ++elemIndex;\n\n      x = lastCharX;\n    }\n\n    // since the loop above might exit early not handling all cells,\n    // also set remaining cell positions to last element index\n    if (x < cols - 1) {\n      cellMap.subarray(x).fill(++elemIndex);\n    }\n\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = this._themeService.colors.contrastCache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, this._optionsService.rawOptions.minimumContrastRatio);\n      this._themeService.colors.contrastCache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IOffset, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    public readonly window: Window & typeof globalThis\n  ) {\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n\n    // due to rounding issues in zoom states pixel values might be negative or overflow actual canvas\n    // ignore those events effectively narrowing mouse area a tiny bit at the edges\n    if (!this._charSizeService.hasValidSize\n      || coords[0] < 0\n      || coords[1] < 0\n      || coords[0] >= this._renderService.dimensions.css.canvas.width\n      || coords[1] >= this._renderService.dimensions.css.canvas.height) {\n      return undefined;\n    }\n\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IRenderDebouncerWithCallback, ReadonlyColorSet } from 'browser/Types';\nimport { IOptionsService, IBufferService, IDecorationService } from 'common/services/Services';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { ThemeService } from 'browser/services/ThemeService';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: IRenderer | undefined;\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _pausedResizeTask = new DebouncedIdleTask();\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange =  this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer?.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer(coreBrowserService.window, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor(coreBrowserService.window);\n    this._screenDprMonitor.setListener(() => this.handleDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(coreBrowserService.window, 'resize', () => this.handleDevicePixelRatioChange()));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in coreBrowserService.window) {\n      const observer = new coreBrowserService.window.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer) {\n      return;\n    }\n\n    // Since this is debounced, a resize event could have happened between the time a refresh was\n    // requested and when this triggers. Clamp the values of start and end to ensure they're valid\n    // given the current viewport state.\n    start = Math.min(start, this._rowCount - 1);\n    end = Math.min(end, this._rowCount - 1);\n\n    // Render\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.css.canvas.width === this._canvasWidth && this._renderer.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer?.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer!.handleResize(cols, rows));\n    } else {\n      this._renderer.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer?.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService, ICoreBrowserService } from 'browser/services/Services';\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { ColorIndex, IDisposable } from 'common/Types';\nimport { ITheme } from 'common/services/Services';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n  /**\n   * Parent window that the terminal is rendered into. DOM and rendering APIs\n   * (e.g. requestAnimationFrame) should be invoked in the context of this\n   * window.\n   */\n  readonly window: Window & typeof globalThis;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: ColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { ColorIndex, IColor } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache;\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._contrastCache = new ColorContrastCache();\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: ColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: ColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case ColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case ColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case ColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsWrappingHeuristics: IDisposable | undefined;\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onMultipleOptionChange(['windowsMode', 'windowsPty'], () => this._handleWindowsPtyOptionChange()));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n\n    this.register(toDisposable(() => {\n      this._windowsWrappingHeuristics?.dispose();\n      this._windowsWrappingHeuristics = undefined;\n    }));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    this._handleWindowsPtyOptionChange();\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n\n  private _handleWindowsPtyOptionChange(): void {\n    let value = false;\n    const windowsPty = this.optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber !== undefined && windowsPty.buildNumber !== undefined) {\n      value = !!(windowsPty.backend === 'conpty' && windowsPty.buildNumber < 21376);\n    } else if (this.optionsService.rawOptions.windowsMode) {\n      value = true;\n    }\n    if (value) {\n      this._enableWindowsWrappingHeuristics();\n    } else {\n      this._windowsWrappingHeuristics?.dispose();\n      this._windowsWrappingHeuristics = undefined;\n    }\n  }\n\n  protected _enableWindowsWrappingHeuristics(): void {\n    if (!this._windowsWrappingHeuristics) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsWrappingHeuristics = toDisposable(() => {\n        for (const d of disposables) {\n          d.dispose();\n        }\n      });\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via xterm-addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowTracker.start, this._dirtyRowTracker.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    } else {\n      // There was an explicit line feed (not just a carriage return), so clear the wrapped state of\n      // the line. This is particularly important on conpty/Windows where revisiting lines to\n      // reprint is common, especially on resize. Note that the windowsMode wrapped line heuristics\n      // can mess with this so windowsMode should be disabled, which is recommended on Windows build\n      // 21376 and above.\n      this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData(),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y);\n    if (line) {\n      line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n      this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_RESET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_SET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 67) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 53        | Overlined.                                               | #Y      |\n   * | 55        | Not Overlined.                                           | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 53) {\n        // overline\n        attr.bg |= BgFlags.OVERLINE;\n      } else if (p === 55) {\n        // not overline\n        attr.bg &= ~BgFlags.OVERLINE;\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from `XParseColor` (see OSC 10 for supported formats).\n   * There may be multipe `c ; spec` pairs present in the same instruction.\n   * If `spec` contains `?` the terminal returns a sequence with the currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (0 <= index && index < 256) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character. Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover feedback.\n   * Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [ColorIndex.FOREGROUND, ColorIndex.BACKGROUND, ColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (0 <= index && index < 256) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n   * `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value), 0, this._array.length - 1);\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    return this._array.values();\n  }\n\n  private _search(key: number, min: number, max: number): number {\n    if (max < min) {\n      return min;\n    }\n    let mid = Math.floor((min + max) / 2);\n    const midKey = this._getKey(this._array[mid]);\n    if (midKey > key) {\n      return this._search(key, min, mid - 1);\n    }\n    if (midKey < key) {\n      return this._search(key, mid + 1, max);\n    }\n    // Value found! Since keys can be duplicates, move the result index back to the lowest index\n    // that matches the key.\n    while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n      mid--;\n    }\n    return mid;\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n  public isOverline(): number      { return this.bg & BgFlags.OVERLINE; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { IdleTaskQueue } from 'common/TaskQueue';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode || this._optionsService.rawOptions.windowsPty.backend !== undefined || this._optionsService.rawOptions.windowsPty.buildNumber !== undefined) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted lines,\n      // which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    const windowsPty = this._optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber) {\n      return this._hasScrollback && windowsPty.backend === 'conpty' && windowsPty.buildNumber >= 21376;\n    }\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags, FgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000,\n  OVERLINE = 0x40000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private _disposables: IDisposable[] = [];\n\n  private _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = new EventEmitter<IBufferApi>();\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecorationOptions, IDecoration, IMarker, IEvent } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => {\n      for (const d of this._decorations.values()) {\n        this._onDecorationRemoved.fire(d);\n      }\n      this.reset();\n    }));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n\n  public dispose(): void {\n    for (const d of this._decorations.values()) {\n      this._onDecorationRemoved.fire(d);\n    }\n    this.reset();\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public get isDisposed(): boolean { return this._isDisposed; }\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, (this._optionsService.options.logger ? '' : LOG_PREFIX) + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(this._optionsService.options.logger?.debug.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(this._optionsService.options.logger?.info.bind(this._optionsService.options.logger) ?? console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(this._optionsService.options.logger?.warn.bind(this._optionsService.options.logger) ?? console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(this._optionsService.options.logger?.error.bind(this._optionsService.options.logger) ?? console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  logger: null,\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  windowsPty: {},\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n      case 'windowsPty':\n        value = value ?? {};\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler, IWindowsPty, ILogger } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<TArgs extends any[]> = TArgs extends [] ? []\n  : TArgs extends [...infer TFirst, infer TLast] ? TLast extends IBrandedService ? GetLeadingNonServiceArgs<TFirst> : TArgs\n    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  logger?: ILogger | null;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowsPty?: IWindowsPty;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, IMarker, IDisposable, ILocalizableStrings, ITerminalAddon, IBufferNamespace as IBufferNamespaceApi, IParser, ILinkProvider, IUnicodeHandling, IModes, IDecorationOptions, IDecoration, IBufferElementProvider } from 'xterm';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ITerminalOptions } from 'common/Types';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","a","i","self","AccessibilityManager","Disposable","constructor","_terminal","_renderService","super","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","this","_accessibilityContainer","document","createElement","classList","add","_rowContainer","setAttribute","_rowElements","rows","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","e","_handleBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","length","_refreshRowsDimensions","_liveRegion","_liveRegionDebouncer","register","TimeBasedDebouncer","_announceCharacters","bind","element","Error","insertAdjacentElement","onResize","_handleResize","onRender","_refreshRows","start","end","onScroll","onA11yChar","char","_handleChar","onLineFeed","onA11yTab","spaceCount","_handleTab","onKey","_handleKey","key","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","window","setListener","addDisposableDomListener","toDisposable","remove","MAX_ROWS_TO_READ","shift","textContent","Strings","tooMuchOutput","isMac","parentNode","setTimeout","keyChar","test","push","refresh","position","boundaryElement","target","beforeBoundaryElement","getAttribute","buffer","lines","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","removeEventListener","newElement","unshift","scrollLines","focus","preventDefault","stopImmediatePropagation","children","tabIndex","_refreshRowDimensions","dimensions","css","cell","height","style","width","canvas","IRenderService","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","decPrivateModes","triggerDataEvent","value","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","zIndex","selectionService","clipboardData","setData","selectionText","stopPropagation","getData","shouldSelectWord","rightClickSelect","select","_color","TwoKeyMap","_css","setCss","bg","fg","set","getCss","get","setColor","getColor","clear","node","type","handler","options","disposed","dispose","Linkifier2","_bufferService","_linkProviders","_linkCacheDisposables","_isMouseOut","_wasResized","_activeLine","_onShowLinkUnderline","EventEmitter","onShowLinkUnderline","event","_onHideLinkUnderline","onHideLinkUnderline","getDisposeArrayDisposable","_lastMouseEvent","undefined","_clearCurrentLink","currentLink","_currentLink","registerLinkProvider","linkProvider","providerIndex","indexOf","splice","attachToDom","mouseService","renderService","_element","_mouseService","_handleMouseMove","_handleMouseDown","_handleMouseUp","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","x","y","_handleHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","entries","_checkLinkProviderResult","provideLinks","links","linksWithState","map","size","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","startX","range","endX","cols","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","_mouseDownLink","activate","startRow","endRow","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","Object","defineProperties","v","toggle","_fireUnderlineEvent","onRenderedViewportChange","ydisp","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","fire","leave","lower","upper","current","coords","getCoords","x1","y1","x2","y2","IBufferService","promptLabel","OscLinkProvider","_optionsService","_oscLinkService","callback","line","result","linkHandler","rawOptions","CellData","lineLength","getTrimmedLength","currentLinkId","currentStart","finishLink","hasContent","loadCell","hasExtendedAttrs","extended","urlId","getLinkData","uri","ignoreLink","allowNonHttpProtocols","parsed","URL","includes","protocol","defaultActivate","confirm","newWindow","open","opener","location","href","console","warn","IOptionsService","IOscLinkService","_parentWindow","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","addRefreshCallback","requestAnimationFrame","_innerRefresh","rowStart","rowEnd","rowCount","_rowCount","_rowStart","Math","min","_rowEnd","max","_runRefreshCallbacks","_currentDevicePixelRatio","devicePixelRatio","clearListener","listener","_listener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","Terminal","CoreTerminal","browser","Browser","_keyDownHandled","_keyDownSeen","_keyPressHandled","_unprocessedDeadKey","_onCursorMove","onCursorMove","_onKey","_onRender","_onSelectionChange","onSelectionChange","_onTitleChange","onTitleChange","_onBell","onBell","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_onWillOpen","_setup","linkifier2","_instantiationService","createInstance","_decorationService","DecorationService","setService","IDecorationService","_inputHandler","onRequestBell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","_afterResize","_customKeyEventHandler","onFocus","onWillOpen","_themeService","req","acc","ident","channels","color","toColorRGB","colors","ansi","C0","ESC","toRgbString","C1_ESCAPED","ST","modifyColors","rgba","toColor","narrowedAcc","restoreColor","buffers","active","preventScroll","_handleScreenReaderModeOptionChange","_accessibilityManager","_handleTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_handleTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","hasSelection","copyHandler","_selectionService","pasteHandlerWrapper","handlePasteEvent","isFirefox","button","rightClickHandler","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","parent","isConnected","_logService","debug","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","isChromeOS","_coreBrowserService","CoreBrowserService","defaultView","ICoreBrowserService","_charSizeService","CharSizeService","ICharSizeService","ThemeService","IThemeService","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","RenderService","resize","_compositionView","CompositionHelper","hasRenderer","setRenderer","_createRenderer","MouseService","IMouseService","viewport","Viewport","amount","onRequestSyncScrollBar","syncScrollArea","handleCursorMove","handleResize","handleBlur","handleFocus","SelectionService","ISelectionService","onRequestScrollLines","suppressScrollEvent","onRequestRedraw","handleSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","BufferDecorationRenderer","handleMouseDown","coreMouseService","areMouseEventsActive","disable","enable","screenReaderMode","optionsService","onSpecificOptionChange","overviewRulerWidth","_overviewRulerRenderer","OverviewRulerRenderer","measure","bindMouse","DomRenderer","el","sendEvent","getMouseReportCoords","but","action","overrideType","buttons","getLinesScrolled","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","sequence","applicationCursorKeys","data","abs","handleWheel","handleTouchStart","handleTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","source","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","addMarker","cursorYOffset","registerDecoration","decorationOptions","column","setSelection","getSelection","getSelectionPosition","selectionStart","selectionEnd","clearSelection","selectAll","selectLines","shouldIgnoreComposition","macOptionIsMeta","keydown","scrollOnUserInput","scrollToBottom","evaluateKeyboardEvent","scrollCount","_isThirdLevelShift","metaKey","charCodeAt","ETX","CR","domEvent","thirdLevelKey","isWindows","getModifierState","keyCode","wasModifierKeyOnlyEvent","charCode","which","String","fromCharCode","inputType","composed","hasValidSize","clearAllMarkers","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","toFixed","canvasHeight","GET_CELL_SIZE_PIXELS","force","cancelEvents","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","clearTimeout","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","_scrollLines","_scrollArea","themeService","scrollBarWidth","_currentRowHeight","_currentDeviceCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","_smoothScrollState","startTime","origin","offsetWidth","_handleScroll","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","_handleThemeChange","onChangeColors","backgroundColor","background","_refresh","immediate","device","dpr","offsetHeight","newBufferHeight","round","scrollTop","offsetParent","diff","_smoothScroll","_isDisposed","percent","_smoothScrollPercent","_clearSmoothScrollState","smoothScrollDuration","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","scrollHeight","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","getBufferElements","startLine","endLine","cursorElement","currentLine","bufferElements","isWrapped","translateToString","div","DOM_DELTA_PIXEL","floor","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","_screenElement","_decorationElements","_altBufferIsActive","_dimensionsChanged","_container","_doRefreshDecorations","_queueRefresh","onDecorationRegistered","onDecorationRemoved","decoration","_removeDecoration","_renderDecoration","_refreshStyle","_refreshXPosition","_createElement","layer","marker","display","onRenderEmitter","anchor","right","delete","_zones","_zonePool","_zonePoolIndex","_linePadding","full","center","zones","addDecoration","overviewRulerOptions","z","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","setPadding","padding","zone","drawHeight","drawWidth","drawX","_coreBrowseService","_colorZoneStore","ColorZoneStore","_shouldUpdateDimensions","_shouldUpdateAnchor","_lastKnownBufferLength","_canvas","_refreshCanvasDimensions","parentElement","insertBefore","ctx","getContext","_ctx","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","_width","normal","_refreshDrawHeightConstants","_refreshColorZonePadding","_containerHeight","clientHeight","_refreshDrawConstants","outerWidth","innerWidth","ceil","pixelsPerLine","nonFullHeight","_refreshDecorations","clearRect","lineWidth","_renderColorZone","fillStyle","fillRect","updateCanvasDimensions","updateAnchor","_textarea","_coreService","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","currentCompositionPosition","input","substring","oldValue","newValue","DEL","dontRecurse","fontFamily","fontSize","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","elementStyle","getComputedStyle","leftPadding","parseInt","getPropertyValue","topPadding","colCount","hasValidCharSize","cssCellWidth","cssCellHeight","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","rowsToMove","wrappedRows","direction","verticalDirection","wrappedRowsCount","repeat","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","translateBufferLineToString","mod","count","str","rpt","targetX","resetStartingRow","horizontalDirection","moveToRequestedCol","rowDifference","currX","colsFromRowEnd","TERMINAL_CLASS_PREFIX","FOCUS_CLASS","nextTerminalId","_linkifier2","instantiationService","_terminalClass","_cellToRowElements","_refreshRowElements","_selectionContainer","createRenderDimensions","_updateDimensions","onOptionChange","_handleOptionsChanged","_injectCss","_rowFactory","DomRendererRowFactory","_handleLinkHover","_handleLinkLeave","_themeStyleElement","_dimensionsStyleElement","letterSpacing","overflow","styles","_terminalSelector","foreground","multiplyOpacity","BOLD_CLASS","fontWeight","fontWeightBold","ITALIC_CLASS","cursor","cursorAccent","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","CURSOR_BLINK_CLASS","cursorWidth","selectionBackgroundOpaque","selectionInactiveBackgroundOpaque","c","DIM_CLASS","INVERTED_DEFAULT_COLOR","opaque","handleDevicePixelRatioChange","handleCharSizeChanged","renderRows","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","documentFragment","isXFlipped","_createSelectionElement","middleRowsCount","colStart","colEnd","replaceChildren","cursorAbsoluteY","cursorBlink","rowElement","lineData","cursorStyle","Int16Array","createRow","_setCellUnderline","enabled","maxY","elemY","elemY2","span","textDecoration","IInstantiationService","UNDERLINE_CLASS","OVERLINE_CLASS","STRIKETHROUGH_CLASS","_workCell","_columnSelectMode","_selectionStart","_selectionEnd","isCursorRow","cellMap","joinedRanges","getJoinedCharacters","getCode","NULL_CELL_CODE","elemIndex","isJoined","lastCharX","JoinedCellData","charElement","isCursorHidden","isBold","isItalic","isDim","isInvisible","WHITESPACE_CELL_CHAR","getChars","isUnderline","underlineStyle","isUnderlineColorDefault","isUnderlineColorRGB","textDecorationColor","AttributeData","getUnderlineColor","join","drawBoldTextInBrightColors","isOverline","isStrikethrough","getFgColor","fgColorMode","getFgColorMode","getBgColor","bgColorMode","getBgColorMode","isInverse","temp","temp2","bgOverride","fgOverride","isTop","forEachDecorationAtCell","d","backgroundColorRGB","foregroundColorRGB","isInSelection","_isCellInSelection","resolvedBg","selectionForeground","isFocused","_addStyle","padStart","toString","_applyMinimumContrast","subarray","fill","minimumContrastRatio","excludeFromContrastRatioDemands","adjustedColor","contrastCache","ensureContrastRatio","padChar","DIM_OPACITY","TEXT_BASELINE","isLegacyEdge","isPowerlineGlyph","codepoint","isBoxOrBlockGlyph","isSelectAllActive","selectionStartLength","finalSelectionStart","areSelectionValuesReversed","finalSelectionEnd","startPlusLength","handleTrim","_onCharSizeChange","onCharSizeChange","_measureStrategy","DomMeasureStrategy","onMultipleOptionChange","_parentElement","_result","_measureElement","geometry","firstCell","chars","content","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","id","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","getFg","rangeAttrBG","getBg","_getJoinedRanges","startIndex","endIndex","allJoinedRanges","error","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","static","newRange","inRange","_isFocused","_cachedIsFocused","hasFocus","queueMicrotask","decorationService","coreBrowserService","_pausedResizeTask","DebouncedIdleTask","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","onRefreshRequest","_renderer","_renderDebouncer","RenderDebouncer","_renderRows","_fullRefresh","observer","IntersectionObserver","_handleIntersectionChange","threshold","observe","disconnect","entry","isIntersecting","intersectionRatio","flush","isRedrawOnly","_fireOnCanvasResize","renderer","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","RegExp","_linkifier","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","_mouseMoveListener","_mouseUpListener","onUserInput","_trimListener","onTrim","_handleTrim","_handleBufferActivate","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","lineText","startRowEndCol","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","isCellInSelection","_selectWordAtCursor","allowWhitespaceOnlySelection","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","offset","terminalHeight","macOptionClickForcesSelection","timeStamp","_handleIncrementalClick","detail","_handleSingleClick","_handleDoubleClick","_handleTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","setInterval","_dragScroll","clearInterval","hasWidth","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","altClickMovesCursor","coordinates","moveToCellSequence","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","slice","trim","getCodePoint","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","first","last","createDecorator","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","freeze","r","g","b","toCss","toRgba","_onChangeColors","_contrastCache","ColorContrastCache","_colors","selectionBackgroundTransparent","blend","selectionInactiveBackgroundTransparent","_updateRestoreColors","_setTheme","theme","parseColor","selectionBackground","selectionInactiveBackground","NULL_COLOR","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","extendedAnsi","colorCount","slot","_restoreColor","_restoreColors","cssString","fallback","CircularList","_maxLength","onDeleteEmitter","onDelete","onInsertEmitter","onInsert","onTrimEmitter","_array","Array","_startIndex","_length","maxLength","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","isFull","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","clone","val","depth","clonedObject","isArray","$r","$g","$b","$a","rgb","toPaddedHex","s","contrastRatio","l1","l2","toChannels","fgR","fgG","fgB","bgR","bgG","bgB","ratio","rgbaColor","factor","$ctx","$litmusColor","isNode","willReadFrequently","globalCompositeOperation","createLinearGradient","match","rgbaMatch","parseFloat","getImageData","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","increaseLuminance","bgL","fgL","resultA","resultARatio","resultB","hasWriteSyncWarnHappened","_onBinary","onBinary","_onData","onData","_onLineFeed","_onResize","_onWriteParsed","onWriteParsed","InstantiationService","OptionsService","BufferService","LogService","ILogService","CoreService","CoreMouseService","ICoreMouseService","unicodeService","UnicodeService","IUnicodeService","_charsetService","CharsetService","ICharsetService","OscLinkService","InputHandler","onRequestScrollToBottom","_writeBuffer","handleUserInput","_handleWindowsPtyOptionChange","markRangeDirty","scrollBottom","WriteBuffer","promiseResult","parse","_windowsWrappingHeuristics","_onScrollApi","write","writeSync","maxSubsequentCalls","LogLevelEnum","WARN","isNaN","MINIMUM_COLS","MINIMUM_ROWS","scroll","eraseAttr","scrollPages","pageCount","scrollToTop","scrollToLine","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsPty","buildNumber","backend","windowsMode","_enableWindowsWrappingHeuristics","disposables","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","arg1","arg2","queue","call","from","to","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","n","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","$temp","_coreMouseService","_unicodeService","_parser","EscapeSequenceParser","_parseBuffer","Uint32Array","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","_dirtyRowTracker","DirtyRowTracker","setCsiHandlerFallback","params","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","code","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","selectProtected","requestMode","setExecuteHandler","BEL","bell","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setHyperlink","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","CHARSETS","selectCharset","screenAlignmentPattern","setErrorHandler","DcsHandler","requestStatusString","getAttrData","_preserveStack","_logSlowResolvingAsync","p","Promise","race","res","rej","catch","err","_getCurrentLinkId","wasPaused","DEBUG","prototype","split","clearRange","len","decode","chWidth","charset","wraparoundMode","wraparound","insertMode","modes","curAttr","bufferRow","markDirty","setCellFromCodePoint","wcwidth","ch","stringFromCodePoint","addLineToLink","_eraseAttrData","insertCells","getNullCell","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","convertEol","reverseWraparound","_restrictCursor","originalX","nextStop","maxCol","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","respectProtect","replaceCells","_resetBufferLine","clearMarkers","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","_is","term","termName","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","dm","mouseProtocol","mouseEncoding","cs","b2v","m","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","attr","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","updateExtended","_processSGR0","l","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","idx","spec","exec","args","_createHyperlink","_finishHyperlink","parsedParams","idParamIndex","findIndex","startsWith","registerLink","_setOrReportSpecialColor","collectAndFlag","scrollRegionHeight","level","yOffset","markAllDirty","f","isProtected","_disposables","unregister","array","_data","third","fourth","navigator","userAgent","platform","isSafari","majorVersion","isIpad","isIphone","_getKey","insert","_search","forEachByKey","values","mid","midKey","TaskQueue","_tasks","_i","enqueue","task","_start","_idleCallback","_cancelCallback","_requestCallback","_process","deadline","taskDuration","longestTask","lastDeadlineRemaining","timeRemaining","deadlineRemaining","PriorityTaskQueue","_createDeadline","duration","IdleTaskQueue","requestIdleCallback","cancelIdleCallback","_queue","lastChar","CHAR_DATA_CODE_INDEX","WHITESPACE_CELL_CODE","ExtendedAttrs","newObj","isBlink","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","isEmpty","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","ext","_ext","_urlId","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_memoryCleanupQueue","_memoryCleanupPosition","_cols","_rows","_getCorrectBufferLength","setupTabStops","getWhitespaceCell","BufferLine","relativeY","correctBufferLength","scrollback","fillViewportRows","fillAttr","newCols","newRows","nullCell","dirtyMemoryLines","addToY","amountToTrim","_isReflowEnabled","_reflow","_batchedMemoryCleanup","normalRun","counted","cleanupMemory","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","copyCellsFrom","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","lineIndex","trimRight","tabStopWidth","Marker","onDispose","_removeMarker","$startIndex","fillCellData","_combined","_extendedAttrs","cp","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","codePoint","eAttrs","byteLength","uint32Cells","keys","extKeys","copyFrom","src","applyInReverse","srcData","srcCombinedKeys","bufferCols","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","BufferSet","_onBufferActivate","_normal","Buffer","_alt","inactiveBuffer","obj","combined","DEFAULT_COLOR","DEFAULT_ATTR","DEFAULT_EXT","isDisposed","_id","_nextId","_onDispose","disposable","C","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","applicationCursorMode","modifiers","keyMapping","keyString","toUpperCase","toLowerCase","_interim","startPos","interim","Uint8Array","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","BMP_COMBINING","HIGH_COMBINING","table","version","num","ucs","bisearch","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","_didUserInput","chunk","cb","_innerWrite","lastTime","continuation","resolve","then","RGB_REX","HASH_REX","pad","bits","s2","low","base","adv","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","unhook","hook","put","utf32ToString","success","handlerResult","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","TransitionTable","setDefault","next","addMany","codes","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","DcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","_state","_put","MAX_VALUE","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","k","newParams","getSubParamsAll","store","cur","_addons","instance","loadAddon","terminal","loadedAddon","_wrappedAddonDispose","_buffer","init","viewportY","baseY","getLine","BufferLineApiView","_line","getCell","startColumn","endColumn","_core","_onBufferChange","onBufferChange","BufferApiView","_alternate","alternate","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","provider","versions","activeVersion","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","oldYdisp","scrollAmount","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","SGR_PIXELS","_protocols","_encodings","_activeProtocol","_activeEncoding","_lastEvent","_onProtocolChange","name","addProtocol","addEncoding","encoding","_equalEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","pixels","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_onRequestScrollToBottom","wasUserInput","disableStdin","$xmin","$xmax","_decorations","SortedList","_onDecorationRegistered","_onDecorationRemoved","Decoration","markerDispose","xmin","xmax","getKeyIterator","_cachedBg","_cachedFg","foregroundColor","ServiceCollection","_entries","service","_services","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","optionsKeyToLogLevel","info","INFO","ERROR","off","OFF","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","logger","log","DEFAULT_OPTIONS","customGlyphs","allowProposedApi","allowTransparency","FONT_WEIGHT_OPTIONS","_onOptionChange","defaultOptions","_sanitizeAndValidateOption","_setupOptions","eventKey","getter","propName","setter","desc","defineProperty","isCursorStyle","_entriesWithId","_dataByLinkId","_removeMarkerFromLink","castData","_getEntryIdKey","linkId","every","linkData","storeServiceDependency","serviceRegistry","decorator","arguments","_providers","_onChange","onChange","defaultProvider","UnicodeV6","_activeProvider","getStringCellWidth","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","CONSTRUCTOR_ONLY_OPTIONS","_addonManager","AddonManager","_publicOptions","_checkReadonlyOptions","_checkProposedApi","parser","ParserApi","unicode","UnicodeApi","BufferNamespaceApi","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","originMode","reverseWraparoundMode","sendFocusMode","columns","_verifyIntegers","registerMarker","_verifyPositiveIntegers","writeln","addon","strings","Infinity"],"sourceRoot":""}