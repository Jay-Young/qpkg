{"version":3,"file":"xterm-addon-canvas.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAqB,YAAID,IAEzBD,EAAkB,YAAIC,GACvB,CATD,CASGK,MAAM,I,kHCJT,eACA,SACA,SACA,SAEA,SAIA,SAKA,SACA,SACA,SACA,SAEA,MAAsBC,UAAwB,EAAAC,WAuB5CC,YACmBC,EACTC,EACRC,EACAC,EACQC,EACWC,EACAC,EACAC,EACAC,EACAC,GAEnBC,QAXiB,KAAAV,UAAAA,EACT,KAAAC,WAAAA,EAGA,KAAAG,OAAAA,EACW,KAAAC,cAAAA,EACA,KAAAC,eAAAA,EACA,KAAAC,gBAAAA,EACA,KAAAC,mBAAAA,EACA,KAAAC,oBAAAA,EA9Bb,KAAAE,iBAA2B,EAC3B,KAAAC,kBAA4B,EAC5B,KAAAC,iBAA2B,EAC3B,KAAAC,kBAA4B,EAC5B,KAAAC,gBAA0B,EAC1B,KAAAC,eAAyB,EAEvB,KAAAC,iBAAyC,IAAAC,8BAE3C,KAAAC,iBAAoD,GAQ3C,KAAAC,yBAA2BC,KAAKC,SAAS,IAAI,EAAAC,cAC9C,KAAAC,wBAA0BH,KAAKD,yBAAyBK,MAetEJ,KAAKK,mBAAqB,IAAI,EAAAC,kBAAkBN,KAAKrB,UAAWqB,KAAKJ,gBAAiBI,KAAKb,mBAAoBa,KAAKZ,oBAAqBY,KAAKhB,eAC9IgB,KAAKO,QAAUC,SAASC,cAAc,UACtCT,KAAKO,QAAQG,UAAUC,IAAI,SAAS9B,WACpCmB,KAAKO,QAAQK,MAAM9B,OAASA,EAAO+B,WACnCb,KAAKc,cACLd,KAAKpB,WAAWmC,YAAYf,KAAKO,SACjCP,KAAKgB,kBAAkBhB,KAAKhB,cAAciC,QAC1CjB,KAAKC,SAASD,KAAKhB,cAAckC,gBAAeC,IAC9CnB,KAAKgB,kBAAkBG,GACvBnB,KAAKoB,QAELpB,KAAKqB,uBAAuBrB,KAAKJ,gBAAgB0B,eAAgBtB,KAAKJ,gBAAgB2B,aAAcvB,KAAKJ,gBAAgB4B,iBAAiB,KAG5IxB,KAAKC,UAAS,IAAAwB,eAAa,K,MACzBzB,KAAKO,QAAQmB,SACE,QAAf,EAAA1B,KAAK2B,kBAAU,SAAEC,SAAS,IAE9B,CArCWC,aAA8B,OAAO7B,KAAKO,OAAS,CACnDuB,kBAAW,MAAwB,OAAsB,QAAf,EAAA9B,KAAK2B,kBAAU,eAAEI,MAAM,GAAGF,MAAS,CAsChFf,cACNd,KAAKgC,MAAO,IAAAC,cAAajC,KAAKO,QAAQ2B,WAAW,KAAM,CAAEC,MAAOnC,KAAKjB,UAEhEiB,KAAKjB,QACRiB,KAAKoC,WAET,CAEOC,aAAoB,CACpBC,cAAqB,CACrBC,mBAA0B,CAC1BC,kBAAkBC,EAAkBC,GAAuB,CAE3DrB,uBAAuBsB,EAAqCC,EAAmCpB,GAA4B,GAChIxB,KAAKJ,gBAAgBiD,OAAO7C,KAAKrB,UAAWgE,EAAOC,EAAKpB,EAC1D,CAEUsB,iBAAiBX,GAEzB,GAAIA,IAAUnC,KAAKjB,OACjB,OAIF,MAAMgE,EAAY/C,KAAKO,QACvBP,KAAKjB,OAASoD,EAEdnC,KAAKO,QAAUP,KAAKO,QAAQyC,YAC5BhD,KAAKc,cACLd,KAAKpB,WAAWqE,aAAajD,KAAKO,QAASwC,GAG3C/C,KAAKgB,kBAAkBhB,KAAKhB,cAAciC,QAC1CjB,KAAKwC,kBAAkB,EAAGxC,KAAKf,eAAeiE,KAAO,EACvD,CAMQlC,kBAAkBmC,G,MACxB,KAAInD,KAAKV,kBAAoB,GAAKU,KAAKT,mBAAqB,GAA5D,CAGyB,QAAzB,EAAAS,KAAKoD,4BAAoB,SAAExB,UAC3B5B,KAAK2B,YAAa,IAAA0B,qBAAoBrD,KAAKrB,UAAWqB,KAAKd,gBAAgBoE,WAAYH,EAAUnD,KAAKR,iBAAkBQ,KAAKP,kBAAmBO,KAAKV,iBAAkBU,KAAKT,kBAAmBS,KAAKZ,oBAAoBmE,KACxNvD,KAAKoD,sBAAuB,IAAAI,cAAaxD,KAAK2B,WAAWxB,wBAAyBH,KAAKD,0BACvFC,KAAK2B,WAAW8B,SAChB,IAAK,IAAIC,EAAI,EAAGA,EAAI1D,KAAK2B,WAAWI,MAAM4B,OAAQD,IAChD1D,KAAKF,iBAAiB4D,GAAK,IAAIE,EAAgB5D,KAAK2B,WAAWI,MAAM2B,GAAG7B,O,CAE5E,CAEOgC,OAAOC,GACZ9D,KAAKR,iBAAmBsE,EAAIC,OAAOC,KAAKC,MACxCjE,KAAKP,kBAAoBqE,EAAIC,OAAOC,KAAKE,OACzClE,KAAKV,iBAAmBwE,EAAIC,OAAOI,KAAKF,MACxCjE,KAAKT,kBAAoBuE,EAAIC,OAAOI,KAAKD,OACzClE,KAAKN,gBAAkBoE,EAAIC,OAAOI,KAAKC,KACvCpE,KAAKL,eAAiBmE,EAAIC,OAAOI,KAAKE,IACtCrE,KAAKO,QAAQ0D,MAAQH,EAAIC,OAAOlC,OAAOoC,MACvCjE,KAAKO,QAAQ2D,OAASJ,EAAIC,OAAOlC,OAAOqC,OACxClE,KAAKO,QAAQK,MAAMqD,MAAQ,GAAGH,EAAIQ,IAAIzC,OAAOoC,UAC7CjE,KAAKO,QAAQK,MAAMsD,OAAS,GAAGJ,EAAIQ,IAAIzC,OAAOqC,WAGzClE,KAAKjB,QACRiB,KAAKoC,YAGPpC,KAAKgB,kBAAkBhB,KAAKhB,cAAciC,OAC5C,CAIOsD,oB,MACU,QAAf,EAAAvE,KAAK2B,kBAAU,SAAE6C,cACnB,CASUC,WAAWC,EAAWC,EAAWV,EAAeC,GACxDlE,KAAKgC,KAAK4C,SACRF,EAAI1E,KAAKR,iBACTmF,EAAI3E,KAAKP,kBACTwE,EAAQjE,KAAKR,iBACb0E,EAASlE,KAAKP,kBAClB,CAQUoF,uBAAuBH,EAAWC,EAAWV,EAAgB,GACrE,MAAMa,EAAaC,KAAKC,KAA8B,GAAzBhF,KAAKP,mBAClCO,KAAKgC,KAAK4C,SACRF,EAAI1E,KAAKR,kBACRmF,EAAI,GAAK3E,KAAKP,kBAAoBqF,EAAa9E,KAAKZ,oBAAoBmE,IACzEU,EAAQjE,KAAKR,iBACbQ,KAAKZ,oBAAoBmE,IAC7B,CAQU0B,uBAAuBP,EAAWC,EAAWV,EAAgB,EAAGiB,EAAsB,GAC9FlF,KAAKgC,KAAK4C,SACRF,EAAI1E,KAAKR,kBACRmF,EAAI,GAAK3E,KAAKP,kBAAoByF,EAAclF,KAAKZ,oBAAoBmE,IAAM,EAChFU,EAAQjE,KAAKR,iBACbQ,KAAKZ,oBAAoBmE,IAC7B,CAEU4B,sBAAsBT,EAAWC,EAAWV,EAAgB,GACpEjE,KAAKgC,KAAKoD,OACVpF,KAAKgC,KAAKqD,YACVrF,KAAKgC,KAAKsD,YAActF,KAAKgC,KAAKuD,UAClC,MAAMC,EAAYxF,KAAKZ,oBAAoBmE,IAC3CvD,KAAKgC,KAAKwD,UAAYA,EACtB,IAAK,IAAIC,EAAU,EAAGA,EAAUxB,EAAOwB,IAAW,CAChD,MAAMC,GAAShB,EAAIe,GAAWzF,KAAKR,iBAC7BmG,GAAQjB,EAAIe,EAAU,IAAOzF,KAAKR,iBAClCoG,GAAUlB,EAAIe,EAAU,GAAKzF,KAAKR,iBAClCqG,GAAQlB,EAAI,GAAK3E,KAAKP,kBAAoB+F,EAAY,EACtDM,EAAUD,EAAOL,EACjBO,EAAUF,EAAOL,EACvBxF,KAAKgC,KAAKgE,OAAON,EAAOG,GACxB7F,KAAKgC,KAAKiE,cACRP,EAAOI,EACPH,EAAMG,EACNH,EAAME,GAER7F,KAAKgC,KAAKiE,cACRN,EAAMI,EACNH,EAAQG,EACRH,EAAQC,E,CAGZ7F,KAAKgC,KAAKkE,SACVlG,KAAKgC,KAAKmE,SACZ,CAEUC,uBAAuB1B,EAAWC,EAAWV,EAAgB,GACrEjE,KAAKgC,KAAKoD,OACVpF,KAAKgC,KAAKqD,YACVrF,KAAKgC,KAAKsD,YAActF,KAAKgC,KAAKuD,UAClC,MAAMC,EAAYxF,KAAKZ,oBAAoBmE,IAC3CvD,KAAKgC,KAAKwD,UAAYA,EACtBxF,KAAKgC,KAAKqE,YAAY,CAAa,EAAZb,EAAeA,IACtC,MAAME,EAAQhB,EAAI1E,KAAKR,iBACjBqG,GAAQlB,EAAI,GAAK3E,KAAKP,kBAAoB+F,EAAY,EAC5DxF,KAAKgC,KAAKgE,OAAON,EAAOG,GACxB,IAAK,IAAIJ,EAAU,EAAGA,EAAUxB,EAAOwB,IAAW,CAEhD,MAAMG,GAAUlB,EAAIT,EAAQwB,GAAWzF,KAAKR,iBAC5CQ,KAAKgC,KAAKsE,OAAOV,EAAQC,E,CAE3B7F,KAAKgC,KAAKkE,SACVlG,KAAKgC,KAAKuE,YACVvG,KAAKgC,KAAKmE,SACZ,CAEUK,uBAAuB9B,EAAWC,EAAWV,EAAgB,GACrEjE,KAAKgC,KAAKoD,OACVpF,KAAKgC,KAAKqD,YACVrF,KAAKgC,KAAKsD,YAActF,KAAKgC,KAAKuD,UAClC,MAAMC,EAAYxF,KAAKZ,oBAAoBmE,IAC3CvD,KAAKgC,KAAKwD,UAAYA,EACtBxF,KAAKgC,KAAKqE,YAAY,CAAa,EAAZb,EAA2B,EAAZA,IACtC,MAAME,EAAQhB,EAAI1E,KAAKR,iBACjBoG,GAAUlB,EAAIT,GAASjE,KAAKR,iBAC5BqG,GAAQlB,EAAI,GAAK3E,KAAKP,kBAAoB+F,EAAY,EAC5DxF,KAAKgC,KAAKgE,OAAON,EAAOG,GACxB7F,KAAKgC,KAAKsE,OAAOV,EAAQC,GACzB7F,KAAKgC,KAAKkE,SACVlG,KAAKgC,KAAKuE,YACVvG,KAAKgC,KAAKmE,SACZ,CAQUM,oBAAoB/B,EAAWC,EAAWV,GAClDjE,KAAKgC,KAAK4C,SACRF,EAAI1E,KAAKR,iBACTmF,EAAI3E,KAAKP,kBACTO,KAAKZ,oBAAoBmE,IAAMU,EAC/BjE,KAAKP,kBACT,CAQUiH,kBAAkBhC,EAAWC,EAAWV,EAAeC,GAC/D,MAAMsB,EAAYxF,KAAKZ,oBAAoBmE,IAC3CvD,KAAKgC,KAAKwD,UAAYA,EACtBxF,KAAKgC,KAAK2E,WACRjC,EAAI1E,KAAKR,iBAAmBgG,EAAY,EACxCb,EAAI3E,KAAKP,kBAAqB+F,EAAY,EAC1CvB,EAAQjE,KAAKR,iBAAmBgG,EAC/BtB,EAASlE,KAAKP,kBAAqB+F,EACxC,CAKUpD,YACJpC,KAAKjB,OACPiB,KAAKgC,KAAK4E,UAAU,EAAG,EAAG5G,KAAKO,QAAQ0D,MAAOjE,KAAKO,QAAQ2D,SAE3DlE,KAAKgC,KAAKuD,UAAYvF,KAAKhB,cAAciC,OAAO4F,WAAWvC,IAC3DtE,KAAKgC,KAAK4C,SAAS,EAAG,EAAG5E,KAAKO,QAAQ0D,MAAOjE,KAAKO,QAAQ2D,QAE9D,CASU4C,YAAYpC,EAAWC,EAAWV,EAAeC,GACrDlE,KAAKjB,OACPiB,KAAKgC,KAAK4E,UACRlC,EAAI1E,KAAKR,iBACTmF,EAAI3E,KAAKP,kBACTwE,EAAQjE,KAAKR,iBACb0E,EAASlE,KAAKP,oBAEhBO,KAAKgC,KAAKuD,UAAYvF,KAAKhB,cAAciC,OAAO4F,WAAWvC,IAC3DtE,KAAKgC,KAAK4C,SACRF,EAAI1E,KAAKR,iBACTmF,EAAI3E,KAAKP,kBACTwE,EAAQjE,KAAKR,iBACb0E,EAASlE,KAAKP,mBAEpB,CAUUsH,mBAAmB/C,EAAgBU,EAAWC,GACtD3E,KAAKgC,KAAKgF,KAAOhH,KAAKiH,UAAS,GAAO,GACtCjH,KAAKgC,KAAKkF,aAAe,EAAAC,cACzBnH,KAAKoH,SAASzC,GAGd,IAAI0C,GAAc,GACmC,IAAjDrH,KAAKd,gBAAgBoE,WAAWgE,eAClCD,GAAc,IAAAE,mBAAkBvH,KAAKgC,KAAMgC,EAAKwD,WAAY9C,EAAI1E,KAAKR,iBAAkBmF,EAAI3E,KAAKP,kBAAmBO,KAAKR,iBAAkBQ,KAAKP,kBAAmBO,KAAKd,gBAAgBoE,WAAWmE,SAAUzH,KAAKZ,oBAAoBmE,MAIlO8D,GACHrH,KAAKgC,KAAK0F,SACR1D,EAAKwD,WACL9C,EAAI1E,KAAKR,iBAAmBQ,KAAKN,gBACjCiF,EAAI3E,KAAKP,kBAAoBO,KAAKL,eAAiBK,KAAKT,kBAE9D,CAMUoI,WAAW3D,EAAiBU,EAAWC,G,YAC/C,MAAMiD,EAAQ5D,EAAKwD,WAEnB,IAAIK,EADJ7H,KAAKK,mBAAmByH,QAAQ9D,EAAMU,EAAG1E,KAAKf,eAAe8I,OAAOC,MAAQrD,GAG1EkD,EADED,GAASA,EAAMjE,OAAS,EAClB3D,KAAK2B,WAAWsG,+BAA+BL,EAAO5H,KAAKK,mBAAmB6H,OAAOC,GAAInI,KAAKK,mBAAmB6H,OAAOE,GAAIpI,KAAKK,mBAAmB6H,OAAOG,KAE3JrI,KAAK2B,WAAW2G,mBAAmBtE,EAAKuE,WAAa,EAAAC,qBAAsBxI,KAAKK,mBAAmB6H,OAAOC,GAAInI,KAAKK,mBAAmB6H,OAAOE,GAAIpI,KAAKK,mBAAmB6H,OAAOG,KAErLR,EAAMY,KAAK/D,GAAMmD,EAAMY,KAAK9D,IAGjC3E,KAAKgC,KAAKoD,OACVpF,KAAKoH,SAASzC,GAOV3E,KAAKF,iBAAiB+H,EAAMa,cAAgB1I,KAAK2B,WAAWI,MAAM8F,EAAMa,aAAa7G,SAAW7B,KAAKF,iBAAiB+H,EAAMa,aAAc7G,SAC5F,QAAhD,EAAwC,QAAxC,EAAA7B,KAAKF,iBAAiB+H,EAAMa,oBAAY,eAAEC,cAAM,SAAEC,eAC3C5I,KAAKF,iBAAiB+H,EAAMa,cAGjC1I,KAAK2B,WAAWI,MAAM8F,EAAMa,aAAaG,WAAoD,QAAxC,EAAA7I,KAAKF,iBAAiB+H,EAAMa,oBAAY,eAAEG,WAC5F7I,KAAKF,iBAAiB+H,EAAMa,eAC/B1I,KAAKF,iBAAiB+H,EAAMa,aAAe,IAAI9E,EAAgB5D,KAAK2B,WAAWI,MAAM8F,EAAMa,aAAa7G,SAE1G7B,KAAKF,iBAAiB+H,EAAMa,aAAcI,UAC1C9I,KAAKF,iBAAiB+H,EAAMa,aAAcG,QAAU7I,KAAK2B,WAAWI,MAAM8F,EAAMa,aAAaG,SAE/F7I,KAAKgC,KAAK+G,WACgC,QAAxC,EAAA/I,KAAKF,iBAAiB+H,EAAMa,oBAAY,eAAEC,SAAU3I,KAAK2B,WAAYI,MAAM8F,EAAMa,aAAa7G,OAC9FgG,EAAMmB,gBAAgBtE,EACtBmD,EAAMmB,gBAAgBrE,EACtBkD,EAAMY,KAAK/D,EACXmD,EAAMY,KAAK9D,EACXD,EAAI1E,KAAKR,iBAAmBQ,KAAKN,gBAAkBmI,EAAMoB,OAAOvE,EAChEC,EAAI3E,KAAKP,kBAAoBO,KAAKL,eAAiBkI,EAAMoB,OAAOtE,EAChEkD,EAAMY,KAAK/D,EACXmD,EAAMY,KAAK9D,GAEb3E,KAAKgC,KAAKmE,UACZ,CAMQiB,SAASzC,GACf3E,KAAKgC,KAAKqD,YACVrF,KAAKgC,KAAKkH,KACR,EACAvE,EAAI3E,KAAKP,kBACTO,KAAKf,eAAekK,KAAOnJ,KAAKR,iBAChCQ,KAAKP,mBACPO,KAAKgC,KAAKoH,MACZ,CAMUnC,SAASoC,EAAiBC,GAIlC,MAAO,GAFWA,EAAW,SAAW,MADrBD,EAASrJ,KAAKd,gBAAgBoE,WAAWiG,eAAiBvJ,KAAKd,gBAAgBoE,WAAWkG,cAGxExJ,KAAKd,gBAAgBoE,WAAWmE,SAAWzH,KAAKZ,oBAAoBmE,SAASvD,KAAKd,gBAAgBoE,WAAWmG,YACpJ,EA5ZF,oBA2aA,MAAM7F,EAOJlF,YAA4BmD,GAAA,KAAAA,OAAAA,EANpB,KAAA6H,OAAM,EACN,KAAAC,oBAAqCC,EACrC,KAAAC,aAAmCD,EAEpC,KAAAf,SAAmB,CAG1B,CAJWF,aAAoC,OAAO3I,KAAK6J,OAAS,CAM7Df,U,MAEO,QAAZ,EAAA9I,KAAK6J,eAAO,SAAEjB,QACd5I,KAAK6J,aAAUD,EAEX,EAAAE,gBAGwBF,IAAxB5J,KAAK2J,iBACP3J,KAAK2J,eAAiBI,OAAOC,YAAW,IAAMhK,KAAKiK,aA3BvB,MA6BV,IAAhBjK,KAAK0J,SACP1J,KAAK0J,OAAS,GAElB,CAEQO,Y,MACc,IAAhBjK,KAAK0J,SACK,QAAZ,EAAA1J,KAAK6J,eAAO,SAAEjB,QACd5I,KAAK6J,aAAUD,EACf5J,KAAK0J,OAAS,EACdK,OAAOG,kBAAkBlK,KAAK6B,QAAQsI,MAAKxB,IACrB,IAAhB3I,KAAK0J,OACP1J,KAAK8I,UAEL9I,KAAK6J,QAAUlB,EAEjB3I,KAAK0J,OAAS,CAAyB,IAErC1J,KAAK2J,iBACP3J,KAAK2J,oBAAiBC,GAG5B,E,yFCzeF,eACA,QACA,SAIA,SACA,SAGA,SACA,QACA,SACA,SAGA,MAAaQ,UAAuB,EAAA3L,WAalCC,YACmBC,EACA0L,EACjBC,EACiBrL,EACAsL,EACArL,EACjBsL,EACAC,EACiBrL,EACjBsL,EACiB1L,GAEjBK,QAZiB,KAAAV,UAAAA,EACA,KAAA0L,eAAAA,EAEA,KAAApL,eAAAA,EACA,KAAAsL,iBAAAA,EACA,KAAArL,gBAAAA,EAGA,KAAAE,oBAAAA,EAEA,KAAAJ,cAAAA,EAlBF,KAAA2L,iBAAmB3K,KAAKC,SAAS,IAAI,EAAAC,cACtC,KAAA0K,gBAAkB5K,KAAK2K,iBAAiBvK,MACvC,KAAAyK,sBAAwB7K,KAAKC,SAAS,IAAI,EAAAC,cAC3C,KAAA4K,qBAAuB9K,KAAK6K,sBAAsBzK,MACjD,KAAAL,yBAA2BC,KAAKC,SAAS,IAAI,EAAAC,cAC9C,KAAAC,wBAA0BH,KAAKD,yBAAyBK,MAgBtE,MAAM2K,EAAoB/K,KAAKd,gBAAgBoE,WAAWyH,kBAC1D/K,KAAKgL,cAAgB,CACnB,IAAI,EAAAC,gBAAgBjL,KAAKrB,UAAWqB,KAAKqK,eAAgB,EAAGU,EAAmB/K,KAAKf,eAAgBe,KAAKd,gBAAiBsL,EAAwBE,EAAmB1K,KAAKZ,oBAAqBJ,GAC/L,IAAI,EAAAkM,qBAAqBlL,KAAKrB,UAAWqB,KAAKqK,eAAgB,EAAGrK,KAAKf,eAAgBe,KAAKZ,oBAAqBsL,EAAmB1K,KAAKd,gBAAiBF,GACzJ,IAAI,EAAAmM,gBAAgBnL,KAAKrB,UAAWqB,KAAKqK,eAAgB,EAAGC,EAAYtK,KAAKf,eAAgBe,KAAKd,gBAAiBwL,EAAmB1K,KAAKZ,oBAAqBJ,GAChK,IAAI,EAAAoM,kBAAkBpL,KAAKrB,UAAWqB,KAAKqK,eAAgB,EAAGrK,KAAK2K,iBAAkB3K,KAAKf,eAAgBe,KAAKd,gBAAiBuL,EAAazK,KAAKZ,oBAAqBsL,EAAmB1L,IAE5L,IAAK,MAAMqM,KAASrL,KAAKgL,eACvB,IAAAxH,cAAa6H,EAAMlL,wBAAyBH,KAAKD,0BAEnDC,KAAKsL,YAAa,IAAAC,0BAClBvL,KAAKwL,kBAAoBxL,KAAKZ,oBAAoBmE,IAClDvD,KAAKyL,oBAELzL,KAAKC,UAAS,IAAAyL,8BAA6B1L,KAAKgL,cAAc,GAAGnJ,OAAQ7B,KAAKZ,oBAAoB2K,QAAQ,CAAC4B,EAAGC,IAAM5L,KAAK6L,gCAAgCF,EAAGC,MAC5J5L,KAAKC,UAAS,IAAAwB,eAAa,KACzB,IAAK,MAAMqK,KAAK9L,KAAKgL,cACnBc,EAAElK,WAEJ,IAAAmK,yBAAwB/L,KAAKrB,UAAU,IAE3C,CAEWqN,mBACT,OAAOhM,KAAKgL,cAAc,GAAGlJ,WAC/B,CAEOmK,+BAGDjM,KAAKwL,oBAAsBxL,KAAKZ,oBAAoBmE,MACtDvD,KAAKwL,kBAAoBxL,KAAKZ,oBAAoBmE,IAClDvD,KAAKkM,aAAalM,KAAKf,eAAekK,KAAMnJ,KAAKf,eAAeiE,MAEpE,CAEOgJ,aAAa/C,EAAcjG,GAEhClD,KAAKyL,oBAGL,IAAK,MAAMK,KAAK9L,KAAKgL,cACnBc,EAAEjI,OAAO7D,KAAKsL,YAIhBtL,KAAKqK,eAAezJ,MAAMqD,MAAQ,GAAGjE,KAAKsL,WAAWhH,IAAIzC,OAAOoC,UAChEjE,KAAKqK,eAAezJ,MAAMsD,OAAS,GAAGlE,KAAKsL,WAAWhH,IAAIzC,OAAOqC,UACnE,CAEOiI,wBACLnM,KAAKkM,aAAalM,KAAKf,eAAekK,KAAMnJ,KAAKf,eAAeiE,KAClE,CAEOb,aACLrC,KAAKoM,eAAcN,GAAKA,EAAEzJ,cAC5B,CAEOC,cACLtC,KAAKoM,eAAcN,GAAKA,EAAExJ,eAC5B,CAEOjB,uBAAuBsB,EAAqCC,EAAmCpB,GAA4B,GAChIxB,KAAKoM,eAAcN,GAAKA,EAAEzK,uBAAuBsB,EAAOC,EAAKpB,KAEzDxB,KAAKhB,cAAciC,OAAOoL,qBAC5BrM,KAAK2K,iBAAiB2B,KAAK,CAAE3J,MAAO,EAAGC,IAAK5C,KAAKf,eAAeiE,KAAO,GAE3E,CAEOX,mBACLvC,KAAKoM,eAAcN,GAAKA,EAAEvJ,oBAC5B,CAEOgK,QACLvM,KAAKoM,eAAcN,GAAKA,EAAE1K,SAC5B,CAEQgL,cAAcI,GACpB,IAAK,MAAMV,KAAK9L,KAAKgL,cACnBwB,EAAUV,EAEd,CAMOW,WAAW9J,EAAeC,GAC/B,IAAK,MAAMkJ,KAAK9L,KAAKgL,cACnBc,EAAEtJ,kBAAkBG,EAAOC,EAE/B,CAEO2B,oBACL,IAAK,MAAM8G,KAASrL,KAAKgL,cACvBK,EAAM9G,mBAEV,CAKQkH,oBACN,IAAKzL,KAAKuK,iBAAiBmC,aACzB,OAIF,MAAMnJ,EAAMvD,KAAKZ,oBAAoBmE,IACrCvD,KAAKsL,WAAWvH,OAAOI,KAAKF,MAAQc,KAAK4H,MAAM3M,KAAKuK,iBAAiBtG,MAAQV,GAC7EvD,KAAKsL,WAAWvH,OAAOI,KAAKD,OAASa,KAAKC,KAAKhF,KAAKuK,iBAAiBrG,OAASX,GAC9EvD,KAAKsL,WAAWvH,OAAOC,KAAKE,OAASa,KAAK4H,MAAM3M,KAAKsL,WAAWvH,OAAOI,KAAKD,OAASlE,KAAKd,gBAAgBoE,WAAWsJ,YACrH5M,KAAKsL,WAAWvH,OAAOI,KAAKE,IAAqD,IAA/CrE,KAAKd,gBAAgBoE,WAAWsJ,WAAmB,EAAI7H,KAAK8H,OAAO7M,KAAKsL,WAAWvH,OAAOC,KAAKE,OAASlE,KAAKsL,WAAWvH,OAAOI,KAAKD,QAAU,GAChLlE,KAAKsL,WAAWvH,OAAOC,KAAKC,MAAQjE,KAAKsL,WAAWvH,OAAOI,KAAKF,MAAQc,KAAK8H,MAAM7M,KAAKd,gBAAgBoE,WAAWwJ,eACnH9M,KAAKsL,WAAWvH,OAAOI,KAAKC,KAAOW,KAAK4H,MAAM3M,KAAKd,gBAAgBoE,WAAWwJ,cAAgB,GAC9F9M,KAAKsL,WAAWvH,OAAOlC,OAAOqC,OAASlE,KAAKf,eAAeiE,KAAOlD,KAAKsL,WAAWvH,OAAOC,KAAKE,OAC9FlE,KAAKsL,WAAWvH,OAAOlC,OAAOoC,MAAQjE,KAAKf,eAAekK,KAAOnJ,KAAKsL,WAAWvH,OAAOC,KAAKC,MAC7FjE,KAAKsL,WAAWhH,IAAIzC,OAAOqC,OAASa,KAAK8H,MAAM7M,KAAKsL,WAAWvH,OAAOlC,OAAOqC,OAASX,GACtFvD,KAAKsL,WAAWhH,IAAIzC,OAAOoC,MAAQc,KAAK8H,MAAM7M,KAAKsL,WAAWvH,OAAOlC,OAAOoC,MAAQV,GACpFvD,KAAKsL,WAAWhH,IAAIN,KAAKE,OAASlE,KAAKsL,WAAWhH,IAAIzC,OAAOqC,OAASlE,KAAKf,eAAeiE,KAC1FlD,KAAKsL,WAAWhH,IAAIN,KAAKC,MAAQjE,KAAKsL,WAAWhH,IAAIzC,OAAOoC,MAAQjE,KAAKf,eAAekK,IAC1F,CAEQ0C,gCAAgC5H,EAAeC,GACrDlE,KAAKsL,WAAWvH,OAAOlC,OAAOqC,OAASA,EACvClE,KAAKsL,WAAWvH,OAAOlC,OAAOoC,MAAQA,EAEtC,IAAK,MAAM6H,KAAK9L,KAAKgL,cACnBc,EAAEjI,OAAO7D,KAAKsL,YAEhBtL,KAAK+M,wBACP,CAEQA,yBACN/M,KAAK2K,iBAAiB2B,KAAK,CAAE3J,MAAO,EAAGC,IAAK5C,KAAKf,eAAeiE,KAAO,GACzE,EAnKF,kB,4FCfA,eAEA,SAMA,SACA,SAeA,MAAakI,UAA0B,EAAA5M,gBAMrCE,YACEsO,EACAC,EACAnO,EACiB6L,EACjBuC,EACAC,EACiBC,EACjBC,EACA3C,EACA4C,GAEAjO,MAAM2N,EAAUC,EAAW,SAAUnO,GAAQ,EAAMwO,EAAcJ,EAAeC,EAAgBzC,EAAmB2C,GARlG,KAAA1C,iBAAAA,EAGA,KAAAyC,aAAAA,EATX,KAAAG,MAAmB,IAAI,EAAAC,SAe7BxN,KAAK0J,OAAS,CACZhF,EAAG,EACHC,EAAG,EACH8I,WAAW,EACX7M,MAAO,GACPqD,MAAO,GAETjE,KAAK0N,iBAAmB,CACtB,IAAO1N,KAAK2N,iBAAiBC,KAAK5N,MAClC,MAASA,KAAK6N,mBAAmBD,KAAK5N,MACtC,UAAaA,KAAK8N,uBAAuBF,KAAK5N,OAEhDA,KAAKC,SAASkN,EAAeY,gBAAe,IAAM/N,KAAKgO,2BACvDhO,KAAKC,UAAS,IAAAwB,eAAa,K,MACI,QAA7B,EAAAzB,KAAKiO,gCAAwB,SAAErM,UAC/B5B,KAAKiO,8BAA2BrE,CAAS,IAE7C,CAEO/F,OAAOC,GACZzE,MAAMwE,OAAOC,GAEb9D,KAAK0J,OAAS,CACZhF,EAAG,EACHC,EAAG,EACH8I,WAAW,EACX7M,MAAO,GACPqD,MAAO,EAEX,CAEO7C,Q,MACLpB,KAAKkO,eACwB,QAA7B,EAAAlO,KAAKiO,gCAAwB,SAAEE,wBAC/BnO,KAAKgO,uBACP,CAEO3L,a,MACwB,QAA7B,EAAArC,KAAKiO,gCAAwB,SAAEG,QAC/BpO,KAAK2K,iBAAiB2B,KAAK,CAAE3J,MAAO3C,KAAKf,eAAe8I,OAAOpD,EAAG/B,IAAK5C,KAAKf,eAAe8I,OAAOpD,GACpG,CAEOrC,c,MACwB,QAA7B,EAAAtC,KAAKiO,gCAAwB,SAAEI,SAC/BrO,KAAK2K,iBAAiB2B,KAAK,CAAE3J,MAAO3C,KAAKf,eAAe8I,OAAOpD,EAAG/B,IAAK5C,KAAKf,eAAe8I,OAAOpD,GACpG,CAEQqJ,wB,MACFhO,KAAKd,gBAAgBoE,WAAWgL,YAC7BtO,KAAKiO,2BACRjO,KAAKiO,yBAA2B,IAAIM,EAAwBvO,KAAKZ,oBAAoBqO,WAAW,KAC9FzN,KAAKwO,SAAQ,EAAK,GACjBxO,KAAKZ,uBAGmB,QAA7B,EAAAY,KAAKiO,gCAAwB,SAAErM,UAC/B5B,KAAKiO,8BAA2BrE,GAIlC5J,KAAK2K,iBAAiB2B,KAAK,CAAE3J,MAAO3C,KAAKf,eAAe8I,OAAOpD,EAAG/B,IAAK5C,KAAKf,eAAe8I,OAAOpD,GACpG,CAEOpC,mB,MACwB,QAA7B,EAAAvC,KAAKiO,gCAAwB,SAAEE,uBACjC,CAEO3L,kBAAkBC,EAAkBC,IACpC1C,KAAKiO,0BAA4BjO,KAAKiO,yBAAyBQ,SAClEzO,KAAKwO,SAAQ,GAEbxO,KAAKiO,yBAAyBE,uBAElC,CAEQK,QAAQE,GAEd,IAAK1O,KAAKoN,aAAauB,qBAAuB3O,KAAKoN,aAAawB,eAE9D,YADA5O,KAAKkO,eAIP,MAAMW,EAAU7O,KAAKf,eAAe8I,OAAO+G,MAAQ9O,KAAKf,eAAe8I,OAAOpD,EACxEoK,EAA0BF,EAAU7O,KAAKf,eAAe8I,OAAOC,MAGrE,GAAI+G,EAA0B,GAAKA,GAA2B/O,KAAKf,eAAeiE,KAEhF,YADAlD,KAAKkO,eAKP,MAAMc,EAAUjK,KAAKkK,IAAIjP,KAAKf,eAAe8I,OAAOrD,EAAG1E,KAAKf,eAAekK,KAAO,GAElF,GADAnJ,KAAKf,eAAe8I,OAAOmH,MAAMC,IAAIN,GAAUO,SAASJ,EAAShP,KAAKuN,YAC3C3D,IAAvB5J,KAAKuN,MAAM8B,QAAf,CAIA,IAAKrP,KAAKZ,oBAAoBqO,UAAW,CACvCzN,KAAKkO,eACLlO,KAAKgC,KAAKoD,OACVpF,KAAKgC,KAAKuD,UAAYvF,KAAKhB,cAAciC,OAAOqO,OAAOhL,IACvD,MAAMiL,EAAcvP,KAAKd,gBAAgBoE,WAAWiM,YAQpD,OAPAvP,KAAKwP,kBAAkBR,EAASD,EAAyB/O,KAAKuN,OAC9DvN,KAAKgC,KAAKmE,UACVnG,KAAK0J,OAAOhF,EAAIsK,EAChBhP,KAAK0J,OAAO/E,EAAIoK,EAChB/O,KAAK0J,OAAO+D,WAAY,EACxBzN,KAAK0J,OAAO9I,MAAQ2O,OACpBvP,KAAK0J,OAAOzF,MAAQjE,KAAKuN,MAAMkC,W,CAKjC,IAAIzP,KAAKiO,0BAA6BjO,KAAKiO,yBAAyByB,gBAApE,CAKA,GAAI1P,KAAK0J,OAAQ,CAEf,GAAI1J,KAAK0J,OAAOhF,IAAMsK,GAClBhP,KAAK0J,OAAO/E,IAAMoK,GAClB/O,KAAK0J,OAAO+D,YAAczN,KAAKZ,oBAAoBqO,WACnDzN,KAAK0J,OAAO9I,QAAUZ,KAAKd,gBAAgBoE,WAAWiM,aACtDvP,KAAK0J,OAAOzF,QAAUjE,KAAKuN,MAAMkC,WACnC,OAEFzP,KAAKkO,c,CAGPlO,KAAKgC,KAAKoD,OACVpF,KAAK0N,iBAAiB1N,KAAKd,gBAAgBoE,WAAWiM,aAAe,SAASP,EAASD,EAAyB/O,KAAKuN,OACrHvN,KAAKgC,KAAKmE,UAEVnG,KAAK0J,OAAOhF,EAAIsK,EAChBhP,KAAK0J,OAAO/E,EAAIoK,EAChB/O,KAAK0J,OAAO+D,WAAY,EACxBzN,KAAK0J,OAAO9I,MAAQZ,KAAKd,gBAAgBoE,WAAWiM,YACpDvP,KAAK0J,OAAOzF,MAAQjE,KAAKuN,MAAMkC,U,MAxB7BzP,KAAKkO,c,CAyBT,CAEQA,eACFlO,KAAK0J,SAGH,EAAAiG,WAAa3P,KAAKZ,oBAAoBmE,IAAM,EAC9CvD,KAAKoC,YAELpC,KAAK8G,YAAY9G,KAAK0J,OAAOhF,EAAG1E,KAAK0J,OAAO/E,EAAG3E,KAAK0J,OAAOzF,MAAO,GAEpEjE,KAAK0J,OAAS,CACZhF,EAAG,EACHC,EAAG,EACH8I,WAAW,EACX7M,MAAO,GACPqD,MAAO,GAGb,CAEQ0J,iBAAiBjJ,EAAWC,EAAWX,GAC7ChE,KAAKgC,KAAKoD,OACVpF,KAAKgC,KAAKuD,UAAYvF,KAAKhB,cAAciC,OAAOqO,OAAOhL,IACvDtE,KAAKyG,oBAAoB/B,EAAGC,EAAG3E,KAAKd,gBAAgBoE,WAAWsM,aAC/D5P,KAAKgC,KAAKmE,SACZ,CAEQ0H,mBAAmBnJ,EAAWC,EAAWX,GAC/ChE,KAAKgC,KAAKoD,OACVpF,KAAKgC,KAAKuD,UAAYvF,KAAKhB,cAAciC,OAAOqO,OAAOhL,IACvDtE,KAAKyE,WAAWC,EAAGC,EAAGX,EAAKyL,WAAY,GACvCzP,KAAKgC,KAAKuD,UAAYvF,KAAKhB,cAAciC,OAAO4O,aAAavL,IAC7DtE,KAAK+G,mBAAmB/C,EAAMU,EAAGC,GACjC3E,KAAKgC,KAAKmE,SACZ,CAEQ2H,uBAAuBpJ,EAAWC,EAAWX,GACnDhE,KAAKgC,KAAKoD,OACVpF,KAAKgC,KAAKuD,UAAYvF,KAAKhB,cAAciC,OAAOqO,OAAOhL,IACvDtE,KAAKiF,uBAAuBP,EAAGC,GAC/B3E,KAAKgC,KAAKmE,SACZ,CAEQqJ,kBAAkB9K,EAAWC,EAAWX,GAC9ChE,KAAKgC,KAAKoD,OACVpF,KAAKgC,KAAKsD,YAActF,KAAKhB,cAAciC,OAAOqO,OAAOhL,IACzDtE,KAAK0G,kBAAkBhC,EAAGC,EAAGX,EAAKyL,WAAY,GAC9CzP,KAAKgC,KAAKmE,SACZ,EAhNF,sBAmNA,MAAMoI,EAcJ7P,YACE+O,EACQqC,EACA1Q,GADA,KAAA0Q,gBAAAA,EACA,KAAA1Q,oBAAAA,EAERY,KAAK0P,iBAAkB,EACnBjC,GACFzN,KAAK+P,kBAET,CAEWtB,eAAsB,QAASzO,KAAKgQ,oBAAsBhQ,KAAKiQ,eAAiB,CAEpFrO,UACD5B,KAAKiQ,iBACPjQ,KAAKZ,oBAAoB2K,OAAOmG,cAAclQ,KAAKiQ,gBACnDjQ,KAAKiQ,oBAAiBrG,GAEpB5J,KAAKgQ,qBACPhQ,KAAKZ,oBAAoB2K,OAAOoG,aAAanQ,KAAKgQ,oBAClDhQ,KAAKgQ,wBAAqBpG,GAExB5J,KAAKoQ,kBACPpQ,KAAKZ,oBAAoB2K,OAAOsG,qBAAqBrQ,KAAKoQ,iBAC1DpQ,KAAKoQ,qBAAkBxG,EAE3B,CAEOuE,wBACDnO,KAAKyO,WAITzO,KAAKsQ,wBAA0BC,KAAKC,MAEpCxQ,KAAK0P,iBAAkB,EAClB1P,KAAKoQ,kBACRpQ,KAAKoQ,gBAAkBpQ,KAAKZ,oBAAoB2K,OAAO0G,uBAAsB,KAC3EzQ,KAAK8P,kBACL9P,KAAKoQ,qBAAkBxG,CAAS,KAGtC,CAEQmG,iBAAiBW,EAAsBC,KAEzC3Q,KAAKiQ,iBACPjQ,KAAKZ,oBAAoB2K,OAAOmG,cAAclQ,KAAKiQ,gBACnDjQ,KAAKiQ,oBAAiBrG,GAOxB5J,KAAKgQ,mBAAqBhQ,KAAKZ,oBAAoB2K,OAAOC,YAAW,KAGnE,GAAIhK,KAAKsQ,wBAAyB,CAChC,MAAMM,EA9RS,KA8RgBL,KAAKC,MAAQxQ,KAAKsQ,yBAEjD,GADAtQ,KAAKsQ,6BAA0B1G,EAC3BgH,EAAO,EAET,YADA5Q,KAAK+P,iBAAiBa,E,CAM1B5Q,KAAK0P,iBAAkB,EACvB1P,KAAKoQ,gBAAkBpQ,KAAKZ,oBAAoB2K,OAAO0G,uBAAsB,KAC3EzQ,KAAK8P,kBACL9P,KAAKoQ,qBAAkBxG,CAAS,IAIlC5J,KAAKiQ,eAAiBjQ,KAAKZ,oBAAoB2K,OAAO8G,aAAY,KAEhE,GAAI7Q,KAAKsQ,wBAAyB,CAGhC,MAAMM,EAnTO,KAmTkBL,KAAKC,MAAQxQ,KAAKsQ,yBAGjD,OAFAtQ,KAAKsQ,6BAA0B1G,OAC/B5J,KAAK+P,iBAAiBa,E,CAKxB5Q,KAAK0P,iBAAmB1P,KAAK0P,gBAC7B1P,KAAKoQ,gBAAkBpQ,KAAKZ,oBAAoB2K,OAAO0G,uBAAsB,KAC3EzQ,KAAK8P,kBACL9P,KAAKoQ,qBAAkBxG,CAAS,GAChC,GA9Ta,IA+TC,GACjB8G,EACL,CAEOtC,QACLpO,KAAK0P,iBAAkB,EACnB1P,KAAKiQ,iBACPjQ,KAAKZ,oBAAoB2K,OAAOmG,cAAclQ,KAAKiQ,gBACnDjQ,KAAKiQ,oBAAiBrG,GAEpB5J,KAAKgQ,qBACPhQ,KAAKZ,oBAAoB2K,OAAOoG,aAAanQ,KAAKgQ,oBAClDhQ,KAAKgQ,wBAAqBpG,GAExB5J,KAAKoQ,kBACPpQ,KAAKZ,oBAAoB2K,OAAOsG,qBAAqBrQ,KAAKoQ,iBAC1DpQ,KAAKoQ,qBAAkBxG,EAE3B,CAEOyE,SAELrO,KAAKoO,QAELpO,KAAKsQ,6BAA0B1G,EAC/B5J,KAAK+P,mBACL/P,KAAKmO,uBACP,E,kFCjXF,kBAGE,cACEnO,KAAK8Q,MAAQ,EACf,CAEOjN,OAAOI,EAAeC,GAC3B,IAAK,IAAIQ,EAAI,EAAGA,EAAIT,EAAOS,IAAK,CAC1B1E,KAAK8Q,MAAMnN,QAAUe,GACvB1E,KAAK8Q,MAAMC,KAAK,IAElB,IAAK,IAAIpM,EAAI3E,KAAK8Q,MAAMpM,GAAGf,OAAQgB,EAAIT,EAAQS,IAC7C3E,KAAK8Q,MAAMpM,GAAGqM,UAAKnH,GAErB5J,KAAK8Q,MAAMpM,GAAGf,OAASO,C,CAEzBlE,KAAK8Q,MAAMnN,OAASM,CACtB,CAEOsI,QACL,IAAK,IAAI7H,EAAI,EAAGA,EAAI1E,KAAK8Q,MAAMnN,OAAQe,IACrC,IAAK,IAAIC,EAAI,EAAGA,EAAI3E,KAAK8Q,MAAMpM,GAAGf,OAAQgB,IACxC3E,KAAK8Q,MAAMpM,GAAGC,QAAKiF,CAGzB,E,yFCzBF,eACA,SAIA,SAGA,MAAauB,UAAwB,EAAA3M,gBAGnCE,YACEsO,EACAC,EACAnO,EACAwL,EACA4C,EACAC,EACAzC,EACA2C,EACAC,GAEAjO,MAAM2N,EAAUC,EAAW,OAAQnO,GAAQ,EAAMwO,EAAcJ,EAAeC,EAAgBzC,EAAmB2C,GAEjHrN,KAAKC,SAASqK,EAAW0G,qBAAoB7P,GAAKnB,KAAKiR,yBAAyB9P,MAChFnB,KAAKC,SAASqK,EAAW4G,qBAAoB/P,GAAKnB,KAAKmR,yBAAyBhQ,KAClF,CAEO0C,OAAOC,GACZzE,MAAMwE,OAAOC,GAEb9D,KAAK0J,YAASE,CAChB,CAEOxI,QACLpB,KAAKoR,mBACP,CAEQA,oBACN,GAAIpR,KAAK0J,OAAQ,CACf1J,KAAK8G,YAAY9G,KAAK0J,OAAO2H,GAAIrR,KAAK0J,OAAO4H,GAAItR,KAAK0J,OAAOP,KAAOnJ,KAAK0J,OAAO2H,GAAI,GACpF,MAAME,EAAiBvR,KAAK0J,OAAO8H,GAAKxR,KAAK0J,OAAO4H,GAAK,EACrDC,EAAiB,GACnBvR,KAAK8G,YAAY,EAAG9G,KAAK0J,OAAO4H,GAAK,EAAGtR,KAAK0J,OAAOP,KAAMoI,GAE5DvR,KAAK8G,YAAY,EAAG9G,KAAK0J,OAAO8H,GAAIxR,KAAK0J,OAAO+H,GAAI,GACpDzR,KAAK0J,YAASE,C,CAElB,CAEQqH,yBAAyB9P,GAU/B,GATIA,EAAEiH,KAAO,EAAAsJ,uBACX1R,KAAKgC,KAAKuD,UAAYvF,KAAKhB,cAAciC,OAAO4F,WAAWvC,IAClDnD,EAAEiH,KAAM,IAAAuJ,YAAWxQ,EAAEiH,IAE9BpI,KAAKgC,KAAKuD,UAAYvF,KAAKhB,cAAciC,OAAO2Q,KAAKzQ,EAAEiH,IAAI9D,IAE3DtE,KAAKgC,KAAKuD,UAAYvF,KAAKhB,cAAciC,OAAO4Q,WAAWvN,IAGzDnD,EAAEmQ,KAAOnQ,EAAEqQ,GAEbxR,KAAKiF,uBAAuB9D,EAAEkQ,GAAIlQ,EAAEmQ,GAAInQ,EAAEsQ,GAAKtQ,EAAEkQ,QAC5C,CAELrR,KAAKiF,uBAAuB9D,EAAEkQ,GAAIlQ,EAAEmQ,GAAInQ,EAAEgI,KAAOhI,EAAEkQ,IACnD,IAAK,IAAI1M,EAAIxD,EAAEmQ,GAAK,EAAG3M,EAAIxD,EAAEqQ,GAAI7M,IAC/B3E,KAAKiF,uBAAuB,EAAGN,EAAGxD,EAAEgI,MAEtCnJ,KAAKiF,uBAAuB,EAAG9D,EAAEqQ,GAAIrQ,EAAEsQ,G,CAEzCzR,KAAK0J,OAASvI,CAChB,CAEQgQ,yBAAyBhQ,GAC/BnB,KAAKoR,mBACP,EApEF,mB,+FCRA,eAYA,MAAalG,UAA6B,EAAA1M,gBAGxCE,YACEsO,EACAC,EACAnO,EACAoO,EACAG,EACA3C,EACAyC,EACAG,GAEAjO,MAAM2N,EAAUC,EAAW,YAAanO,GAAQ,EAAMwO,EAAcJ,EAAeC,EAAgBzC,EAAmB2C,GACtHrN,KAAK8R,aACP,CAEQA,cACN9R,KAAK0J,OAAS,CACZ/G,WAAOiH,EACPhH,SAAKgH,EACLpI,sBAAkBoI,EAClB5B,WAAO4B,EAEX,CAEO/F,OAAOC,GACZzE,MAAMwE,OAAOC,GAGT9D,KAAKJ,gBAAgB0B,gBAAkBtB,KAAKJ,gBAAgB2B,eAC9DvB,KAAK8R,cACL9R,KAAK+R,iBAAiB/R,KAAKJ,gBAAgB0B,eAAgBtB,KAAKJ,gBAAgB2B,aAAcvB,KAAKJ,gBAAgB4B,kBAEvH,CAEOJ,QACDpB,KAAK0J,OAAO/G,OAAS3C,KAAK0J,OAAO9G,MACnC5C,KAAK8R,cACL9R,KAAKoC,YAET,CAEOC,aACLrC,KAAKoB,QACLpB,KAAK+R,iBAAiB/R,KAAKJ,gBAAgB0B,eAAgBtB,KAAKJ,gBAAgB2B,aAAcvB,KAAKJ,gBAAgB4B,iBACrH,CAEOc,cACLtC,KAAKoB,QACLpB,KAAK+R,iBAAiB/R,KAAKJ,gBAAgB0B,eAAgBtB,KAAKJ,gBAAgB2B,aAAcvB,KAAKJ,gBAAgB4B,iBACrH,CAEOH,uBAAuBsB,EAAqCC,EAAmCpB,GACpGnC,MAAMgC,uBAAuBsB,EAAOC,EAAKpB,GACzCxB,KAAK+R,iBAAiBpP,EAAOC,EAAKpB,EACpC,CAEQuQ,iBAAiBpP,EAAqCC,EAAmCpB,GAE/F,IAAKxB,KAAKgS,gBAAgBrP,EAAOC,EAAKpB,EAAkBxB,KAAKf,eAAe8I,OAAOC,OACjF,OAOF,GAHAhI,KAAKoC,aAGAO,IAAUC,EAEb,YADA5C,KAAK8R,cAKP,MAAMG,EAAmBtP,EAAM,GAAK3C,KAAKf,eAAe8I,OAAOC,MACzDkK,EAAiBtP,EAAI,GAAK5C,KAAKf,eAAe8I,OAAOC,MACrDmK,EAAyBpN,KAAKqN,IAAIH,EAAkB,GACpDI,EAAuBtN,KAAKkK,IAAIiD,EAAgBlS,KAAKf,eAAeiE,KAAO,GAGjF,GAAIiP,GAA0BnS,KAAKf,eAAeiE,MAAQmP,EAAuB,EAC/ErS,KAAK0J,OAAO1B,MAAQhI,KAAKf,eAAe8I,OAAOC,UADjD,CASA,GAJAhI,KAAKgC,KAAKuD,WAAavF,KAAKZ,oBAAoBqO,UAC5CzN,KAAKhB,cAAciC,OAAOqR,+BAC1BtS,KAAKhB,cAAciC,OAAOsR,wCAAwCjO,IAElE9C,EAAkB,CACpB,MAAMgR,EAAW7P,EAAM,GACjBsB,EAAQrB,EAAI,GAAK4P,EACjBtO,EAASmO,EAAuBF,EAAyB,EAC/DnS,KAAKyE,WAAW+N,EAAUL,EAAwBlO,EAAOC,E,KACpD,CAEL,MAAMsO,EAAWP,IAAqBE,EAAyBxP,EAAM,GAAK,EACpE8P,EAAiBN,IAA2BD,EAAiBtP,EAAI,GAAK5C,KAAKf,eAAekK,KAChGnJ,KAAKyE,WAAW+N,EAAUL,EAAwBM,EAAiBD,EAAU,GAG7E,MAAME,EAAkB3N,KAAKqN,IAAIC,EAAuBF,EAAyB,EAAG,GAIpF,GAHAnS,KAAKyE,WAAW,EAAG0N,EAAyB,EAAGnS,KAAKf,eAAekK,KAAMuJ,GAGrEP,IAA2BE,EAAsB,CAEnD,MAAMM,EAAST,IAAmBG,EAAuBzP,EAAI,GAAK5C,KAAKf,eAAekK,KACtFnJ,KAAKyE,WAAW,EAAG4N,EAAsBM,EAAQ,E,EAKrD3S,KAAK0J,OAAO/G,MAAQ,CAACA,EAAM,GAAIA,EAAM,IACrC3C,KAAK0J,OAAO9G,IAAM,CAACA,EAAI,GAAIA,EAAI,IAC/B5C,KAAK0J,OAAOlI,iBAAmBA,EAC/BxB,KAAK0J,OAAO1B,MAAQhI,KAAKf,eAAe8I,OAAOC,K,CACjD,CAEQgK,gBAAgBrP,EAAqCC,EAAmCpB,EAA2BwG,GACzH,OAAQhI,KAAK4S,qBAAqBjQ,EAAO3C,KAAK0J,OAAO/G,SAClD3C,KAAK4S,qBAAqBhQ,EAAK5C,KAAK0J,OAAO9G,MAC5CpB,IAAqBxB,KAAK0J,OAAOlI,kBACjCwG,IAAUhI,KAAK0J,OAAO1B,KAC1B,CAEQ4K,qBAAqBC,EAAsCC,GACjE,SAAKD,IAAWC,IAITD,EAAO,KAAOC,EAAO,IAAMD,EAAO,KAAOC,EAAO,EACzD,EApIF,wB,0FCXA,eACA,SACA,SACA,SAEA,SAGA,SAWA,MAAa7H,UAAwB,EAAAzM,gBAOnCE,YACEsO,EACAC,EACAnO,EACAqD,EACA+K,EACAC,EACiB4F,EACjBrI,EACA2C,EACAC,GAEAjO,MAAM2N,EAAUC,EAAW,OAAQnO,EAAQqD,EAAOmL,EAAcJ,EAAeC,EAAgBzC,EAAmB2C,GALjG,KAAA0F,wBAAAA,EAZX,KAAAC,gBAA0B,EAC1B,KAAAC,eAAyB,GACzB,KAAAC,uBAAqD,CAAC,EACtD,KAAAC,UAAY,IAAI,EAAA3F,SAetBxN,KAAK0J,OAAS,IAAI,EAAA0J,UAClBpT,KAAKC,SAASkN,EAAekG,uBAAuB,qBAAqBC,GAAStT,KAAK8C,iBAAiBwQ,KAC1G,CAEOzP,OAAOC,GACZzE,MAAMwE,OAAOC,GAGb,MAAMyP,EAAevT,KAAKiH,UAAS,GAAO,GACtCjH,KAAKgT,kBAAoBlP,EAAIC,OAAOI,KAAKF,OAASjE,KAAKiT,iBAAmBM,IAC5EvT,KAAKgT,gBAAkBlP,EAAIC,OAAOI,KAAKF,MACvCjE,KAAKiT,eAAiBM,EACtBvT,KAAKkT,uBAAyB,CAAC,GAGjClT,KAAK0J,OAAO6C,QACZvM,KAAK0J,OAAO7F,OAAO7D,KAAKf,eAAekK,KAAMnJ,KAAKf,eAAeiE,KACnE,CAEO9B,QACLpB,KAAK0J,OAAO6C,QACZvM,KAAKoC,WACP,CAEQoR,aACNC,EACAC,EACAC,GAMA,IAAK,IAAIhP,EAAI8O,EAAU9O,GAAK+O,EAAS/O,IAAK,CACxC,MAAMiP,EAAMjP,EAAI3E,KAAKf,eAAe8I,OAAOC,MACrC6L,EAAO7T,KAAKf,eAAe8I,OAAOmH,MAAMC,IAAIyE,GAC5CE,EAAe9T,KAAK+S,wBAAwBgB,oBAAoBH,GACtE,IAAK,IAAIlP,EAAI,EAAGA,EAAI1E,KAAKf,eAAekK,KAAMzE,IAAK,CACjDmP,EAAMzE,SAAS1K,EAAG1E,KAAKmT,WACvB,IAAInP,EAAOhE,KAAKmT,UAGZa,GAAW,EACXC,EAAYvP,EAIhB,GAAwB,IAApBV,EAAKyL,WAAT,CAcA,GAAIqE,EAAanQ,OAAS,GAAKe,IAAMoP,EAAa,GAAG,GAAI,CACvDE,GAAW,EACX,MAAME,EAAQJ,EAAaK,QAI3BnQ,EAAO,IAAI,EAAAoQ,eACTpU,KAAKmT,UACLU,EAAMQ,mBAAkB,EAAMH,EAAM,GAAIA,EAAM,IAC9CA,EAAM,GAAKA,EAAM,IAInBD,EAAYC,EAAM,GAAK,C,EAOpBF,GAAYhU,KAAKsU,eAAetQ,IAQ/BiQ,EAAYJ,EAAMlQ,OAAS,GAAKkQ,EAAMU,aAAaN,EAAY,KAAO,EAAAO,iBAExExQ,EAAKqL,UAAW,SAChBrL,EAAKqL,SAAW,GAAK,IASzBsE,EACE3P,EACAU,EACAC,GAGFD,EAAIuP,C,GAGV,CAMQQ,gBAAgBhB,EAAkBC,GACxC,MAAMgB,EAAM1U,KAAKgC,KACXmH,EAAOnJ,KAAKf,eAAekK,KACjC,IAAIwL,EAAiB,EACjBC,EAAiB,EACjBC,EAA+B,KAEnCH,EAAItP,OAEJpF,KAAKwT,aAAaC,EAAUC,GAAS,CAAC1P,EAAMU,EAAGC,KAG7C,IAAImQ,EAAgB,KAEhB9Q,EAAK+Q,YAELD,EADE9Q,EAAKgR,cACShV,KAAKhB,cAAciC,OAAO4Q,WAAWvN,IAC5CN,EAAKiR,UACE,OAAO,EAAAC,cAAcC,WAAWnR,EAAKoR,cAAcC,KAAK,QAExDrV,KAAKhB,cAAciC,OAAO2Q,KAAK5N,EAAKoR,cAAc9Q,IAE3DN,EAAKsR,UACdR,EAAgB,OAAO,EAAAI,cAAcC,WAAWnR,EAAKuR,cAAcF,KAAK,QAC/DrR,EAAKwR,gBACdV,EAAgB9U,KAAKhB,cAAciC,OAAO2Q,KAAK5N,EAAKuR,cAAcjR,KAKpE,IAAImR,GAAQ,EACZzV,KAAKb,mBAAmBuW,wBAAwBhR,EAAG1E,KAAKf,eAAe8I,OAAOC,MAAQrD,OAAGiF,GAAW+L,IAC1E,QAApBA,EAAEC,QAAQvK,OAAmBoK,IAG7BE,EAAEE,qBACJf,EAAgBa,EAAEE,mBAAmBvR,KAEvCmR,EAA4B,QAApBE,EAAEC,QAAQvK,MAAe,IAGb,OAAlBwJ,IAGFF,EAASjQ,EACTkQ,EAASjQ,GAGPA,IAAMiQ,GAERF,EAAInP,UAAYsP,GAAiB,GACjC7U,KAAKyE,WAAWkQ,EAAQC,EAAQzL,EAAOwL,EAAQ,GAC/CA,EAASjQ,EACTkQ,EAASjQ,GACAkQ,IAAkBC,IAE3BJ,EAAInP,UAAYsP,GAAiB,GACjC7U,KAAKyE,WAAWkQ,EAAQC,EAAQlQ,EAAIiQ,EAAQ,GAC5CA,EAASjQ,EACTkQ,EAASjQ,GAGXkQ,EAAgBC,CAAa,IAIT,OAAlBD,IACFH,EAAInP,UAAYsP,EAChB7U,KAAKyE,WAAWkQ,EAAQC,EAAQzL,EAAOwL,EAAQ,IAGjDD,EAAIvO,SACN,CAEQ2P,gBAAgBrC,EAAkBC,GACxC1T,KAAKwT,aAAaC,EAAUC,GAAS,CAAC1P,EAAMU,EAAGC,IAAM3E,KAAK2H,WAAW3D,EAAMU,EAAGC,IAChF,CAEOnC,kBAAkBiR,EAAkBC,GAER,IAA7B1T,KAAK0J,OAAOoH,MAAMnN,SAIlB3D,KAAK2B,YACP3B,KAAK2B,WAAWoU,aAGlB/V,KAAK8G,YAAY,EAAG2M,EAAUzT,KAAKf,eAAekK,KAAMuK,EAAUD,EAAW,GAC7EzT,KAAKyU,gBAAgBhB,EAAUC,GAC/B1T,KAAK8V,gBAAgBrC,EAAUC,GACjC,CAKQY,eAAetQ,GAGrB,GAAwB,IAApBA,EAAKyL,WACP,OAAO,EAIT,GAAIzL,EAAKuE,UAAY,IACnB,OAAO,EAGT,MAAMX,EAAQ5D,EAAKwD,WAGnB,GAAIxH,KAAKkT,uBAAuB8C,eAAepO,GAC7C,OAAO5H,KAAKkT,uBAAuBtL,GAIrC5H,KAAKgC,KAAKoD,OACVpF,KAAKgC,KAAKgF,KAAOhH,KAAKiT,eAKtB,MAAMgD,EAAWlR,KAAK4H,MAAM3M,KAAKgC,KAAKkU,YAAYtO,GAAO3D,OAASjE,KAAKgT,gBAOvE,OAJAhT,KAAKgC,KAAKmE,UAGVnG,KAAKkT,uBAAuBtL,GAASqO,EAC9BA,CACT,EA1QF,mB,0FCjBA,IAKIE,EALAC,EAAM,EACNC,EAAM,EACNC,GAAS,EACTC,GAAS,EACTC,GAAc,EAGlB,0BAWE9X,YACmBC,EACA8X,EACAtX,EACAC,EACAJ,GAJA,KAAAL,UAAAA,EACA,KAAA8X,sBAAAA,EACA,KAAAtX,mBAAAA,EACA,KAAAC,oBAAAA,EACA,KAAAJ,cAAAA,EAXH,KAAAkJ,OAAkD,CAChEE,GAAI,EACJD,GAAI,EACJE,IAAK,EAUP,CAMOP,QAAQ9D,EAAiBU,EAAWC,GACzC3E,KAAKkI,OAAOC,GAAKnE,EAAKmE,GACtBnI,KAAKkI,OAAOE,GAAKpE,EAAKoE,GACtBpI,KAAKkI,OAAOG,IAAgB,UAAVrE,EAAKmE,GAA4BnE,EAAK0S,SAASrO,IAAM,EAKvEgO,EAAM,EACND,EAAM,EACNG,GAAS,EACTD,GAAS,EACTE,GAAc,EACdL,EAAUnW,KAAKhB,cAAciC,OAG7BjB,KAAKb,mBAAmBuW,wBAAwBhR,EAAGC,EAAG,UAAUgR,IAC1DA,EAAEE,qBACJQ,EAAMV,EAAEE,mBAAmBc,MAAQ,EAAI,SACvCJ,GAAS,GAEPZ,EAAEiB,qBACJR,EAAMT,EAAEiB,mBAAmBD,MAAQ,EAAI,SACvCL,GAAS,E,IAKbE,EAAcxW,KAAKyW,sBAAsBI,eAAe7W,KAAKrB,UAAW+F,EAAGC,GACvE6R,IACFH,GAAOrW,KAAKZ,oBAAoBqO,UAAY0I,EAAQW,0BAA4BX,EAAQY,mCAAmCJ,MAAQ,EAAI,SACvIJ,GAAS,EACLJ,EAAQ9J,sBACV+J,EAAMD,EAAQ9J,oBAAoBsK,MAAQ,EAAI,SAC9CL,GAAS,IAKbtW,KAAKb,mBAAmBuW,wBAAwBhR,EAAGC,EAAG,OAAOgR,IACvDA,EAAEE,qBACJQ,EAAMV,EAAEE,mBAAmBc,MAAQ,EAAI,SACvCJ,GAAS,GAEPZ,EAAEiB,qBACJR,EAAMT,EAAEiB,mBAAmBD,MAAQ,EAAI,SACvCL,GAAS,E,IAMTC,IAGAF,EAFEG,GAEe,SAAVxS,EAAKmE,IAA4B,UAAgBkO,EAAM,UAG7C,SAAVrS,EAAKmE,GAA6BkO,EAAM,UAG/CC,IAEFF,GAAiB,SAAVpS,EAAKoE,IAA4B,SAAoBgO,EAAM,UAK/C,SAAjBpW,KAAKkI,OAAOE,KACVmO,IAAWD,IAGXF,EAD4C,IAAxB,SAAjBpW,KAAKkI,OAAOC,KACS,UAAjBnI,KAAKkI,OAAOE,GAAuG,SAA/B+N,EAAQtP,WAAW8P,MAAQ,EAAuC,UAErI,UAAjB3W,KAAKkI,OAAOE,GAAuF,SAAjBpI,KAAKkI,OAAOC,GAEvGmO,GAAS,IAENC,GAAUD,IAGXD,EAD4C,IAAxB,SAAjBrW,KAAKkI,OAAOE,KACS,SAAjBpI,KAAKkI,OAAOC,GAAqF,SAA/BgO,EAAQtE,WAAW8E,MAAQ,EAAuC,UAEnH,SAAjB3W,KAAKkI,OAAOC,GAAqE,SAAjBnI,KAAKkI,OAAOE,GAErFmO,GAAS,IAKbJ,OAAUvM,EAGV5J,KAAKkI,OAAOC,GAAKoO,EAASF,EAAMrW,KAAKkI,OAAOC,GAC5CnI,KAAKkI,OAAOE,GAAKkO,EAASF,EAAMpW,KAAKkI,OAAOE,EAC9C,E,wHClIF,eAIA,SAUM4O,EAA4C,GAMlD,+BACEhK,EACA4I,EACA3U,EACAgW,EACAC,EACAC,EACAC,EACAC,GAEA,MAAMC,GAAY,IAAAC,gBAAeN,EAAiBC,EAAkBC,EAAiBC,EAAkBxB,EAAS3U,EAAQoW,GAGxH,IAAK,IAAI3T,EAAI,EAAGA,EAAIsT,EAAerT,OAAQD,IAAK,CAC9C,MAAM8T,EAAQR,EAAetT,GACvB+T,EAAeD,EAAME,QAAQC,QAAQ3K,GAC3C,GAAIyK,GAAgB,EAAG,CACrB,IAAI,IAAAG,cAAaJ,EAAMK,OAAQP,GAC7B,OAAOE,EAAMM,MAGc,IAAzBN,EAAME,QAAQ/T,QAChB6T,EAAMM,MAAMlW,UACZoV,EAAee,OAAOrU,EAAG,IAEzB8T,EAAME,QAAQK,OAAON,EAAc,GAErC,K,EAKJ,IAAK,IAAI/T,EAAI,EAAGA,EAAIsT,EAAerT,OAAQD,IAAK,CAC9C,MAAM8T,EAAQR,EAAetT,GAC7B,IAAI,IAAAkU,cAAaJ,EAAMK,OAAQP,GAG7B,OADAE,EAAME,QAAQ3G,KAAK/D,GACZwK,EAAMM,K,CAIjB,MAAME,EAAmBhL,EAAiBiL,MACpCC,EAAoC,CACxCJ,MAAO,IAAI,EAAAK,aAAa3X,SAAU8W,EAAWU,EAAKI,gBAClDP,OAAQP,EACRI,QAAS,CAAC1K,IAGZ,OADAgK,EAAejG,KAAKmH,GACbA,EAASJ,KAClB,EAMA,mCAAwC9K,GACtC,IAAK,IAAItJ,EAAI,EAAGA,EAAIsT,EAAerT,OAAQD,IAAK,CAC9C,MAAM2U,EAAQrB,EAAetT,GAAGgU,QAAQC,QAAQ3K,GAChD,IAAe,IAAXqL,EAAc,CACyB,IAArCrB,EAAetT,GAAGgU,QAAQ/T,QAE5BqT,EAAetT,GAAGoU,MAAMlW,UACxBoV,EAAee,OAAOrU,EAAG,IAGzBsT,EAAetT,GAAGgU,QAAQK,OAAOM,EAAO,GAE1C,K,EAGN,C,qHCtFA,eAEA,0BAA+BpB,EAAyBC,EAA0BC,EAAyBC,EAA0BxB,EAAqC3U,EAA0BoW,GAElM,MAAMiB,EAA0B,CAC9BzG,WAAY5Q,EAAO4Q,WACnBhL,WAAY5F,EAAO4F,WACnByI,OAAQ,EAAAiJ,WACR1I,aAAc,EAAA0I,WACdlM,oBAAqB,EAAAkM,WACrBjG,+BAAgC,EAAAiG,WAChCzB,0BAA2B,EAAAyB,WAC3BhG,uCAAwC,EAAAgG,WACxCxB,kCAAmC,EAAAwB,WAGnC3G,KAAM3Q,EAAO2Q,KAAK4G,QAClBC,cAAexX,EAAOwX,eAExB,MAAO,CACLnR,aAAcsO,EAAQtO,aACtB+P,mBACAvK,cAAe8I,EAAQ9I,cACvBF,WAAYgJ,EAAQhJ,WACpBqK,gBAAiBA,EACjBC,iBAAkBA,EAClBC,gBAAiBA,EACjBC,iBAAkBA,EAClB3N,WAAYmM,EAAQnM,WACpBhC,SAAUmO,EAAQnO,SAClB+B,WAAYoM,EAAQpM,WACpBD,eAAgBqM,EAAQrM,eACxBwB,kBAAmB6K,EAAQ7K,kBAC3B2N,2BAA4B9C,EAAQ8C,2BACpCC,qBAAsB/C,EAAQ+C,qBAC9B1X,OAAQqX,EAEZ,EAEA,wBAA6BM,EAAqBC,GAChD,IAAK,IAAInV,EAAI,EAAGA,EAAIkV,EAAE3X,OAAO2Q,KAAKjO,OAAQD,IACxC,GAAIkV,EAAE3X,OAAO2Q,KAAKlO,GAAGiT,OAASkC,EAAE5X,OAAO2Q,KAAKlO,GAAGiT,KAC7C,OAAO,EAGX,OAAOiC,EAAEvB,mBAAqBwB,EAAExB,kBAC5BuB,EAAEtR,eAAiBuR,EAAEvR,cACrBsR,EAAEhM,aAAeiM,EAAEjM,YACnBgM,EAAE9L,gBAAkB+L,EAAE/L,eACtB8L,EAAEnP,aAAeoP,EAAEpP,YACnBmP,EAAEnR,WAAaoR,EAAEpR,UACjBmR,EAAEpP,aAAeqP,EAAErP,YACnBoP,EAAErP,iBAAmBsP,EAAEtP,gBACvBqP,EAAE7N,oBAAsB8N,EAAE9N,mBAC1B6N,EAAEzB,kBAAoB0B,EAAE1B,iBACxByB,EAAExB,mBAAqByB,EAAEzB,kBACzBwB,EAAEF,6BAA+BG,EAAEH,4BACnCE,EAAED,uBAAyBE,EAAEF,sBAC7BC,EAAE3X,OAAO4Q,WAAW8E,OAASkC,EAAE5X,OAAO4Q,WAAW8E,MACjDiC,EAAE3X,OAAO4F,WAAW8P,OAASkC,EAAE5X,OAAO4F,WAAW8P,IACvD,EAEA,sBAA2BmC,GACzB,OAA4C,WAAxB,SAAZA,IAA8F,WAAxB,SAAZA,EACpE,C,+HCpEA,eAEa,EAAApH,uBAAyB,IAEzB,EAAAqH,YAAc,GAId,EAAA5R,cAAoC,EAAAwI,WAAa,EAAAqJ,aAAe,SAAW,a,qKCRxF,eASa,EAAAC,wBAA2E,CAEtF,IAAK,CAAC,CAAEvU,EAAG,EAAGC,EAAG,EAAGgH,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElH,EAAG,EAAGC,EAAG,EAAGgH,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElH,EAAG,EAAGC,EAAG,EAAGgH,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElH,EAAG,EAAGC,EAAG,EAAGgH,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElH,EAAG,EAAGC,EAAG,EAAGgH,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElH,EAAG,EAAGC,EAAG,EAAGgH,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElH,EAAG,EAAGC,EAAG,EAAGgH,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElH,EAAG,EAAGC,EAAG,EAAGgH,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElH,EAAG,EAAGC,EAAG,EAAGgH,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElH,EAAG,EAAGC,EAAG,EAAGgH,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElH,EAAG,EAAGC,EAAG,EAAGgH,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElH,EAAG,EAAGC,EAAG,EAAGgH,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElH,EAAG,EAAGC,EAAG,EAAGgH,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElH,EAAG,EAAGC,EAAG,EAAGgH,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElH,EAAG,EAAGC,EAAG,EAAGgH,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElH,EAAG,EAAGC,EAAG,EAAGgH,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElH,EAAG,EAAGC,EAAG,EAAGgH,EAAG,EAAGC,EAAG,IAG7B,IAAK,CAAC,CAAElH,EAAG,EAAGC,EAAG,EAAGgH,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElH,EAAG,EAAGC,EAAG,EAAGgH,EAAG,EAAGC,EAAG,IAG7B,IAAK,CAAC,CAAElH,EAAG,EAAGC,EAAG,EAAGgH,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CAAElH,EAAG,EAAGC,EAAG,EAAGgH,EAAG,EAAGC,EAAG,IAC7B,IAAK,CAAC,CA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","sources":["webpack://CanvasAddon/webpack/universalModuleDefinition","webpack://CanvasAddon/./src/BaseRenderLayer.ts","webpack://CanvasAddon/./src/CanvasRenderer.ts","webpack://CanvasAddon/./src/CursorRenderLayer.ts","webpack://CanvasAddon/./src/GridCache.ts","webpack://CanvasAddon/./src/LinkRenderLayer.ts","webpack://CanvasAddon/./src/SelectionRenderLayer.ts","webpack://CanvasAddon/./src/TextRenderLayer.ts","webpack://CanvasAddon/../../src/browser/renderer/shared/CellColorResolver.ts","webpack://CanvasAddon/../../src/browser/renderer/shared/CharAtlasCache.ts","webpack://CanvasAddon/../../src/browser/renderer/shared/CharAtlasUtils.ts","webpack://CanvasAddon/../../src/browser/renderer/shared/Constants.ts","webpack://CanvasAddon/../../src/browser/renderer/shared/CustomGlyphs.ts","webpack://CanvasAddon/../../src/browser/renderer/shared/DevicePixelObserver.ts","webpack://CanvasAddon/../../src/browser/renderer/shared/RendererUtils.ts","webpack://CanvasAddon/../../src/browser/renderer/shared/SelectionRenderModel.ts","webpack://CanvasAddon/../../src/browser/renderer/shared/TextureAtlas.ts","webpack://CanvasAddon/../../src/browser/services/CharacterJoinerService.ts","webpack://CanvasAddon/../../src/common/Color.ts","webpack://CanvasAddon/../../src/common/EventEmitter.ts","webpack://CanvasAddon/../../src/common/Lifecycle.ts","webpack://CanvasAddon/../../src/common/MultiKeyMap.ts","webpack://CanvasAddon/../../src/common/Platform.ts","webpack://CanvasAddon/../../src/common/TaskQueue.ts","webpack://CanvasAddon/../../src/common/buffer/AttributeData.ts","webpack://CanvasAddon/../../src/common/buffer/CellData.ts","webpack://CanvasAddon/../../src/common/buffer/Constants.ts","webpack://CanvasAddon/../../src/common/input/TextDecoder.ts","webpack://CanvasAddon/../../src/common/services/ServiceRegistry.ts","webpack://CanvasAddon/../../src/common/services/Services.ts","webpack://CanvasAddon/webpack/bootstrap","webpack://CanvasAddon/./src/CanvasAddon.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CanvasAddon\"] = factory();\n\telse\n\t\troot[\"CanvasAddon\"] = factory();\n})(self, () => {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { acquireTextureAtlas } from 'browser/renderer/shared/CharAtlasCache';\nimport { TEXT_BASELINE } from 'browser/renderer/shared/Constants';\nimport { tryDrawCustomChar } from 'browser/renderer/shared/CustomGlyphs';\nimport { throwIfFalsy } from 'browser/renderer/shared/RendererUtils';\nimport { IRasterizedGlyph, IRenderDimensions, ISelectionRenderModel, ITextureAtlas } from 'browser/renderer/shared/Types';\nimport { createSelectionRenderModel } from 'browser/renderer/shared/SelectionRenderModel';\nimport { ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ReadonlyColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { ICellData, IDisposable } from 'common/Types';\nimport { Terminal } from 'xterm';\nimport { IRenderLayer } from './Types';\nimport { CellColorResolver } from 'browser/renderer/shared/CellColorResolver';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { isSafari } from 'common/Platform';\nimport { EventEmitter, forwardEvent } from 'common/EventEmitter';\n\nexport abstract class BaseRenderLayer extends Disposable implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _deviceCharWidth: number = 0;\n  private _deviceCharHeight: number = 0;\n  private _deviceCellWidth: number = 0;\n  private _deviceCellHeight: number = 0;\n  private _deviceCharLeft: number = 0;\n  private _deviceCharTop: number = 0;\n\n  protected _selectionModel: ISelectionRenderModel = createSelectionRenderModel();\n  private _cellColorResolver: CellColorResolver;\n  private _bitmapGenerator: (BitmapGenerator | undefined)[] = [];\n\n  protected _charAtlas!: ITextureAtlas;\n  private _charAtlasDisposable?: IDisposable;\n\n  public get canvas(): HTMLCanvasElement { return this._canvas; }\n  public get cacheCanvas(): HTMLCanvasElement { return this._charAtlas?.pages[0].canvas!; }\n\n  private readonly _onAddTextureAtlasCanvas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onAddTextureAtlasCanvas = this._onAddTextureAtlasCanvas.event;\n\n  constructor(\n    private readonly _terminal: Terminal,\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected readonly _themeService: IThemeService,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService,\n    protected readonly _decorationService: IDecorationService,\n    protected readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n    this._cellColorResolver = new CellColorResolver(this._terminal, this._selectionModel, this._decorationService, this._coreBrowserService, this._themeService);\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n    this._refreshCharAtlas(this._themeService.colors);\n    this.register(this._themeService.onChangeColors(e => {\n      this._refreshCharAtlas(e);\n      this.reset();\n      // Trigger selection changed as it's handled separately to regular rendering\n      this.handleSelectionChanged(this._selectionModel.selectionStart, this._selectionModel.selectionEnd, this._selectionModel.columnSelectMode);\n    }));\n\n    this.register(toDisposable(() => {\n      this._canvas.remove();\n      this._charAtlas?.dispose();\n    }));\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', { alpha: this._alpha }));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public handleBlur(): void {}\n  public handleFocus(): void {}\n  public handleCursorMove(): void {}\n  public handleGridChanged(startRow: number, endRow: number): void {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this._selectionModel.update(this._terminal, start, end, columnSelectMode);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._themeService.colors);\n    this.handleGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: ReadonlyColorSet): void {\n    if (this._deviceCharWidth <= 0 && this._deviceCharHeight <= 0) {\n      return;\n    }\n    this._charAtlasDisposable?.dispose();\n    this._charAtlas = acquireTextureAtlas(this._terminal, this._optionsService.rawOptions, colorSet, this._deviceCellWidth, this._deviceCellHeight, this._deviceCharWidth, this._deviceCharHeight, this._coreBrowserService.dpr);\n    this._charAtlasDisposable = forwardEvent(this._charAtlas.onAddTextureAtlasCanvas, this._onAddTextureAtlasCanvas);\n    this._charAtlas.warmUp();\n    for (let i = 0; i < this._charAtlas.pages.length; i++) {\n      this._bitmapGenerator[i] = new BitmapGenerator(this._charAtlas.pages[i].canvas);\n    }\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._deviceCellWidth = dim.device.cell.width;\n    this._deviceCellHeight = dim.device.cell.height;\n    this._deviceCharWidth = dim.device.char.width;\n    this._deviceCharHeight = dim.device.char.height;\n    this._deviceCharLeft = dim.device.char.left;\n    this._deviceCharTop = dim.device.char.top;\n    this._canvas.width = dim.device.canvas.width;\n    this._canvas.height = dim.device.canvas.height;\n    this._canvas.style.width = `${dim.css.canvas.width}px`;\n    this._canvas.style.height = `${dim.css.canvas.height}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._themeService.colors);\n  }\n\n  public abstract reset(): void;\n\n  public clearTextureAtlas(): void {\n    this._charAtlas?.clearTexture();\n  }\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._deviceCellWidth,\n      y * this._deviceCellHeight,\n      width * this._deviceCellWidth,\n      height * this._deviceCellHeight);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the middle of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillMiddleLineAtCells(x: number, y: number, width: number = 1): void {\n    const cellOffset = Math.ceil(this._deviceCellHeight * 0.5);\n    this._ctx.fillRect(\n      x * this._deviceCellWidth,\n      (y + 1) * this._deviceCellHeight - cellOffset - this._coreBrowserService.dpr,\n      width * this._deviceCellWidth,\n      this._coreBrowserService.dpr);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1, pixelOffset: number = 0): void {\n    this._ctx.fillRect(\n      x * this._deviceCellWidth,\n      (y + 1) * this._deviceCellHeight + pixelOffset - this._coreBrowserService.dpr - 1 /* Ensure it's drawn within the cell */,\n      width * this._deviceCellWidth,\n      this._coreBrowserService.dpr);\n  }\n\n  protected _curlyUnderlineAtCell(x: number, y: number, width: number = 1): void {\n    this._ctx.save();\n    this._ctx.beginPath();\n    this._ctx.strokeStyle = this._ctx.fillStyle;\n    const lineWidth = this._coreBrowserService.dpr;\n    this._ctx.lineWidth = lineWidth;\n    for (let xOffset = 0; xOffset < width; xOffset++) {\n      const xLeft = (x + xOffset) * this._deviceCellWidth;\n      const xMid = (x + xOffset + 0.5) * this._deviceCellWidth;\n      const xRight = (x + xOffset + 1) * this._deviceCellWidth;\n      const yMid = (y + 1) * this._deviceCellHeight - lineWidth - 1;\n      const yMidBot = yMid - lineWidth;\n      const yMidTop = yMid + lineWidth;\n      this._ctx.moveTo(xLeft, yMid);\n      this._ctx.bezierCurveTo(\n        xLeft, yMidBot,\n        xMid, yMidBot,\n        xMid, yMid\n      );\n      this._ctx.bezierCurveTo(\n        xMid, yMidTop,\n        xRight, yMidTop,\n        xRight, yMid\n      );\n    }\n    this._ctx.stroke();\n    this._ctx.restore();\n  }\n\n  protected _dottedUnderlineAtCell(x: number, y: number, width: number = 1): void {\n    this._ctx.save();\n    this._ctx.beginPath();\n    this._ctx.strokeStyle = this._ctx.fillStyle;\n    const lineWidth = this._coreBrowserService.dpr;\n    this._ctx.lineWidth = lineWidth;\n    this._ctx.setLineDash([lineWidth * 2, lineWidth]);\n    const xLeft = x * this._deviceCellWidth;\n    const yMid = (y + 1) * this._deviceCellHeight - lineWidth - 1;\n    this._ctx.moveTo(xLeft, yMid);\n    for (let xOffset = 0; xOffset < width; xOffset++) {\n      // const xLeft = x * this._deviceCellWidth;\n      const xRight = (x + width + xOffset) * this._deviceCellWidth;\n      this._ctx.lineTo(xRight, yMid);\n    }\n    this._ctx.stroke();\n    this._ctx.closePath();\n    this._ctx.restore();\n  }\n\n  protected _dashedUnderlineAtCell(x: number, y: number, width: number = 1): void {\n    this._ctx.save();\n    this._ctx.beginPath();\n    this._ctx.strokeStyle = this._ctx.fillStyle;\n    const lineWidth = this._coreBrowserService.dpr;\n    this._ctx.lineWidth = lineWidth;\n    this._ctx.setLineDash([lineWidth * 4, lineWidth * 3]);\n    const xLeft = x * this._deviceCellWidth;\n    const xRight = (x + width) * this._deviceCellWidth;\n    const yMid = (y + 1) * this._deviceCellHeight - lineWidth - 1;\n    this._ctx.moveTo(xLeft, yMid);\n    this._ctx.lineTo(xRight, yMid);\n    this._ctx.stroke();\n    this._ctx.closePath();\n    this._ctx.restore();\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._deviceCellWidth,\n      y * this._deviceCellHeight,\n      this._coreBrowserService.dpr * width,\n      this._deviceCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    const lineWidth = this._coreBrowserService.dpr;\n    this._ctx.lineWidth = lineWidth;\n    this._ctx.strokeRect(\n      x * this._deviceCellWidth + lineWidth / 2,\n      y * this._deviceCellHeight + (lineWidth / 2),\n      width * this._deviceCellWidth - lineWidth,\n      (height * this._deviceCellHeight) - lineWidth);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._themeService.colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._deviceCellWidth,\n        y * this._deviceCellHeight,\n        width * this._deviceCellWidth,\n        height * this._deviceCellHeight);\n    } else {\n      this._ctx.fillStyle = this._themeService.colors.background.css;\n      this._ctx.fillRect(\n        x * this._deviceCellWidth,\n        y * this._deviceCellHeight,\n        width * this._deviceCellWidth,\n        height * this._deviceCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = TEXT_BASELINE;\n    this._clipRow(y);\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.rawOptions.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._deviceCellWidth, y * this._deviceCellHeight, this._deviceCellWidth, this._deviceCellHeight, this._optionsService.rawOptions.fontSize, this._coreBrowserService.dpr);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._deviceCellWidth + this._deviceCharLeft,\n        y * this._deviceCellHeight + this._deviceCharTop + this._deviceCharHeight);\n    }\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n    const chars = cell.getChars();\n    this._cellColorResolver.resolve(cell, x, this._bufferService.buffer.ydisp + y);\n    let glyph: IRasterizedGlyph;\n    if (chars && chars.length > 1) {\n      glyph = this._charAtlas.getRasterizedGlyphCombinedChar(chars, this._cellColorResolver.result.bg, this._cellColorResolver.result.fg, this._cellColorResolver.result.ext);\n    } else {\n      glyph = this._charAtlas.getRasterizedGlyph(cell.getCode() || WHITESPACE_CELL_CODE, this._cellColorResolver.result.bg, this._cellColorResolver.result.fg, this._cellColorResolver.result.ext);\n    }\n    if (!glyph.size.x || !glyph.size.y) {\n      return;\n    }\n    this._ctx.save();\n    this._clipRow(y);\n\n    // Draw the image, use the bitmap if it's available\n\n    // HACK: If the canvas doesn't match, delete the generator. It's not clear how this happens but\n    // something is wrong with either the lifecycle of _bitmapGenerator or the page canvases are\n    // swapped out unexpectedly\n    if (this._bitmapGenerator[glyph.texturePage] && this._charAtlas.pages[glyph.texturePage].canvas !== this._bitmapGenerator[glyph.texturePage]!.canvas) {\n      this._bitmapGenerator[glyph.texturePage]?.bitmap?.close();\n      delete this._bitmapGenerator[glyph.texturePage];\n    }\n\n    if (this._charAtlas.pages[glyph.texturePage].version !== this._bitmapGenerator[glyph.texturePage]?.version) {\n      if (!this._bitmapGenerator[glyph.texturePage]) {\n        this._bitmapGenerator[glyph.texturePage] = new BitmapGenerator(this._charAtlas.pages[glyph.texturePage].canvas);\n      }\n      this._bitmapGenerator[glyph.texturePage]!.refresh();\n      this._bitmapGenerator[glyph.texturePage]!.version = this._charAtlas.pages[glyph.texturePage].version;\n    }\n    this._ctx.drawImage(\n      this._bitmapGenerator[glyph.texturePage]?.bitmap || this._charAtlas!.pages[glyph.texturePage].canvas,\n      glyph.texturePosition.x,\n      glyph.texturePosition.y,\n      glyph.size.x,\n      glyph.size.y,\n      x * this._deviceCellWidth + this._deviceCharLeft - glyph.offset.x,\n      y * this._deviceCellHeight + this._deviceCharTop - glyph.offset.y,\n      glyph.size.x,\n      glyph.size.y\n    );\n    this._ctx.restore();\n  }\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      0,\n      y * this._deviceCellHeight,\n      this._bufferService.cols * this._deviceCellWidth,\n      this._deviceCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.rawOptions.fontWeightBold : this._optionsService.rawOptions.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.rawOptions.fontSize * this._coreBrowserService.dpr}px ${this._optionsService.rawOptions.fontFamily}`;\n  }\n}\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\nconst enum BitmapGeneratorState {\n  IDLE = 0,\n  GENERATING = 1,\n  GENERATING_INVALID = 2\n}\n\nclass BitmapGenerator {\n  private _state: BitmapGeneratorState = BitmapGeneratorState.IDLE;\n  private _commitTimeout: number | undefined = undefined;\n  private _bitmap: ImageBitmap | undefined = undefined;\n  public get bitmap(): ImageBitmap | undefined { return this._bitmap; }\n  public version: number = -1;\n\n  constructor(public readonly canvas: HTMLCanvasElement) {\n  }\n\n  public refresh(): void {\n    // Clear the bitmap immediately as it's stale\n    this._bitmap?.close();\n    this._bitmap = undefined;\n    // Disable ImageBitmaps on Safari because of https://bugs.webkit.org/show_bug.cgi?id=149990\n    if (isSafari) {\n      return;\n    }\n    if (this._commitTimeout === undefined) {\n      this._commitTimeout = window.setTimeout(() => this._generate(), GLYPH_BITMAP_COMMIT_DELAY);\n    }\n    if (this._state === BitmapGeneratorState.GENERATING) {\n      this._state = BitmapGeneratorState.GENERATING_INVALID;\n    }\n  }\n\n  private _generate(): void {\n    if (this._state === BitmapGeneratorState.IDLE) {\n      this._bitmap?.close();\n      this._bitmap = undefined;\n      this._state = BitmapGeneratorState.GENERATING;\n      window.createImageBitmap(this.canvas).then(bitmap => {\n        if (this._state === BitmapGeneratorState.GENERATING_INVALID) {\n          this.refresh();\n        } else {\n          this._bitmap = bitmap;\n        }\n        this._state = BitmapGeneratorState.IDLE;\n      });\n      if (this._commitTimeout) {\n        this._commitTimeout = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { removeTerminalFromCache } from 'browser/renderer/shared/CharAtlasCache';\nimport { observeDevicePixelDimensions } from 'browser/renderer/shared/DevicePixelObserver';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharacterJoinerService, ICharSizeService, ICoreBrowserService, ISelectionService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2 } from 'browser/Types';\nimport { EventEmitter, forwardEvent } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { Terminal } from 'xterm';\nimport { CursorRenderLayer } from './CursorRenderLayer';\nimport { LinkRenderLayer } from './LinkRenderLayer';\nimport { SelectionRenderLayer } from './SelectionRenderLayer';\nimport { TextRenderLayer } from './TextRenderLayer';\nimport { IRenderLayer } from './Types';\n\nexport class CanvasRenderer extends Disposable implements IRenderer {\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n\n  public dimensions: IRenderDimensions;\n\n  private readonly _onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>());\n  public readonly onRequestRedraw = this._onRequestRedraw.event;\n  private readonly _onChangeTextureAtlas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onChangeTextureAtlas = this._onChangeTextureAtlas.event;\n  private readonly _onAddTextureAtlasCanvas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onAddTextureAtlasCanvas = this._onAddTextureAtlasCanvas.event;\n\n  constructor(\n    private readonly _terminal: Terminal,\n    private readonly _screenElement: HTMLElement,\n    linkifier2: ILinkifier2,\n    private readonly _bufferService: IBufferService,\n    private readonly _charSizeService: ICharSizeService,\n    private readonly _optionsService: IOptionsService,\n    characterJoinerService: ICharacterJoinerService,\n    coreService: ICoreService,\n    private readonly _coreBrowserService: ICoreBrowserService,\n    decorationService: IDecorationService,\n    private readonly _themeService: IThemeService\n  ) {\n    super();\n    const allowTransparency = this._optionsService.rawOptions.allowTransparency;\n    this._renderLayers = [\n      new TextRenderLayer(this._terminal, this._screenElement, 0, allowTransparency, this._bufferService, this._optionsService, characterJoinerService, decorationService, this._coreBrowserService, _themeService),\n      new SelectionRenderLayer(this._terminal, this._screenElement, 1, this._bufferService, this._coreBrowserService, decorationService, this._optionsService, _themeService),\n      new LinkRenderLayer(this._terminal, this._screenElement, 2, linkifier2, this._bufferService, this._optionsService, decorationService, this._coreBrowserService, _themeService),\n      new CursorRenderLayer(this._terminal, this._screenElement, 3, this._onRequestRedraw, this._bufferService, this._optionsService, coreService, this._coreBrowserService, decorationService, _themeService)\n    ];\n    for (const layer of this._renderLayers) {\n      forwardEvent(layer.onAddTextureAtlasCanvas, this._onAddTextureAtlasCanvas);\n    }\n    this.dimensions = createRenderDimensions();\n    this._devicePixelRatio = this._coreBrowserService.dpr;\n    this._updateDimensions();\n\n    this.register(observeDevicePixelDimensions(this._renderLayers[0].canvas, this._coreBrowserService.window, (w, h) => this._setCanvasDevicePixelDimensions(w, h)));\n    this.register(toDisposable(() => {\n      for (const l of this._renderLayers) {\n        l.dispose();\n      }\n      removeTerminalFromCache(this._terminal);\n    }));\n  }\n\n  public get textureAtlas(): HTMLCanvasElement | undefined {\n    return this._renderLayers[0].cacheCanvas;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== this._coreBrowserService.dpr) {\n      this._devicePixelRatio = this._coreBrowserService.dpr;\n      this.handleResize(this._bufferService.cols, this._bufferService.rows);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this.dimensions);\n    }\n\n    // Resize the screen\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  public handleCharSizeChanged(): void {\n    this.handleResize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public handleBlur(): void {\n    this._runOperation(l => l.handleBlur());\n  }\n\n  public handleFocus(): void {\n    this._runOperation(l => l.handleFocus());\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.handleSelectionChanged(start, end, columnSelectMode));\n    // Selection foreground requires a full re-render\n    if (this._themeService.colors.selectionForeground) {\n      this._onRequestRedraw.fire({ start: 0, end: this._bufferService.rows - 1 });\n    }\n  }\n\n  public handleCursorMove(): void {\n    this._runOperation(l => l.handleCursorMove());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    for (const l of this._renderLayers) {\n      operation(l);\n    }\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    for (const l of this._renderLayers) {\n      l.handleGridChanged(start, end);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    for (const layer of this._renderLayers) {\n      layer.clearTextureAtlas();\n    }\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // See the WebGL renderer for an explanation of this section.\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = Math.floor(this._charSizeService.width * dpr);\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.top = this._optionsService.rawOptions.lineHeight === 1 ? 0 : Math.round((this.dimensions.device.cell.height - this.dimensions.device.char.height) / 2);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.char.left = Math.floor(this._optionsService.rawOptions.letterSpacing / 2);\n    this.dimensions.device.canvas.height = this._bufferService.rows * this.dimensions.device.cell.height;\n    this.dimensions.device.canvas.width = this._bufferService.cols * this.dimensions.device.cell.width;\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n  }\n\n  private _setCanvasDevicePixelDimensions(width: number, height: number): void {\n    this.dimensions.device.canvas.height = height;\n    this.dimensions.device.canvas.width = width;\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this.dimensions);\n    }\n    this._requestRedrawViewport();\n  }\n\n  private _requestRedrawViewport(): void {\n    this._onRequestRedraw.fire({ start: 0, end: this._bufferService.rows - 1 });\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService, IDecorationService } from 'common/services/Services';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { Terminal } from 'xterm';\nimport { toDisposable } from 'common/Lifecycle';\nimport { isFirefox } from 'common/Platform';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    terminal: Terminal,\n    container: HTMLElement,\n    zIndex: number,\n    private readonly _onRequestRedraw: IEventEmitter<IRequestRedrawEvent>,\n    bufferService: IBufferService,\n    optionsService: IOptionsService,\n    private readonly _coreService: ICoreService,\n    coreBrowserService: ICoreBrowserService,\n    decorationService: IDecorationService,\n    themeService: IThemeService\n  ) {\n    super(terminal, container, 'cursor', zIndex, true, themeService, bufferService, optionsService, decorationService, coreBrowserService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(toDisposable(() => {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n    this._handleOptionsChanged();\n  }\n\n  public handleBlur(): void {\n    this._cursorBlinkStateManager?.pause();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public handleFocus(): void {\n    this._cursorBlinkStateManager?.resume();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  private _handleOptionsChanged(): void {\n    if (this._optionsService.rawOptions.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._coreBrowserService.isFocused, () => {\n          this._render(true);\n        }, this._coreBrowserService);\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public handleCursorMove(): void {\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n  }\n\n  public handleGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    this._bufferService.buffer.lines.get(cursorY)!.loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._themeService.colors.cursor.css;\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      this._renderBlurCursor(cursorX, viewportRelativeCursorY, this._cell);\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === this._optionsService.rawOptions.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.rawOptions.cursorStyle || 'block'](cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.rawOptions.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      // Avoid potential rounding errors when browser is Firefox (#4487) or device pixel ratio is\n      // less than 1\n      if (isFirefox || this._coreBrowserService.dpr < 1) {\n        this._clearAll();\n      } else {\n        this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      }\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._themeService.colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, this._optionsService.rawOptions.cursorWidth);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._themeService.colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._themeService.colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._themeService.colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._themeService.colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void,\n    private _coreBrowserService: ICoreBrowserService\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      this._coreBrowserService.window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      this._coreBrowserService.window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      this._coreBrowserService.window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      this._coreBrowserService.window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = this._coreBrowserService.window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = this._coreBrowserService.window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      this._coreBrowserService.window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      this._coreBrowserService.window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      this._coreBrowserService.window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { IColorSet, ILinkifierEvent, ILinkifier2, ReadonlyColorSet } from 'browser/Types';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { is256Color } from 'browser/renderer/shared/CharAtlasUtils';\nimport { Terminal } from 'xterm';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    terminal: Terminal,\n    container: HTMLElement,\n    zIndex: number,\n    linkifier2: ILinkifier2,\n    bufferService: IBufferService,\n    optionsService: IOptionsService,\n    decorationService: IDecorationService,\n    coreBrowserService: ICoreBrowserService,\n    themeService: IThemeService\n  ) {\n    super(terminal, container, 'link', zIndex, true, themeService, bufferService, optionsService, decorationService, coreBrowserService);\n\n    this.register(linkifier2.onShowLinkUnderline(e => this._handleShowLinkUnderline(e)));\n    this.register(linkifier2.onHideLinkUnderline(e => this._handleHideLinkUnderline(e)));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _handleShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._themeService.colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._themeService.colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._themeService.colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _handleHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { Terminal } from 'xterm';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    terminal: Terminal,\n    container: HTMLElement,\n    zIndex: number,\n    bufferService: IBufferService,\n    coreBrowserService: ICoreBrowserService,\n    decorationService: IDecorationService,\n    optionsService: IOptionsService,\n    themeService: IThemeService\n  ) {\n    super(terminal, container, 'selection', zIndex, true, themeService, bufferService, optionsService, decorationService, coreBrowserService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // On resize use the base render layer's cached selection values since resize clears _state\n    // inside reset.\n    if (this._selectionModel.selectionStart && this._selectionModel.selectionEnd) {\n      this._clearState();\n      this._redrawSelection(this._selectionModel.selectionStart, this._selectionModel.selectionEnd, this._selectionModel.columnSelectMode);\n    }\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public handleBlur(): void {\n    this.reset();\n    this._redrawSelection(this._selectionModel.selectionStart, this._selectionModel.selectionEnd, this._selectionModel.columnSelectMode);\n  }\n\n  public handleFocus(): void {\n    this.reset();\n    this._redrawSelection(this._selectionModel.selectionStart, this._selectionModel.selectionEnd, this._selectionModel.columnSelectMode);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    super.handleSelectionChanged(start, end, columnSelectMode);\n    this._redrawSelection(start, end, columnSelectMode);\n  }\n\n  private _redrawSelection(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      this._state.ydisp = this._bufferService.buffer.ydisp;\n      return;\n    }\n\n    this._ctx.fillStyle = (this._coreBrowserService.isFocused\n      ? this._themeService.colors.selectionBackgroundTransparent\n      : this._themeService.colors.selectionInactiveBackgroundTransparent).css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from './GridCache';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService, IDecorationService } from 'common/services/Services';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { color, css } from 'common/Color';\nimport { Terminal } from 'xterm';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _workCell = new CellData();\n\n  constructor(\n    terminal: Terminal,\n    container: HTMLElement,\n    zIndex: number,\n    alpha: boolean,\n    bufferService: IBufferService,\n    optionsService: IOptionsService,\n    private readonly _characterJoinerService: ICharacterJoinerService,\n    decorationService: IDecorationService,\n    coreBrowserService: ICoreBrowserService,\n    themeService: IThemeService\n  ) {\n    super(terminal, container, 'text', zIndex, alpha, themeService, bufferService, optionsService, decorationService, coreBrowserService);\n    this._state = new GridCache<CharData>();\n    this.register(optionsService.onSpecificOptionChange('allowTransparency', value => this._setTransparency(value)));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.device.char.width || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.device.char.width;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // exit early for NULL and SP\n        // NOTE: commented out due to #4120 (needs a more clever patch to keep things performant)\n        // const code = cell.getCode();\n        // if (code === 0 || code === 32) {\n        //  continue;\n        // }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._themeService.colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._themeService.colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._themeService.colors.ansi[cell.getBgColor()].css;\n      }\n\n      // Get any decoration foreground/background overrides, this must be fetched before the early\n      // exist but applied after inverse\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, this._bufferService.buffer.ydisp + y, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          nextFillStyle = d.backgroundColorRGB.css;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => this._drawChars(cell, x, y));\n  }\n\n  public handleGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n}\n","import { ISelectionRenderModel } from 'browser/renderer/shared/Types';\nimport { ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { Attributes, BgFlags, FgFlags } from 'common/buffer/Constants';\nimport { IDecorationService } from 'common/services/Services';\nimport { ICellData } from 'common/Types';\nimport { Terminal } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $fg = 0;\nlet $bg = 0;\nlet $hasFg = false;\nlet $hasBg = false;\nlet $isSelected = false;\nlet $colors: ReadonlyColorSet | undefined;\n\nexport class CellColorResolver {\n  /**\n   * The shared result of the {@link resolve} call. This is only safe to use immediately after as\n   * any other calls will share object.\n   */\n  public readonly result: { fg: number, bg: number, ext: number } = {\n    fg: 0,\n    bg: 0,\n    ext: 0\n  };\n\n  constructor(\n    private readonly _terminal: Terminal,\n    private readonly _selectionRenderModel: ISelectionRenderModel,\n    private readonly _decorationService: IDecorationService,\n    private readonly _coreBrowserService: ICoreBrowserService,\n    private readonly _themeService: IThemeService\n  ) {\n  }\n\n  /**\n   * Resolves colors for the cell, putting the result into the shared {@link result}. This resolves\n   * overrides, inverse and selection for the cell which can then be used to feed into the renderer.\n   */\n  public resolve(cell: ICellData, x: number, y: number): void {\n    this.result.bg = cell.bg;\n    this.result.fg = cell.fg;\n    this.result.ext = cell.bg & BgFlags.HAS_EXTENDED ? cell.extended.ext : 0;\n    // Get any foreground/background overrides, this happens on the model to avoid spreading\n    // override logic throughout the different sub-renderers\n\n    // Reset overrides work variables\n    $bg = 0;\n    $fg = 0;\n    $hasBg = false;\n    $hasFg = false;\n    $isSelected = false;\n    $colors = this._themeService.colors;\n\n    // Apply decorations on the bottom layer\n    this._decorationService.forEachDecorationAtCell(x, y, 'bottom', d => {\n      if (d.backgroundColorRGB) {\n        $bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n        $hasBg = true;\n      }\n      if (d.foregroundColorRGB) {\n        $fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n        $hasFg = true;\n      }\n    });\n\n    // Apply the selection color if needed\n    $isSelected = this._selectionRenderModel.isCellSelected(this._terminal, x, y);\n    if ($isSelected) {\n      $bg = (this._coreBrowserService.isFocused ? $colors.selectionBackgroundOpaque : $colors.selectionInactiveBackgroundOpaque).rgba >> 8 & 0xFFFFFF;\n      $hasBg = true;\n      if ($colors.selectionForeground) {\n        $fg = $colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n        $hasFg = true;\n      }\n    }\n\n    // Apply decorations on the top layer\n    this._decorationService.forEachDecorationAtCell(x, y, 'top', d => {\n      if (d.backgroundColorRGB) {\n        $bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n        $hasBg = true;\n      }\n      if (d.foregroundColorRGB) {\n        $fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n        $hasFg = true;\n      }\n    });\n\n    // Convert any overrides from rgba to the fg/bg packed format. This resolves the inverse flag\n    // ahead of time in order to use the correct cache key\n    if ($hasBg) {\n      if ($isSelected) {\n        // Non-RGB attributes from model + force non-dim + override + force RGB color mode\n        $bg = (cell.bg & ~Attributes.RGB_MASK & ~BgFlags.DIM) | $bg | Attributes.CM_RGB;\n      } else {\n        // Non-RGB attributes from model + override + force RGB color mode\n        $bg = (cell.bg & ~Attributes.RGB_MASK) | $bg | Attributes.CM_RGB;\n      }\n    }\n    if ($hasFg) {\n      // Non-RGB attributes from model + force disable inverse + override + force RGB color mode\n      $fg = (cell.fg & ~Attributes.RGB_MASK & ~FgFlags.INVERSE) | $fg | Attributes.CM_RGB;\n    }\n\n    // Handle case where inverse was specified by only one of bg override or fg override was set,\n    // resolving the other inverse color and setting the inverse flag if needed.\n    if (this.result.fg & FgFlags.INVERSE) {\n      if ($hasBg && !$hasFg) {\n        // Resolve bg color type (default color has a different meaning in fg vs bg)\n        if ((this.result.bg & Attributes.CM_MASK) === Attributes.CM_DEFAULT) {\n          $fg = (this.result.fg & ~(Attributes.RGB_MASK | FgFlags.INVERSE | Attributes.CM_MASK)) | (($colors.background.rgba >> 8 & 0xFFFFFF) & Attributes.RGB_MASK) | Attributes.CM_RGB;\n        } else {\n          $fg = (this.result.fg & ~(Attributes.RGB_MASK | FgFlags.INVERSE | Attributes.CM_MASK)) | this.result.bg & (Attributes.RGB_MASK | Attributes.CM_MASK);\n        }\n        $hasFg = true;\n      }\n      if (!$hasBg && $hasFg) {\n        // Resolve bg color type (default color has a different meaning in fg vs bg)\n        if ((this.result.fg & Attributes.CM_MASK) === Attributes.CM_DEFAULT) {\n          $bg = (this.result.bg & ~(Attributes.RGB_MASK | Attributes.CM_MASK)) | (($colors.foreground.rgba >> 8 & 0xFFFFFF) & Attributes.RGB_MASK) | Attributes.CM_RGB;\n        } else {\n          $bg = (this.result.bg & ~(Attributes.RGB_MASK | Attributes.CM_MASK)) | this.result.fg & (Attributes.RGB_MASK | Attributes.CM_MASK);\n        }\n        $hasBg = true;\n      }\n    }\n\n    // Release object\n    $colors = undefined;\n\n    // Use the override if it exists\n    this.result.bg = $hasBg ? $bg : this.result.bg;\n    this.result.fg = $hasFg ? $fg : this.result.fg;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextureAtlas } from 'browser/renderer/shared/TextureAtlas';\nimport { ITerminalOptions, Terminal } from 'xterm';\nimport { ITerminal, ReadonlyColorSet } from 'browser/Types';\nimport { ICharAtlasConfig, ITextureAtlas } from 'browser/renderer/shared/Types';\nimport { generateConfig, configEquals } from 'browser/renderer/shared/CharAtlasUtils';\n\ninterface ITextureAtlasCacheEntry {\n  atlas: ITextureAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: Terminal[];\n}\n\nconst charAtlasCache: ITextureAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireTextureAtlas(\n  terminal: Terminal,\n  options: Required<ITerminalOptions>,\n  colors: ReadonlyColorSet,\n  deviceCellWidth: number,\n  deviceCellHeight: number,\n  deviceCharWidth: number,\n  deviceCharHeight: number,\n  devicePixelRatio: number\n): ITextureAtlas {\n  const newConfig = generateConfig(deviceCellWidth, deviceCellHeight, deviceCharWidth, deviceCharHeight, options, colors, devicePixelRatio);\n\n  // Check to see if the terminal already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(terminal);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the terminal from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the terminal to the cache entry and return\n      entry.ownedBy.push(terminal);\n      return entry.atlas;\n    }\n  }\n\n  const core: ITerminal = (terminal as any)._core;\n  const newEntry: ITextureAtlasCacheEntry = {\n    atlas: new TextureAtlas(document, newConfig, core.unicodeService),\n    config: newConfig,\n    ownedBy: [terminal]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n * @param terminal The terminal to remove.\n */\nexport function removeTerminalFromCache(terminal: Terminal): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(terminal);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only terminal\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from './Types';\nimport { Attributes } from 'common/buffer/Constants';\nimport { ITerminalOptions } from 'xterm';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { NULL_COLOR } from 'common/Color';\n\nexport function generateConfig(deviceCellWidth: number, deviceCellHeight: number, deviceCharWidth: number, deviceCharHeight: number, options: Required<ITerminalOptions>, colors: ReadonlyColorSet, devicePixelRatio: number): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors: IColorSet = {\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: NULL_COLOR,\n    cursorAccent: NULL_COLOR,\n    selectionForeground: NULL_COLOR,\n    selectionBackgroundTransparent: NULL_COLOR,\n    selectionBackgroundOpaque: NULL_COLOR,\n    selectionInactiveBackgroundTransparent: NULL_COLOR,\n    selectionInactiveBackgroundOpaque: NULL_COLOR,\n    // For the static char atlas, we only use the first 16 colors, but we need all 256 for the\n    // dynamic character atlas.\n    ansi: colors.ansi.slice(),\n    contrastCache: colors.contrastCache\n  };\n  return {\n    customGlyphs: options.customGlyphs,\n    devicePixelRatio,\n    letterSpacing: options.letterSpacing,\n    lineHeight: options.lineHeight,\n    deviceCellWidth: deviceCellWidth,\n    deviceCellHeight: deviceCellHeight,\n    deviceCharWidth: deviceCharWidth,\n    deviceCharHeight: deviceCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    drawBoldTextInBrightColors: options.drawBoldTextInBrightColors,\n    minimumContrastRatio: options.minimumContrastRatio,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.customGlyphs === b.customGlyphs &&\n      a.lineHeight === b.lineHeight &&\n      a.letterSpacing === b.letterSpacing &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.deviceCharWidth === b.deviceCharWidth &&\n      a.deviceCharHeight === b.deviceCharHeight &&\n      a.drawBoldTextInBrightColors === b.drawBoldTextInBrightColors &&\n      a.minimumContrastRatio === b.minimumContrastRatio &&\n      a.colors.foreground.rgba === b.colors.foreground.rgba &&\n      a.colors.background.rgba === b.colors.background.rgba;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return (colorCode & Attributes.CM_MASK) === Attributes.CM_P16 || (colorCode & Attributes.CM_MASK) === Attributes.CM_P256;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { throwIfFalsy } from 'browser/renderer/shared/RendererUtils';\n\ninterface IBlockVector {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nexport const blockElementDefinitions: { [index: string]: IBlockVector[] | undefined } = {\n  // Block elements (0x2580-0x2590)\n  '▀': [{ x: 0, y: 0, w: 8, h: 4 }], // UPPER HALF BLOCK\n  '▁': [{ x: 0, y: 7, w: 8, h: 1 }], // LOWER ONE EIGHTH BLOCK\n  '▂': [{ x: 0, y: 6, w: 8, h: 2 }], // LOWER ONE QUARTER BLOCK\n  '▃': [{ x: 0, y: 5, w: 8, h: 3 }], // LOWER THREE EIGHTHS BLOCK\n  '▄': [{ x: 0, y: 4, w: 8, h: 4 }], // LOWER HALF BLOCK\n  '▅': [{ x: 0, y: 3, w: 8, h: 5 }], // LOWER FIVE EIGHTHS BLOCK\n  '▆': [{ x: 0, y: 2, w: 8, h: 6 }], // LOWER THREE QUARTERS BLOCK\n  '▇': [{ x: 0, y: 1, w: 8, h: 7 }], // LOWER SEVEN EIGHTHS BLOCK\n  '█': [{ x: 0, y: 0, w: 8, h: 8 }], // FULL BLOCK\n  '▉': [{ x: 0, y: 0, w: 7, h: 8 }], // LEFT SEVEN EIGHTHS BLOCK\n  '▊': [{ x: 0, y: 0, w: 6, h: 8 }], // LEFT THREE QUARTERS BLOCK\n  '▋': [{ x: 0, y: 0, w: 5, h: 8 }], // LEFT FIVE EIGHTHS BLOCK\n  '▌': [{ x: 0, y: 0, w: 4, h: 8 }], // LEFT HALF BLOCK\n  '▍': [{ x: 0, y: 0, w: 3, h: 8 }], // LEFT THREE EIGHTHS BLOCK\n  '▎': [{ x: 0, y: 0, w: 2, h: 8 }], // LEFT ONE QUARTER BLOCK\n  '▏': [{ x: 0, y: 0, w: 1, h: 8 }], // LEFT ONE EIGHTH BLOCK\n  '▐': [{ x: 4, y: 0, w: 4, h: 8 }], // RIGHT HALF BLOCK\n\n  // Block elements (0x2594-0x2595)\n  '▔': [{ x: 0, y: 0, w: 8, h: 1 }], // UPPER ONE EIGHTH BLOCK\n  '▕': [{ x: 7, y: 0, w: 1, h: 8 }], // RIGHT ONE EIGHTH BLOCK\n\n  // Terminal graphic characters (0x2596-0x259F)\n  '▖': [{ x: 0, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER LEFT\n  '▗': [{ x: 4, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER RIGHT\n  '▘': [{ x: 0, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER LEFT\n  '▙': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER LEFT AND LOWER LEFT AND LOWER RIGHT\n  '▚': [{ x: 0, y: 0, w: 4, h: 4 }, { x: 4, y: 4, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND LOWER RIGHT\n  '▛': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 4, y: 0, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER LEFT\n  '▜': [{ x: 0, y: 0, w: 8, h: 4 }, { x: 4, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER RIGHT\n  '▝': [{ x: 4, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER RIGHT\n  '▞': [{ x: 4, y: 0, w: 4, h: 4 }, { x: 0, y: 4, w: 4, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT\n  '▟': [{ x: 4, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT AND LOWER RIGHT\n\n  // VERTICAL ONE EIGHTH BLOCK-2 through VERTICAL ONE EIGHTH BLOCK-7\n  '\\u{1FB70}': [{ x: 1, y: 0, w: 1, h: 8 }],\n  '\\u{1FB71}': [{ x: 2, y: 0, w: 1, h: 8 }],\n  '\\u{1FB72}': [{ x: 3, y: 0, w: 1, h: 8 }],\n  '\\u{1FB73}': [{ x: 4, y: 0, w: 1, h: 8 }],\n  '\\u{1FB74}': [{ x: 5, y: 0, w: 1, h: 8 }],\n  '\\u{1FB75}': [{ x: 6, y: 0, w: 1, h: 8 }],\n\n  // HORIZONTAL ONE EIGHTH BLOCK-2 through HORIZONTAL ONE EIGHTH BLOCK-7\n  '\\u{1FB76}': [{ x: 0, y: 1, w: 8, h: 1 }],\n  '\\u{1FB77}': [{ x: 0, y: 2, w: 8, h: 1 }],\n  '\\u{1FB78}': [{ x: 0, y: 3, w: 8, h: 1 }],\n  '\\u{1FB79}': [{ x: 0, y: 4, w: 8, h: 1 }],\n  '\\u{1FB7A}': [{ x: 0, y: 5, w: 8, h: 1 }],\n  '\\u{1FB7B}': [{ x: 0, y: 6, w: 8, h: 1 }],\n\n  // LEFT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7C}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // LEFT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7D}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7E}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7F}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // UPPER AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB80}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // HORIZONTAL ONE EIGHTH BLOCK-1358\n  '\\u{1FB81}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 2, w: 8, h: 1 }, { x: 0, y: 4, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n\n  // UPPER ONE QUARTER BLOCK\n  '\\u{1FB82}': [{ x: 0, y: 0, w: 8, h: 2 }],\n  // UPPER THREE EIGHTHS BLOCK\n  '\\u{1FB83}': [{ x: 0, y: 0, w: 8, h: 3 }],\n  // UPPER FIVE EIGHTHS BLOCK\n  '\\u{1FB84}': [{ x: 0, y: 0, w: 8, h: 5 }],\n  // UPPER THREE QUARTERS BLOCK\n  '\\u{1FB85}': [{ x: 0, y: 0, w: 8, h: 6 }],\n  // UPPER SEVEN EIGHTHS BLOCK\n  '\\u{1FB86}': [{ x: 0, y: 0, w: 8, h: 7 }],\n\n  // RIGHT ONE QUARTER BLOCK\n  '\\u{1FB87}': [{ x: 6, y: 0, w: 2, h: 8 }],\n  // RIGHT THREE EIGHTHS B0OCK\n  '\\u{1FB88}': [{ x: 5, y: 0, w: 3, h: 8 }],\n  // RIGHT FIVE EIGHTHS BL0CK\n  '\\u{1FB89}': [{ x: 3, y: 0, w: 5, h: 8 }],\n  // RIGHT THREE QUARTERS 0LOCK\n  '\\u{1FB8A}': [{ x: 2, y: 0, w: 6, h: 8 }],\n  // RIGHT SEVEN EIGHTHS B0OCK\n  '\\u{1FB8B}': [{ x: 1, y: 0, w: 7, h: 8 }],\n\n  // CHECKER BOARD FILL\n  '\\u{1FB95}': [\n    { x: 0, y: 0, w: 2, h: 2 }, { x: 4, y: 0, w: 2, h: 2 },\n    { x: 2, y: 2, w: 2, h: 2 }, { x: 6, y: 2, w: 2, h: 2 },\n    { x: 0, y: 4, w: 2, h: 2 }, { x: 4, y: 4, w: 2, h: 2 },\n    { x: 2, y: 6, w: 2, h: 2 }, { x: 6, y: 6, w: 2, h: 2 }\n  ],\n  // INVERSE CHECKER BOARD FILL\n  '\\u{1FB96}': [\n    { x: 2, y: 0, w: 2, h: 2 }, { x: 6, y: 0, w: 2, h: 2 },\n    { x: 0, y: 2, w: 2, h: 2 }, { x: 4, y: 2, w: 2, h: 2 },\n    { x: 2, y: 4, w: 2, h: 2 }, { x: 6, y: 4, w: 2, h: 2 },\n    { x: 0, y: 6, w: 2, h: 2 }, { x: 4, y: 6, w: 2, h: 2 }\n  ],\n  // HEAVY HORIZONTAL FILL (upper middle and lower one quarter block)\n  '\\u{1FB97}': [{ x: 0, y: 2, w: 8, h: 2 }, { x: 0, y: 6, w: 8, h: 2 }]\n};\n\ntype PatternDefinition = number[][];\n\n/**\n * Defines the repeating pattern used by special characters, the pattern is made up of a 2d array of\n * pixel values to be filled (1) or not filled (0).\n */\nconst patternCharacterDefinitions: { [key: string]: PatternDefinition | undefined } = {\n  // Shade characters (0x2591-0x2593)\n  '░': [ // LIGHT SHADE (25%)\n    [1, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 0]\n  ],\n  '▒': [ // MEDIUM SHADE (50%)\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [0, 0]\n  ],\n  '▓': [ // DARK SHADE (75%)\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, 1]\n  ]\n};\n\nconst enum Shapes {\n  /** │ */ TOP_TO_BOTTOM = 'M.5,0 L.5,1',\n  /** ─ */ LEFT_TO_RIGHT = 'M0,.5 L1,.5',\n\n  /** └ */ TOP_TO_RIGHT = 'M.5,0 L.5,.5 L1,.5',\n  /** ┘ */ TOP_TO_LEFT = 'M.5,0 L.5,.5 L0,.5',\n  /** ┐ */ LEFT_TO_BOTTOM = 'M0,.5 L.5,.5 L.5,1',\n  /** ┌ */ RIGHT_TO_BOTTOM = 'M0.5,1 L.5,.5 L1,.5',\n\n  /** ╵ */ MIDDLE_TO_TOP = 'M.5,.5 L.5,0',\n  /** ╴ */ MIDDLE_TO_LEFT = 'M.5,.5 L0,.5',\n  /** ╶ */ MIDDLE_TO_RIGHT = 'M.5,.5 L1,.5',\n  /** ╷ */ MIDDLE_TO_BOTTOM = 'M.5,.5 L.5,1',\n\n  /** ┴ */ T_TOP = 'M0,.5 L1,.5 M.5,.5 L.5,0',\n  /** ┤ */ T_LEFT = 'M.5,0 L.5,1 M.5,.5 L0,.5',\n  /** ├ */ T_RIGHT = 'M.5,0 L.5,1 M.5,.5 L1,.5',\n  /** ┬ */ T_BOTTOM = 'M0,.5 L1,.5 M.5,.5 L.5,1',\n\n  /** ┼ */ CROSS = 'M0,.5 L1,.5 M.5,0 L.5,1',\n\n  /** ╌ */ TWO_DASHES_HORIZONTAL = 'M.1,.5 L.4,.5 M.6,.5 L.9,.5', // .2 empty, .3 filled\n  /** ┄ */ THREE_DASHES_HORIZONTAL = 'M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5', // .1333 empty, .2 filled\n  /** ┉ */ FOUR_DASHES_HORIZONTAL = 'M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5', // .1 empty, .15 filled\n  /** ╎ */ TWO_DASHES_VERTICAL = 'M.5,.1 L.5,.4 M.5,.6 L.5,.9',\n  /** ┆ */ THREE_DASHES_VERTICAL = 'M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333',\n  /** ┊ */ FOUR_DASHES_VERTICAL = 'M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95',\n}\n\nconst enum Style {\n  NORMAL = 1,\n  BOLD = 3\n}\n\n/**\n * @param xp The percentage of 15% of the x axis.\n * @param yp The percentage of 15% of the x axis on the y axis.\n */\ntype DrawFunctionDefinition = (xp: number, yp: number) => string;\n\n/**\n * This contains the definitions of all box drawing characters in the format of SVG paths (ie. the\n * svg d attribute).\n */\nexport const boxDrawingDefinitions: { [character: string]: { [fontWeight: number]: string | DrawFunctionDefinition } | undefined } = {\n  // Uniform normal and bold\n  '─': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT },\n  '━': { [Style.BOLD]:   Shapes.LEFT_TO_RIGHT },\n  '│': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM },\n  '┃': { [Style.BOLD]:   Shapes.TOP_TO_BOTTOM },\n  '┌': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM },\n  '┏': { [Style.BOLD]:   Shapes.RIGHT_TO_BOTTOM },\n  '┐': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM },\n  '┓': { [Style.BOLD]:   Shapes.LEFT_TO_BOTTOM },\n  '└': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT },\n  '┗': { [Style.BOLD]:   Shapes.TOP_TO_RIGHT },\n  '┘': { [Style.NORMAL]: Shapes.TOP_TO_LEFT },\n  '┛': { [Style.BOLD]:   Shapes.TOP_TO_LEFT },\n  '├': { [Style.NORMAL]: Shapes.T_RIGHT },\n  '┣': { [Style.BOLD]:   Shapes.T_RIGHT },\n  '┤': { [Style.NORMAL]: Shapes.T_LEFT },\n  '┫': { [Style.BOLD]:   Shapes.T_LEFT },\n  '┬': { [Style.NORMAL]: Shapes.T_BOTTOM },\n  '┳': { [Style.BOLD]:   Shapes.T_BOTTOM },\n  '┴': { [Style.NORMAL]: Shapes.T_TOP },\n  '┻': { [Style.BOLD]:   Shapes.T_TOP },\n  '┼': { [Style.NORMAL]: Shapes.CROSS },\n  '╋': { [Style.BOLD]:   Shapes.CROSS },\n  '╴': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT },\n  '╸': { [Style.BOLD]:   Shapes.MIDDLE_TO_LEFT },\n  '╵': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP },\n  '╹': { [Style.BOLD]:   Shapes.MIDDLE_TO_TOP },\n  '╶': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT },\n  '╺': { [Style.BOLD]:   Shapes.MIDDLE_TO_RIGHT },\n  '╷': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM },\n  '╻': { [Style.BOLD]:   Shapes.MIDDLE_TO_BOTTOM },\n\n  // Double border\n  '═': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '║': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╒': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╓': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},1 L${.5 - xp},.5 L1,.5 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╔': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╕': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L.5,${.5 - yp} L.5,1 M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╖': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},1 L${.5 + xp},.5 L0,.5 M${.5 - xp},.5 L${.5 - xp},1` },\n  '╗': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},1` },\n  '╘': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 + yp} L1,${.5 + yp} M.5,${.5 - yp} L1,${.5 - yp}` },\n  '╙': { [Style.NORMAL]: (xp, yp) => `M1,.5 L${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╚': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0 M1,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},0` },\n  '╛': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L.5,${.5 + yp} L.5,0 M0,${.5 - yp} L.5,${.5 - yp}` },\n  '╜': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 + xp},.5 L${.5 + xp},0 M${.5 - xp},.5 L${.5 - xp},0` },\n  '╝': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M0,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},0` },\n  '╞': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╟': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1 M${.5 + xp},.5 L1,.5` },\n  '╠': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╡': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L.5,${.5 - yp} M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╢': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 - xp},.5 M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╣': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},0 L${.5 + xp},1 M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0` },\n  '╤': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp} M.5,${.5 + yp} L.5,1` },\n  '╥': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},1 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╦': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╧': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - yp} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╨': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╩': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L1,${.5 + yp} M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╪': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╫': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╬': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n\n  // Diagonal\n  '╱': { [Style.NORMAL]: 'M1,0 L0,1' },\n  '╲': { [Style.NORMAL]: 'M0,0 L1,1' },\n  '╳': { [Style.NORMAL]: 'M1,0 L0,1 M0,0 L1,1' },\n\n  // Mixed weight\n  '╼': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '╽': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╾': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '╿': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┍': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┎': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┑': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┒': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┕': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┖': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┙': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┚': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┝': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┞': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┟': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┠': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┡': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┢': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┥': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┦': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┧': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┨': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┩': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┪': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┭': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┮': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┯': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┰': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┱': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┲': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┵': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┶': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┷': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┸': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┹': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┺': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┽': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}`,  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┾': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}`,   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┿': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '╀': { [Style.NORMAL]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}`, [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '╁': { [Style.NORMAL]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}`,    [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╂': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '╃': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '╄': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '╅': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '╆': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '╇': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}` },\n  '╈': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}` },\n  '╉': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}` },\n  '╊': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}` },\n\n  // Dashed\n  '╌': { [Style.NORMAL]: Shapes.TWO_DASHES_HORIZONTAL },\n  '╍': { [Style.BOLD]:   Shapes.TWO_DASHES_HORIZONTAL },\n  '┄': { [Style.NORMAL]: Shapes.THREE_DASHES_HORIZONTAL },\n  '┅': { [Style.BOLD]:   Shapes.THREE_DASHES_HORIZONTAL },\n  '┈': { [Style.NORMAL]: Shapes.FOUR_DASHES_HORIZONTAL },\n  '┉': { [Style.BOLD]:   Shapes.FOUR_DASHES_HORIZONTAL },\n  '╎': { [Style.NORMAL]: Shapes.TWO_DASHES_VERTICAL },\n  '╏': { [Style.BOLD]:   Shapes.TWO_DASHES_VERTICAL },\n  '┆': { [Style.NORMAL]: Shapes.THREE_DASHES_VERTICAL  },\n  '┇': { [Style.BOLD]:   Shapes.THREE_DASHES_VERTICAL },\n  '┊': { [Style.NORMAL]: Shapes.FOUR_DASHES_VERTICAL },\n  '┋': { [Style.BOLD]:   Shapes.FOUR_DASHES_VERTICAL },\n\n  // Curved\n  '╭': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 + (yp / .15 * .5)} C.5,${.5 + (yp / .15 * .5)},.5,.5,1,.5` },\n  '╮': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 + (yp / .15 * .5)} C.5,${.5 + (yp / .15 * .5)},.5,.5,0,.5` },\n  '╯': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - (yp / .15 * .5)} C.5,${.5 - (yp / .15 * .5)},.5,.5,0,.5` },\n  '╰': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - (yp / .15 * .5)} C.5,${.5 - (yp / .15 * .5)},.5,.5,1,.5` }\n};\n\ninterface IVectorShape {\n  d: string;\n  type: VectorType;\n  leftPadding?: number;\n  rightPadding?: number;\n}\n\nconst enum VectorType {\n  FILL,\n  STROKE\n}\n\n/**\n * This contains the definitions of the primarily used box drawing characters as vector shapes. The\n * reason these characters are defined specially is to avoid common problems if a user's font has\n * not been patched with powerline characters and also to get pixel perfect rendering as rendering\n * issues can occur around AA/SPAA.\n *\n * The line variants draw beyond the cell and get clipped to ensure the end of the line is not visible.\n *\n * Original symbols defined in https://github.com/powerline/fontpatcher\n */\nexport const powerlineDefinitions: { [index: string]: IVectorShape } = {\n  // Right triangle solid\n  '\\u{E0B0}': { d: 'M0,0 L1,.5 L0,1', type: VectorType.FILL, rightPadding: 2 },\n  // Right triangle line\n  '\\u{E0B1}': { d: 'M-1,-.5 L1,.5 L-1,1.5', type: VectorType.STROKE, leftPadding: 1, rightPadding: 1 },\n  // Left triangle solid\n  '\\u{E0B2}': { d: 'M1,0 L0,.5 L1,1', type: VectorType.FILL, leftPadding: 2 },\n  // Left triangle line\n  '\\u{E0B3}': { d: 'M2,-.5 L0,.5 L2,1.5', type: VectorType.STROKE, leftPadding: 1, rightPadding: 1 },\n  // Right semi-circle solid\n  '\\u{E0B4}': { d: 'M0,0 L0,1 C0.552,1,1,0.776,1,.5 C1,0.224,0.552,0,0,0', type: VectorType.FILL, rightPadding: 1 },\n  // Right semi-circle line\n  '\\u{E0B5}': { d: 'M0,1 C0.552,1,1,0.776,1,.5 C1,0.224,0.552,0,0,0', type: VectorType.STROKE, rightPadding: 1 },\n  // Left semi-circle solid\n  '\\u{E0B6}': { d: 'M1,0 L1,1 C0.448,1,0,0.776,0,.5 C0,0.224,0.448,0,1,0', type: VectorType.FILL, leftPadding: 1 },\n  // Left semi-circle line\n  '\\u{E0B7}': { d: 'M1,1 C0.448,1,0,0.776,0,.5 C0,0.224,0.448,0,1,0', type: VectorType.STROKE, leftPadding: 1 },\n  // Lower left triangle\n  '\\u{E0B8}': { d: 'M-.5,-.5 L1.5,1.5 L-.5,1.5', type: VectorType.FILL },\n  // Backslash separator\n  '\\u{E0B9}': { d: 'M-.5,-.5 L1.5,1.5', type: VectorType.STROKE, leftPadding: 1, rightPadding: 1 },\n  // Lower right triangle\n  '\\u{E0BA}': { d: 'M1.5,-.5 L-.5,1.5 L1.5,1.5', type: VectorType.FILL },\n  // Upper left triangle\n  '\\u{E0BC}': { d: 'M1.5,-.5 L-.5,1.5 L-.5,-.5', type: VectorType.FILL },\n  // Forward slash separator\n  '\\u{E0BD}': { d: 'M1.5,-.5 L-.5,1.5', type: VectorType.STROKE, leftPadding: 1, rightPadding: 1 },\n  // Upper right triangle\n  '\\u{E0BE}': { d: 'M-.5,-.5 L1.5,1.5 L1.5,-.5', type: VectorType.FILL }\n};\n// Forward slash separator redundant\npowerlineDefinitions['\\u{E0BB}'] = powerlineDefinitions['\\u{E0BD}'];\n// Backslash separator redundant\npowerlineDefinitions['\\u{E0BF}'] = powerlineDefinitions['\\u{E0B9}'];\n\n/**\n * Try drawing a custom block element or box drawing character, returning whether it was\n * successfully drawn.\n */\nexport function tryDrawCustomChar(\n  ctx: CanvasRenderingContext2D,\n  c: string,\n  xOffset: number,\n  yOffset: number,\n  deviceCellWidth: number,\n  deviceCellHeight: number,\n  fontSize: number,\n  devicePixelRatio: number\n): boolean {\n  const blockElementDefinition = blockElementDefinitions[c];\n  if (blockElementDefinition) {\n    drawBlockElementChar(ctx, blockElementDefinition, xOffset, yOffset, deviceCellWidth, deviceCellHeight);\n    return true;\n  }\n\n  const patternDefinition = patternCharacterDefinitions[c];\n  if (patternDefinition) {\n    drawPatternChar(ctx, patternDefinition, xOffset, yOffset, deviceCellWidth, deviceCellHeight);\n    return true;\n  }\n\n  const boxDrawingDefinition = boxDrawingDefinitions[c];\n  if (boxDrawingDefinition) {\n    drawBoxDrawingChar(ctx, boxDrawingDefinition, xOffset, yOffset, deviceCellWidth, deviceCellHeight, devicePixelRatio);\n    return true;\n  }\n\n  const powerlineDefinition = powerlineDefinitions[c];\n  if (powerlineDefinition) {\n    drawPowerlineChar(ctx, powerlineDefinition, xOffset, yOffset, deviceCellWidth, deviceCellHeight, fontSize, devicePixelRatio);\n    return true;\n  }\n\n  return false;\n}\n\nfunction drawBlockElementChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IBlockVector[],\n  xOffset: number,\n  yOffset: number,\n  deviceCellWidth: number,\n  deviceCellHeight: number\n): void {\n  for (let i = 0; i < charDefinition.length; i++) {\n    const box = charDefinition[i];\n    const xEighth = deviceCellWidth / 8;\n    const yEighth = deviceCellHeight / 8;\n    ctx.fillRect(\n      xOffset + box.x * xEighth,\n      yOffset + box.y * yEighth,\n      box.w * xEighth,\n      box.h * yEighth\n    );\n  }\n}\n\nconst cachedPatterns: Map<PatternDefinition, Map</* fillStyle */string, CanvasPattern>> = new Map();\n\nfunction drawPatternChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: number[][],\n  xOffset: number,\n  yOffset: number,\n  deviceCellWidth: number,\n  deviceCellHeight: number\n): void {\n  let patternSet = cachedPatterns.get(charDefinition);\n  if (!patternSet) {\n    patternSet = new Map();\n    cachedPatterns.set(charDefinition, patternSet);\n  }\n  const fillStyle = ctx.fillStyle;\n  if (typeof fillStyle !== 'string') {\n    throw new Error(`Unexpected fillStyle type \"${fillStyle}\"`);\n  }\n  let pattern = patternSet.get(fillStyle);\n  if (!pattern) {\n    const width = charDefinition[0].length;\n    const height = charDefinition.length;\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = width;\n    tmpCanvas.height = height;\n    const tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d'));\n    const imageData = new ImageData(width, height);\n\n    // Extract rgba from fillStyle\n    let r: number;\n    let g: number;\n    let b: number;\n    let a: number;\n    if (fillStyle.startsWith('#')) {\n      r = parseInt(fillStyle.slice(1, 3), 16);\n      g = parseInt(fillStyle.slice(3, 5), 16);\n      b = parseInt(fillStyle.slice(5, 7), 16);\n      a = fillStyle.length > 7 && parseInt(fillStyle.slice(7, 9), 16) || 1;\n    } else if (fillStyle.startsWith('rgba')) {\n      ([r, g, b, a] = fillStyle.substring(5, fillStyle.length - 1).split(',').map(e => parseFloat(e)));\n    } else {\n      throw new Error(`Unexpected fillStyle color format \"${fillStyle}\" when drawing pattern glyph`);\n    }\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        imageData.data[(y * width + x) * 4    ] = r;\n        imageData.data[(y * width + x) * 4 + 1] = g;\n        imageData.data[(y * width + x) * 4 + 2] = b;\n        imageData.data[(y * width + x) * 4 + 3] = charDefinition[y][x] * (a * 255);\n      }\n    }\n    tmpCtx.putImageData(imageData, 0, 0);\n    pattern = throwIfFalsy(ctx.createPattern(tmpCanvas, null));\n    patternSet.set(fillStyle, pattern);\n  }\n  ctx.fillStyle = pattern;\n  ctx.fillRect(xOffset, yOffset, deviceCellWidth, deviceCellHeight);\n}\n\n/**\n * Draws the following box drawing characters by mapping a subset of SVG d attribute instructions to\n * canvas draw calls.\n *\n * Box styles:       ┎┰┒┍┯┑╓╥╖╒╤╕ ┏┳┓┌┲┓┌┬┐┏┱┐\n * ┌─┬─┐ ┏━┳━┓ ╔═╦═╗ ┠╂┨┝┿┥╟╫╢╞╪╡ ┡╇┩├╊┫┢╈┪┣╉┤\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┖┸┚┕┷┙╙╨╜╘╧╛ └┴┘└┺┛┗┻┛┗┹┘\n * ├─┼─┤ ┣━╋━┫ ╠═╬═╣ ┏┱┐┌┲┓┌┬┐┌┬┐ ┏┳┓┌┮┓┌┬┐┏┭┐\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┡╃┤├╄┩├╆┪┢╅┤ ┞╀┦├┾┫┟╁┧┣┽┤\n * └─┴─┘ ┗━┻━┛ ╚═╩═╝ └┴┘└┴┘└┺┛┗┹┘ └┴┘└┶┛┗┻┛┗┵┘\n *\n * Other:\n * ╭─╮ ╲ ╱ ╷╻╎╏┆┇┊┋ ╺╾╴ ╌╌╌ ┄┄┄ ┈┈┈\n * │ │  ╳  ╽╿╎╏┆┇┊┋ ╶╼╸ ╍╍╍ ┅┅┅ ┉┉┉\n * ╰─╯ ╱ ╲ ╹╵╎╏┆┇┊┋\n *\n * All box drawing characters:\n * ─ ━ │ ┃ ┄ ┅ ┆ ┇ ┈ ┉ ┊ ┋ ┌ ┍ ┎ ┏\n * ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛ ├ ┝ ┞ ┟\n * ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯\n * ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿\n * ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╌ ╍ ╎ ╏\n * ═ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╞ ╟\n * ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩ ╪ ╫ ╬ ╭ ╮ ╯\n * ╰ ╱ ╲ ╳ ╴ ╵ ╶ ╷ ╸ ╹ ╺ ╻ ╼ ╽ ╾ ╿\n *\n * ---\n *\n * Box drawing alignment tests:                                          █\n *                                                                       ▉\n *   ╔══╦══╗  ┌──┬──┐  ╭──┬──╮  ╭──┬──╮  ┏━━┳━━┓  ┎┒┏┑   ╷  ╻ ┏┯┓ ┌┰┐    ▊ ╱╲╱╲╳╳╳\n *   ║┌─╨─┐║  │╔═╧═╗│  │╒═╪═╕│  │╓─╁─╖│  ┃┌─╂─┐┃  ┗╃╄┙  ╶┼╴╺╋╸┠┼┨ ┝╋┥    ▋ ╲╱╲╱╳╳╳\n *   ║│╲ ╱│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╿ │┃  ┍╅╆┓   ╵  ╹ ┗┷┛ └┸┘    ▌ ╱╲╱╲╳╳╳\n *   ╠╡ ╳ ╞╣  ├╢   ╟┤  ├┼─┼─┼┤  ├╫─╂─╫┤  ┣┿╾┼╼┿┫  ┕┛┖┚     ┌┄┄┐ ╎ ┏┅┅┓ ┋ ▍ ╲╱╲╱╳╳╳\n *   ║│╱ ╲│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╽ │┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▎\n *   ║└─╥─┘║  │╚═╤═╝│  │╘═╪═╛│  │╙─╀─╜│  ┃└─╂─┘┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▏\n *   ╚══╩══╝  └──┴──┘  ╰──┴──╯  ╰──┴──╯  ┗━━┻━━┛           └╌╌┘ ╎ ┗╍╍┛ ┋  ▁▂▃▄▅▆▇█\n *\n * Source: https://www.w3.org/2001/06/utf-8-test/UTF-8-demo.html\n */\nfunction drawBoxDrawingChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: { [fontWeight: number]: string | ((xp: number, yp: number) => string) },\n  xOffset: number,\n  yOffset: number,\n  deviceCellWidth: number,\n  deviceCellHeight: number,\n  devicePixelRatio: number\n): void {\n  ctx.strokeStyle = ctx.fillStyle;\n  for (const [fontWeight, instructions] of Object.entries(charDefinition)) {\n    ctx.beginPath();\n    ctx.lineWidth = devicePixelRatio * Number.parseInt(fontWeight);\n    let actualInstructions: string;\n    if (typeof instructions === 'function') {\n      const xp = .15;\n      const yp = .15 / deviceCellHeight * deviceCellWidth;\n      actualInstructions = instructions(xp, yp);\n    } else {\n      actualInstructions = instructions;\n    }\n    for (const instruction of actualInstructions.split(' ')) {\n      const type = instruction[0];\n      const f = svgToCanvasInstructionMap[type];\n      if (!f) {\n        console.error(`Could not find drawing instructions for \"${type}\"`);\n        continue;\n      }\n      const args: string[] = instruction.substring(1).split(',');\n      if (!args[0] || !args[1]) {\n        continue;\n      }\n      f(ctx, translateArgs(args, deviceCellWidth, deviceCellHeight, xOffset, yOffset, true, devicePixelRatio));\n    }\n    ctx.stroke();\n    ctx.closePath();\n  }\n}\n\nfunction drawPowerlineChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IVectorShape,\n  xOffset: number,\n  yOffset: number,\n  deviceCellWidth: number,\n  deviceCellHeight: number,\n  fontSize: number,\n  devicePixelRatio: number\n): void {\n  // Clip the cell to make sure drawing doesn't occur beyond bounds\n  const clipRegion = new Path2D();\n  clipRegion.rect(xOffset, yOffset, deviceCellWidth, deviceCellHeight);\n  ctx.clip(clipRegion);\n\n  ctx.beginPath();\n  // Scale the stroke with DPR and font size\n  const cssLineWidth = fontSize / 12;\n  ctx.lineWidth = devicePixelRatio * cssLineWidth;\n  for (const instruction of charDefinition.d.split(' ')) {\n    const type = instruction[0];\n    const f = svgToCanvasInstructionMap[type];\n    if (!f) {\n      console.error(`Could not find drawing instructions for \"${type}\"`);\n      continue;\n    }\n    const args: string[] = instruction.substring(1).split(',');\n    if (!args[0] || !args[1]) {\n      continue;\n    }\n    f(ctx, translateArgs(\n      args,\n      deviceCellWidth,\n      deviceCellHeight,\n      xOffset,\n      yOffset,\n      false,\n      devicePixelRatio,\n      (charDefinition.leftPadding ?? 0) * (cssLineWidth / 2),\n      (charDefinition.rightPadding ?? 0) * (cssLineWidth / 2)\n    ));\n  }\n  if (charDefinition.type === VectorType.STROKE) {\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.stroke();\n  } else {\n    ctx.fill();\n  }\n  ctx.closePath();\n}\n\nfunction clamp(value: number, max: number, min: number = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nconst svgToCanvasInstructionMap: { [index: string]: any } = {\n  'C': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.bezierCurveTo(args[0], args[1], args[2], args[3], args[4], args[5]),\n  'L': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.lineTo(args[0], args[1]),\n  'M': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.moveTo(args[0], args[1])\n};\n\nfunction translateArgs(args: string[], cellWidth: number, cellHeight: number, xOffset: number, yOffset: number, doClamp: boolean, devicePixelRatio: number, leftPadding: number = 0, rightPadding: number = 0): number[] {\n  const result = args.map(e => parseFloat(e) || parseInt(e));\n\n  if (result.length < 2) {\n    throw new Error('Too few arguments for instruction');\n  }\n\n  for (let x = 0; x < result.length; x += 2) {\n    // Translate from 0-1 to 0-cellWidth\n    result[x] *= cellWidth - (leftPadding * devicePixelRatio) - (rightPadding * devicePixelRatio);\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (doClamp && result[x] !== 0) {\n      result[x] = clamp(Math.round(result[x] + 0.5) - 0.5, cellWidth, 0);\n    }\n    // Apply the cell's offset (ie. x*cellWidth)\n    result[x] += xOffset + (leftPadding * devicePixelRatio);\n  }\n\n  for (let y = 1; y < result.length; y += 2) {\n    // Translate from 0-1 to 0-cellHeight\n    result[y] *= cellHeight;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (doClamp && result[y] !== 0) {\n      result[y] = clamp(Math.round(result[y] + 0.5) - 0.5, cellHeight, 0);\n    }\n    // Apply the cell's offset (ie. x*cellHeight)\n    result[y] += yOffset;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\n\nexport function observeDevicePixelDimensions(element: HTMLElement, parentWindow: Window & typeof globalThis, callback: (deviceWidth: number, deviceHeight: number) => void): IDisposable {\n  // Observe any resizes to the element and extract the actual pixel size of the element if the\n  // devicePixelContentBoxSize API is supported. This allows correcting rounding errors when\n  // converting between CSS pixels and device pixels which causes blurry rendering when device\n  // pixel ratio is not a round number.\n  let observer: ResizeObserver | undefined = new parentWindow.ResizeObserver((entries) => {\n    const entry = entries.find((entry) => entry.target === element);\n    if (!entry) {\n      return;\n    }\n\n    // Disconnect if devicePixelContentBoxSize isn't supported by the browser\n    if (!('devicePixelContentBoxSize' in entry)) {\n      observer?.disconnect();\n      observer = undefined;\n      return;\n    }\n\n    // Fire the callback, ignore events where the dimensions are 0x0 as the canvas is likely hidden\n    const width = entry.devicePixelContentBoxSize[0].inlineSize;\n    const height = entry.devicePixelContentBoxSize[0].blockSize;\n    if (width > 0 && height > 0) {\n      callback(width, height);\n    }\n  });\n  try {\n    observer.observe(element, { box: ['device-pixel-content-box'] } as any);\n  } catch {\n    observer.disconnect();\n    observer = undefined;\n  }\n  return toDisposable(() => observer?.disconnect());\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IOffset, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRenderModel } from 'browser/renderer/shared/Types';\nimport { Terminal } from 'xterm';\n\nclass SelectionRenderModel implements ISelectionRenderModel {\n  public hasSelection!: boolean;\n  public columnSelectMode!: boolean;\n  public viewportStartRow!: number;\n  public viewportEndRow!: number;\n  public viewportCappedStartRow!: number;\n  public viewportCappedEndRow!: number;\n  public startCol!: number;\n  public endCol!: number;\n  public selectionStart: [number, number] | undefined;\n  public selectionEnd: [number, number] | undefined;\n\n  constructor() {\n    this.clear();\n  }\n\n  public clear(): void {\n    this.hasSelection = false;\n    this.columnSelectMode = false;\n    this.viewportStartRow = 0;\n    this.viewportEndRow = 0;\n    this.viewportCappedStartRow = 0;\n    this.viewportCappedEndRow = 0;\n    this.startCol = 0;\n    this.endCol = 0;\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n  }\n\n  public update(terminal: Terminal, start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this.selectionStart = start;\n    this.selectionEnd = end;\n    // Selection does not exist\n    if (!start || !end || (start[0] === end[0] && start[1] === end[1])) {\n      this.clear();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - terminal.buffer.active.viewportY;\n    const viewportEndRow = end[1] - terminal.buffer.active.viewportY;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, terminal.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= terminal.rows || viewportCappedEndRow < 0) {\n      this.clear();\n      return;\n    }\n\n    this.hasSelection = true;\n    this.columnSelectMode = columnSelectMode;\n    this.viewportStartRow = viewportStartRow;\n    this.viewportEndRow = viewportEndRow;\n    this.viewportCappedStartRow = viewportCappedStartRow;\n    this.viewportCappedEndRow = viewportCappedEndRow;\n    this.startCol = start[0];\n    this.endCol = end[0];\n  }\n\n  public isCellSelected(terminal: Terminal, x: number, y: number): boolean {\n    if (!this.hasSelection) {\n      return false;\n    }\n    y -= terminal.buffer.active.viewportY;\n    if (this.columnSelectMode) {\n      if (this.startCol <= this.endCol) {\n        return x >= this.startCol && y >= this.viewportCappedStartRow &&\n          x < this.endCol && y <= this.viewportCappedEndRow;\n      }\n      return x < this.startCol && y >= this.viewportCappedStartRow &&\n        x >= this.endCol && y <= this.viewportCappedEndRow;\n    }\n    return (y > this.viewportStartRow && y < this.viewportEndRow) ||\n      (this.viewportStartRow === this.viewportEndRow && y === this.viewportStartRow && x >= this.startCol && x < this.endCol) ||\n      (this.viewportStartRow < this.viewportEndRow && y === this.viewportEndRow && x < this.endCol) ||\n      (this.viewportStartRow < this.viewportEndRow && y === this.viewportStartRow && x >= this.startCol);\n  }\n}\n\nexport function createSelectionRenderModel(): ISelectionRenderModel {\n  return new SelectionRenderModel();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, TEXT_BASELINE } from 'browser/renderer/shared/Constants';\nimport { DEFAULT_COLOR, Attributes, DEFAULT_EXT, UnderlineStyle } from 'common/buffer/Constants';\nimport { IColor } from 'common/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { color, NULL_COLOR, rgba } from 'common/Color';\nimport { tryDrawCustomChar } from 'browser/renderer/shared/CustomGlyphs';\nimport { excludeFromContrastRatioDemands, isPowerlineGlyph, isRestrictedPowerlineGlyph, throwIfFalsy } from 'browser/renderer/shared/RendererUtils';\nimport { IUnicodeService } from 'common/services/Services';\nimport { FourKeyMap } from 'common/MultiKeyMap';\nimport { IdleTaskQueue } from 'common/TaskQueue';\nimport { IBoundingBox, ICharAtlasConfig, IRasterizedGlyph, IRequestRedrawEvent, ITextureAtlas } from 'browser/renderer/shared/Types';\nimport { EventEmitter } from 'common/EventEmitter';\n\n/**\n * A shared object which is used to draw nothing for a particular cell.\n */\nconst NULL_RASTERIZED_GLYPH: IRasterizedGlyph = {\n  texturePage: 0,\n  texturePosition: { x: 0, y: 0 },\n  texturePositionClipSpace: { x: 0, y: 0 },\n  offset: { x: 0, y: 0 },\n  size: { x: 0, y: 0 },\n  sizeClipSpace: { x: 0, y: 0 }\n};\n\nconst TMP_CANVAS_GLYPH_PADDING = 2;\n\nconst enum Constants {\n  /**\n   * The amount of pixel padding to allow in each row. Setting this to zero would make the atlas\n   * page pack as tightly as possible, but more pages would end up being created as a result.\n   */\n  ROW_PIXEL_THRESHOLD = 2,\n  /**\n   * The maximum texture size regardless of what the actual hardware maximum turns out to be. This\n   * is enforced to ensure uploading the texture still finishes in a reasonable amount of time. A\n   * 4096 squared image takes up 16MB of GPU memory.\n   */\n  FORCED_MAX_TEXTURE_SIZE = 4096\n}\n\ninterface ICharAtlasActiveRow {\n  x: number;\n  y: number;\n  height: number;\n}\n\n// Work variables to avoid garbage collection\nlet $glyph = undefined;\n\nexport class TextureAtlas implements ITextureAtlas {\n  private _didWarmUp: boolean = false;\n\n  private _cacheMap: FourKeyMap<number, number, number, number, IRasterizedGlyph> = new FourKeyMap();\n  private _cacheMapCombined: FourKeyMap<string, number, number, number, IRasterizedGlyph> = new FourKeyMap();\n\n  // The texture that the atlas is drawn to\n  private _pages: AtlasPage[] = [];\n  public get pages(): { canvas: HTMLCanvasElement, version: number }[] { return this._pages; }\n\n  // The set of atlas pages that can be written to\n  private _activePages: AtlasPage[] = [];\n\n  private _tmpCanvas: HTMLCanvasElement;\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  private _workBoundingBox: IBoundingBox = { top: 0, left: 0, bottom: 0, right: 0 };\n  private _workAttributeData: AttributeData = new AttributeData();\n\n  private _textureSize: number = 512;\n\n  public static maxAtlasPages: number | undefined;\n  public static maxTextureSize: number | undefined;\n\n  private readonly _onAddTextureAtlasCanvas = new EventEmitter<HTMLCanvasElement>();\n  public readonly onAddTextureAtlasCanvas = this._onAddTextureAtlasCanvas.event;\n  private readonly _onRemoveTextureAtlasCanvas = new EventEmitter<HTMLCanvasElement>();\n  public readonly onRemoveTextureAtlasCanvas = this._onRemoveTextureAtlasCanvas.event;\n\n  constructor(\n    private readonly _document: Document,\n    private readonly _config: ICharAtlasConfig,\n    private readonly _unicodeService: IUnicodeService\n  ) {\n    this._createNewPage();\n    this._tmpCanvas = createCanvas(\n      _document,\n      this._config.deviceCellWidth * 4 + TMP_CANVAS_GLYPH_PADDING * 2,\n      this._config.deviceCellHeight + TMP_CANVAS_GLYPH_PADDING * 2\n    );\n    this._tmpCtx = throwIfFalsy(this._tmpCanvas.getContext('2d', {\n      alpha: this._config.allowTransparency,\n      willReadFrequently: true\n    }));\n  }\n\n  public dispose(): void {\n    for (const page of this.pages) {\n      page.canvas.remove();\n    }\n    this._onAddTextureAtlasCanvas.dispose();\n  }\n\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  private _doWarmUp(): void {\n    // Pre-fill with ASCII 33-126, this is not urgent and done in idle callbacks\n    const queue = new IdleTaskQueue();\n    for (let i = 33; i < 126; i++) {\n      queue.enqueue(() => {\n        if (!this._cacheMap.get(i, DEFAULT_COLOR, DEFAULT_COLOR, DEFAULT_EXT)) {\n          const rasterizedGlyph = this._drawToCache(i, DEFAULT_COLOR, DEFAULT_COLOR, DEFAULT_EXT);\n          this._cacheMap.set(i, DEFAULT_COLOR, DEFAULT_COLOR, DEFAULT_EXT, rasterizedGlyph);\n        }\n      });\n    }\n  }\n\n  private _requestClearModel = false;\n  public beginFrame(): boolean {\n    return this._requestClearModel;\n  }\n\n  public clearTexture(): void {\n    if (this._pages[0].currentRow.x === 0 && this._pages[0].currentRow.y === 0) {\n      return;\n    }\n    for (const page of this._pages) {\n      page.clear();\n    }\n    this._cacheMap.clear();\n    this._cacheMapCombined.clear();\n    this._didWarmUp = false;\n  }\n\n  private _createNewPage(): AtlasPage {\n    // Try merge the set of the 4 most used pages of the largest size. This is is deferred to a\n    // microtask to ensure it does not interrupt textures that will be rendered in the current\n    // animation frame which would result in blank rendered areas. This is actually not that\n    // expensive relative to drawing the glyphs, so there is no need to wait for an idle callback.\n    if (TextureAtlas.maxAtlasPages && this._pages.length >= Math.max(4, TextureAtlas.maxAtlasPages / 2)) {\n      queueMicrotask(() => {\n        // Find the set of the largest 4 images, below the maximum size, with the highest\n        // percentages used\n        const pagesBySize = this._pages.filter(e => {\n          return e.canvas.width * 2 <= (TextureAtlas.maxTextureSize || Constants.FORCED_MAX_TEXTURE_SIZE);\n        }).sort((a, b) => {\n          if (b.canvas.width !== a.canvas.width) {\n            return b.canvas.width - a.canvas.width;\n          }\n          return b.percentageUsed - a.percentageUsed;\n        });\n        let sameSizeI = -1;\n        let size = 0;\n        for (let i = 0; i < pagesBySize.length; i++) {\n          if (pagesBySize[i].canvas.width !== size) {\n            sameSizeI = i;\n            size = pagesBySize[i].canvas.width;\n          } else if (i - sameSizeI === 3) {\n            break;\n          }\n        }\n\n        // Gather details of the merge\n        const mergingPages = pagesBySize.slice(sameSizeI, sameSizeI + 4);\n        const sortedMergingPagesIndexes = mergingPages.map(e => e.glyphs[0].texturePage).sort((a, b) => a > b ? 1 : -1);\n        const mergedPageIndex = sortedMergingPagesIndexes[0];\n\n        // Merge into the new page\n        const mergedPage = this._mergePages(mergingPages, mergedPageIndex);\n        mergedPage.version++;\n\n        // Replace the first _merging_ page with the _merged_ page\n        this._pages[mergedPageIndex] = mergedPage;\n\n        // Delete the other 3 pages, shifting glyph texture pages as needed\n        for (let i = sortedMergingPagesIndexes.length - 1; i >= 1; i--) {\n          this._deletePage(sortedMergingPagesIndexes[i]);\n        }\n\n        // Request the model to be cleared to refresh all texture pages.\n        this._requestClearModel = true;\n        this._onAddTextureAtlasCanvas.fire(mergedPage.canvas);\n      });\n    }\n\n    // All new atlas pages are created small as they are highly dynamic\n    const newPage = new AtlasPage(this._document, this._textureSize);\n    this._pages.push(newPage);\n    this._activePages.push(newPage);\n    this._onAddTextureAtlasCanvas.fire(newPage.canvas);\n    return newPage;\n  }\n\n  private _mergePages(mergingPages: AtlasPage[], mergedPageIndex: number): AtlasPage {\n    const mergedSize = mergingPages[0].canvas.width * 2;\n    const mergedPage = new AtlasPage(this._document, mergedSize, mergingPages);\n    for (const [i, p] of mergingPages.entries()) {\n      const xOffset = i * p.canvas.width % mergedSize;\n      const yOffset = Math.floor(i / 2) * p.canvas.height;\n      mergedPage.ctx.drawImage(p.canvas, xOffset, yOffset);\n      for (const g of p.glyphs) {\n        g.texturePage = mergedPageIndex;\n        g.sizeClipSpace.x = g.size.x / mergedSize;\n        g.sizeClipSpace.y = g.size.y / mergedSize;\n        g.texturePosition.x += xOffset;\n        g.texturePosition.y += yOffset;\n        g.texturePositionClipSpace.x = g.texturePosition.x / mergedSize;\n        g.texturePositionClipSpace.y = g.texturePosition.y / mergedSize;\n      }\n\n      this._onRemoveTextureAtlasCanvas.fire(p.canvas);\n\n      // Remove the merging page from active pages if it was there\n      const index = this._activePages.indexOf(p);\n      if (index !== -1) {\n        this._activePages.splice(index, 1);\n      }\n    }\n    return mergedPage;\n  }\n\n  private _deletePage(pageIndex: number): void {\n    this._pages.splice(pageIndex, 1);\n    for (let j = pageIndex; j < this._pages.length; j++) {\n      const adjustingPage = this._pages[j];\n      for (const g of adjustingPage.glyphs) {\n        g.texturePage--;\n      }\n      adjustingPage.version++;\n    }\n  }\n\n  public getRasterizedGlyphCombinedChar(chars: string, bg: number, fg: number, ext: number): IRasterizedGlyph {\n    return this._getFromCacheMap(this._cacheMapCombined, chars, bg, fg, ext);\n  }\n\n  public getRasterizedGlyph(code: number, bg: number, fg: number, ext: number): IRasterizedGlyph {\n    return this._getFromCacheMap(this._cacheMap, code, bg, fg, ext);\n  }\n\n  /**\n   * Gets the glyphs texture coords, drawing the texture if it's not already\n   */\n  private _getFromCacheMap(\n    cacheMap: FourKeyMap<string | number, number, number, number, IRasterizedGlyph>,\n    key: string | number,\n    bg: number,\n    fg: number,\n    ext: number\n  ): IRasterizedGlyph {\n    $glyph = cacheMap.get(key, bg, fg, ext);\n    if (!$glyph) {\n      $glyph = this._drawToCache(key, bg, fg, ext);\n      cacheMap.set(key, bg, fg, ext, $glyph);\n    }\n    return $glyph;\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx >= this._config.colors.ansi.length) {\n      throw new Error('No color found for idx ' + idx);\n    }\n    return this._config.colors.ansi[idx];\n  }\n\n  private _getBackgroundColor(bgColorMode: number, bgColor: number, inverse: boolean, dim: boolean): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return NULL_COLOR;\n    }\n\n    let result: IColor;\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        result = this._getColorFromAnsiIndex(bgColor);\n        break;\n      case Attributes.CM_RGB:\n        const arr = AttributeData.toColorRGB(bgColor);\n        // TODO: This object creation is slow\n        result = rgba.toColor(arr[0], arr[1], arr[2]);\n        break;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          result = this._config.colors.foreground;\n        } else {\n          result = this._config.colors.background;\n        }\n        break;\n    }\n\n    return result;\n  }\n\n  private _getForegroundColor(bg: number, bgColorMode: number, bgColor: number, fg: number, fgColorMode: number, fgColor: number, inverse: boolean, dim: boolean, bold: boolean, excludeFromContrastRatioDemands: boolean): IColor {\n    // TODO: Pass dim along to get min contrast?\n    const minimumContrastColor = this._getMinimumContrastColor(bg, bgColorMode, bgColor, fg, fgColorMode, fgColor, false, bold, excludeFromContrastRatioDemands);\n    if (minimumContrastColor) {\n      return minimumContrastColor;\n    }\n\n    let result: IColor;\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._config.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        result = this._getColorFromAnsiIndex(fgColor);\n        break;\n      case Attributes.CM_RGB:\n        const arr = AttributeData.toColorRGB(fgColor);\n        result = rgba.toColor(arr[0], arr[1], arr[2]);\n        break;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          result = this._config.colors.background;\n        } else {\n          result = this._config.colors.foreground;\n        }\n    }\n\n    // Always use an opaque color regardless of allowTransparency\n    if (this._config.allowTransparency) {\n      result = color.opaque(result);\n    }\n\n    // Apply dim to the color, opacity is fine to use for the foreground color\n    if (dim) {\n      result = color.multiplyOpacity(result, DIM_OPACITY);\n    }\n\n    return result;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._getColorFromAnsiIndex(bgColor).rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._config.colors.foreground.rgba;\n        }\n        return this._config.colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._config.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._getColorFromAnsiIndex(fgColor).rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._config.colors.background.rgba;\n        }\n        return this._config.colors.foreground.rgba;\n    }\n  }\n\n  private _getMinimumContrastColor(bg: number, bgColorMode: number, bgColor: number, fg: number, fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean, excludeFromContrastRatioDemands: boolean): IColor | undefined {\n    if (this._config.minimumContrastRatio === 1 || excludeFromContrastRatioDemands) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const adjustedColor = this._config.colors.contrastCache.getColor(bg, fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, inverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, inverse, bold);\n    const result = rgba.ensureContrastRatio(bgRgba, fgRgba, this._config.minimumContrastRatio);\n\n    if (!result) {\n      this._config.colors.contrastCache.setColor(bg, fg, null);\n      return undefined;\n    }\n\n    const color = rgba.toColor(\n      (result >> 24) & 0xFF,\n      (result >> 16) & 0xFF,\n      (result >> 8) & 0xFF\n    );\n    this._config.colors.contrastCache.setColor(bg, fg, color);\n\n    return color;\n  }\n\n  private _drawToCache(codeOrChars: number | string, bg: number, fg: number, ext: number): IRasterizedGlyph {\n    const chars = typeof codeOrChars === 'number' ? String.fromCharCode(codeOrChars) : codeOrChars;\n\n    // Uncomment for debugging\n    // console.log(`draw to cache \"${chars}\"`, bg, fg, ext);\n\n    // Allow 1 cell width per character, with a minimum of 2 (CJK), plus some padding. This is used\n    // to draw the glyph to the canvas as well as to restrict the bounding box search to ensure\n    // giant ligatures (eg. =====>) don't impact overall performance.\n    const allowedWidth = Math.min(this._config.deviceCellWidth * Math.max(chars.length, 2) + TMP_CANVAS_GLYPH_PADDING * 2, this._textureSize);\n    if (this._tmpCanvas.width < allowedWidth) {\n      this._tmpCanvas.width = allowedWidth;\n    }\n    // Include line height when drawing glyphs\n    const allowedHeight = Math.min(this._config.deviceCellHeight + TMP_CANVAS_GLYPH_PADDING * 4, this._textureSize);\n    if (this._tmpCanvas.height < allowedHeight) {\n      this._tmpCanvas.height = allowedHeight;\n    }\n    this._tmpCtx.save();\n\n    this._workAttributeData.fg = fg;\n    this._workAttributeData.bg = bg;\n    this._workAttributeData.extended.ext = ext;\n\n    const invisible = !!this._workAttributeData.isInvisible();\n    if (invisible) {\n      return NULL_RASTERIZED_GLYPH;\n    }\n\n    const bold = !!this._workAttributeData.isBold();\n    const inverse = !!this._workAttributeData.isInverse();\n    const dim = !!this._workAttributeData.isDim();\n    const italic = !!this._workAttributeData.isItalic();\n    const underline = !!this._workAttributeData.isUnderline();\n    const strikethrough = !!this._workAttributeData.isStrikethrough();\n    const overline = !!this._workAttributeData.isOverline();\n    let fgColor = this._workAttributeData.getFgColor();\n    let fgColorMode = this._workAttributeData.getFgColorMode();\n    let bgColor = this._workAttributeData.getBgColor();\n    let bgColorMode = this._workAttributeData.getBgColorMode();\n    if (inverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(bgColorMode, bgColor, inverse, dim);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._tmpCanvas.width, this._tmpCanvas.height);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = TEXT_BASELINE;\n\n    const powerlineGlyph = chars.length === 1 && isPowerlineGlyph(chars.charCodeAt(0));\n    const restrictedPowerlineGlyph = chars.length === 1 && isRestrictedPowerlineGlyph(chars.charCodeAt(0));\n    const foregroundColor = this._getForegroundColor(bg, bgColorMode, bgColor, fg, fgColorMode, fgColor, inverse, dim, bold, excludeFromContrastRatioDemands(chars.charCodeAt(0)));\n    this._tmpCtx.fillStyle = foregroundColor.css;\n\n    // For powerline glyphs left/top padding is excluded (https://github.com/microsoft/vscode/issues/120129)\n    const padding = restrictedPowerlineGlyph ? 0 : TMP_CANVAS_GLYPH_PADDING * 2;\n\n    // Draw custom characters if applicable\n    let customGlyph = false;\n    if (this._config.customGlyphs !== false) {\n      customGlyph = tryDrawCustomChar(this._tmpCtx, chars, padding, padding, this._config.deviceCellWidth, this._config.deviceCellHeight, this._config.fontSize, this._config.devicePixelRatio);\n    }\n\n    // Whether to clear pixels based on a threshold difference between the glyph color and the\n    // background color. This should be disabled when the glyph contains multiple colors such as\n    // underline colors to prevent important colors could get cleared.\n    let enableClearThresholdCheck = !powerlineGlyph;\n\n    let chWidth: number;\n    if (typeof codeOrChars === 'number') {\n      chWidth = this._unicodeService.wcwidth(codeOrChars);\n    } else {\n      chWidth = this._unicodeService.getStringCellWidth(codeOrChars);\n    }\n\n    // Draw underline\n    if (underline) {\n      this._tmpCtx.save();\n      const lineWidth = Math.max(1, Math.floor(this._config.fontSize * this._config.devicePixelRatio / 15));\n      // When the line width is odd, draw at a 0.5 position\n      const yOffset = lineWidth % 2 === 1 ? 0.5 : 0;\n      this._tmpCtx.lineWidth = lineWidth;\n\n      // Underline color\n      if (this._workAttributeData.isUnderlineColorDefault()) {\n        this._tmpCtx.strokeStyle = this._tmpCtx.fillStyle;\n      } else if (this._workAttributeData.isUnderlineColorRGB()) {\n        enableClearThresholdCheck = false;\n        this._tmpCtx.strokeStyle = `rgb(${AttributeData.toColorRGB(this._workAttributeData.getUnderlineColor()).join(',')})`;\n      } else {\n        enableClearThresholdCheck = false;\n        let fg = this._workAttributeData.getUnderlineColor();\n        if (this._config.drawBoldTextInBrightColors && this._workAttributeData.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._tmpCtx.strokeStyle = this._getColorFromAnsiIndex(fg).css;\n      }\n\n      // Underline style/stroke\n      this._tmpCtx.beginPath();\n      const xLeft = padding;\n      const yTop = Math.ceil(padding + this._config.deviceCharHeight) - yOffset;\n      const yMid = padding + this._config.deviceCharHeight + lineWidth - yOffset;\n      const yBot = Math.ceil(padding + this._config.deviceCharHeight + lineWidth * 2) - yOffset;\n\n      for (let i = 0; i < chWidth; i++) {\n        this._tmpCtx.save();\n        const xChLeft = xLeft + i * this._config.deviceCellWidth;\n        const xChRight = xLeft + (i + 1) * this._config.deviceCellWidth;\n        const xChMid = xChLeft + this._config.deviceCellWidth / 2;\n        switch (this._workAttributeData.extended.underlineStyle) {\n          case UnderlineStyle.DOUBLE:\n            this._tmpCtx.moveTo(xChLeft, yTop);\n            this._tmpCtx.lineTo(xChRight, yTop);\n            this._tmpCtx.moveTo(xChLeft, yBot);\n            this._tmpCtx.lineTo(xChRight, yBot);\n            break;\n          case UnderlineStyle.CURLY:\n            // Choose the bezier top and bottom based on the device pixel ratio, the curly line is\n            // made taller when the line width is  as otherwise it's not very clear otherwise.\n            const yCurlyBot = lineWidth <= 1 ? yBot : Math.ceil(padding + this._config.deviceCharHeight - lineWidth / 2) - yOffset;\n            const yCurlyTop = lineWidth <= 1 ? yTop : Math.ceil(padding + this._config.deviceCharHeight + lineWidth / 2) - yOffset;\n            // Clip the left and right edges of the underline such that it can be drawn just outside\n            // the edge of the cell to ensure a continuous stroke when there are multiple underlined\n            // glyphs adjacent to one another.\n            const clipRegion = new Path2D();\n            clipRegion.rect(xChLeft, yTop, this._config.deviceCellWidth, yBot - yTop);\n            this._tmpCtx.clip(clipRegion);\n            // Start 1/2 cell before and end 1/2 cells after to ensure a smooth curve with other cells\n            this._tmpCtx.moveTo(xChLeft - this._config.deviceCellWidth / 2, yMid);\n            this._tmpCtx.bezierCurveTo(\n              xChLeft - this._config.deviceCellWidth / 2, yCurlyTop,\n              xChLeft, yCurlyTop,\n              xChLeft, yMid\n            );\n            this._tmpCtx.bezierCurveTo(\n              xChLeft, yCurlyBot,\n              xChMid, yCurlyBot,\n              xChMid, yMid\n            );\n            this._tmpCtx.bezierCurveTo(\n              xChMid, yCurlyTop,\n              xChRight, yCurlyTop,\n              xChRight, yMid\n            );\n            this._tmpCtx.bezierCurveTo(\n              xChRight, yCurlyBot,\n              xChRight + this._config.deviceCellWidth / 2, yCurlyBot,\n              xChRight + this._config.deviceCellWidth / 2, yMid\n            );\n            break;\n          case UnderlineStyle.DOTTED:\n            this._tmpCtx.setLineDash([Math.round(lineWidth), Math.round(lineWidth)]);\n            this._tmpCtx.moveTo(xChLeft, yTop);\n            this._tmpCtx.lineTo(xChRight, yTop);\n            break;\n          case UnderlineStyle.DASHED:\n            this._tmpCtx.setLineDash([this._config.devicePixelRatio * 4, this._config.devicePixelRatio * 3]);\n            this._tmpCtx.moveTo(xChLeft, yTop);\n            this._tmpCtx.lineTo(xChRight, yTop);\n            break;\n          case UnderlineStyle.SINGLE:\n          default:\n            this._tmpCtx.moveTo(xChLeft, yTop);\n            this._tmpCtx.lineTo(xChRight, yTop);\n            break;\n        }\n        this._tmpCtx.stroke();\n        this._tmpCtx.restore();\n      }\n      this._tmpCtx.restore();\n\n      // Draw stroke in the background color for non custom characters in order to give an outline\n      // between the text and the underline. Only do this when font size is >= 12 as the underline\n      // looks odd when the font size is too small\n      if (!customGlyph && this._config.fontSize >= 12) {\n        // This only works when transparency is disabled because it's not clear how to clear stroked\n        // text\n        if (!this._config.allowTransparency && chars !== ' ') {\n          // Measure the text, only draw the stroke if there is a descent beyond an alphabetic text\n          // baseline\n          this._tmpCtx.save();\n          this._tmpCtx.textBaseline = 'alphabetic';\n          const metrics = this._tmpCtx.measureText(chars);\n          this._tmpCtx.restore();\n          if ('actualBoundingBoxDescent' in metrics && metrics.actualBoundingBoxDescent > 0) {\n            // This translates to 1/2 the line width in either direction\n            this._tmpCtx.save();\n            // Clip the region to only draw in valid pixels near the underline to avoid a slight\n            // outline around the whole glyph, as well as additional pixels in the glyph at the top\n            // which would increase GPU memory demands\n            const clipRegion = new Path2D();\n            clipRegion.rect(xLeft, yTop - Math.ceil(lineWidth / 2), this._config.deviceCellWidth * chWidth, yBot - yTop + Math.ceil(lineWidth / 2));\n            this._tmpCtx.clip(clipRegion);\n            this._tmpCtx.lineWidth = this._config.devicePixelRatio * 3;\n            this._tmpCtx.strokeStyle = backgroundColor.css;\n            this._tmpCtx.strokeText(chars, padding, padding + this._config.deviceCharHeight);\n            this._tmpCtx.restore();\n          }\n        }\n      }\n    }\n\n    // Overline\n    if (overline) {\n      const lineWidth = Math.max(1, Math.floor(this._config.fontSize * this._config.devicePixelRatio / 15));\n      const yOffset = lineWidth % 2 === 1 ? 0.5 : 0;\n      this._tmpCtx.lineWidth = lineWidth;\n      this._tmpCtx.strokeStyle = this._tmpCtx.fillStyle;\n      this._tmpCtx.beginPath();\n      this._tmpCtx.moveTo(padding, padding + yOffset);\n      this._tmpCtx.lineTo(padding + this._config.deviceCharWidth * chWidth, padding + yOffset);\n      this._tmpCtx.stroke();\n    }\n\n    // Draw the character\n    if (!customGlyph) {\n      this._tmpCtx.fillText(chars, padding, padding + this._config.deviceCharHeight);\n    }\n\n    // If this character is underscore and beyond the cell bounds, shift it up until it is visible\n    // even on the bottom row, try for a maximum of 5 pixels.\n    if (chars === '_' && !this._config.allowTransparency) {\n      let isBeyondCellBounds = clearColor(this._tmpCtx.getImageData(padding, padding, this._config.deviceCellWidth, this._config.deviceCellHeight), backgroundColor, foregroundColor, enableClearThresholdCheck);\n      if (isBeyondCellBounds) {\n        for (let offset = 1; offset <= 5; offset++) {\n          this._tmpCtx.save();\n          this._tmpCtx.fillStyle = backgroundColor.css;\n          this._tmpCtx.fillRect(0, 0, this._tmpCanvas.width, this._tmpCanvas.height);\n          this._tmpCtx.restore();\n          this._tmpCtx.fillText(chars, padding, padding + this._config.deviceCharHeight - offset);\n          isBeyondCellBounds = clearColor(this._tmpCtx.getImageData(padding, padding, this._config.deviceCellWidth, this._config.deviceCellHeight), backgroundColor, foregroundColor, enableClearThresholdCheck);\n          if (!isBeyondCellBounds) {\n            break;\n          }\n        }\n      }\n    }\n\n    // Draw strokethrough\n    if (strikethrough) {\n      const lineWidth = Math.max(1, Math.floor(this._config.fontSize * this._config.devicePixelRatio / 10));\n      const yOffset = this._tmpCtx.lineWidth % 2 === 1 ? 0.5 : 0; // When the width is odd, draw at 0.5 position\n      this._tmpCtx.lineWidth = lineWidth;\n      this._tmpCtx.strokeStyle = this._tmpCtx.fillStyle;\n      this._tmpCtx.beginPath();\n      this._tmpCtx.moveTo(padding, padding + Math.floor(this._config.deviceCharHeight / 2) - yOffset);\n      this._tmpCtx.lineTo(padding + this._config.deviceCharWidth * chWidth, padding + Math.floor(this._config.deviceCharHeight / 2) - yOffset);\n      this._tmpCtx.stroke();\n    }\n\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._tmpCanvas.width, this._tmpCanvas.height\n    );\n\n    // Clear out the background color and determine if the glyph is empty.\n    let isEmpty: boolean;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor, foregroundColor, enableClearThresholdCheck);\n    } else {\n      isEmpty = checkCompletelyTransparent(imageData);\n    }\n\n    // Handle empty glyphs\n    if (isEmpty) {\n      return NULL_RASTERIZED_GLYPH;\n    }\n\n    const rasterizedGlyph = this._findGlyphBoundingBox(imageData, this._workBoundingBox, allowedWidth, restrictedPowerlineGlyph, customGlyph, padding);\n\n    // Find the best atlas row to use\n    let activePage: AtlasPage;\n    let activeRow: ICharAtlasActiveRow;\n    while (true) {\n      // If there are no active pages (the last smallest 4 were merged), create a new one\n      if (this._activePages.length === 0) {\n        const newPage = this._createNewPage();\n        activePage = newPage;\n        activeRow = newPage.currentRow;\n        activeRow.height = rasterizedGlyph.size.y;\n        break;\n      }\n\n      // Get the best current row from all active pages\n      activePage = this._activePages[this._activePages.length - 1];\n      activeRow = activePage.currentRow;\n      for (const p of this._activePages) {\n        if (rasterizedGlyph.size.y <= p.currentRow.height) {\n          activePage = p;\n          activeRow = p.currentRow;\n        }\n      }\n\n      // TODO: This algorithm could be simplified:\n      // - Search for the page with ROW_PIXEL_THRESHOLD in mind\n      // - Keep track of current/fixed rows in a Map\n\n      // Replace the best current row with a fixed row if there is one at least as good as the\n      // current row. Search in reverse to prioritize filling in older pages.\n      for (let i = this._activePages.length - 1; i >= 0; i--) {\n        for (const row of this._activePages[i].fixedRows) {\n          if (row.height <= activeRow.height && rasterizedGlyph.size.y <= row.height) {\n            activePage = this._activePages[i];\n            activeRow = row;\n          }\n        }\n      }\n\n      // Create a new one if too much vertical space would be wasted or there is not enough room\n      // left in the page. The previous active row will become fixed in the process as it now has a\n      // fixed height\n      if (activeRow.y + rasterizedGlyph.size.y >= activePage.canvas.height || activeRow.height > rasterizedGlyph.size.y + Constants.ROW_PIXEL_THRESHOLD) {\n        // Create the new fixed height row, creating a new page if there isn't enough room on the\n        // current page\n        let wasNewPageCreated = false;\n        if (activePage.currentRow.y + activePage.currentRow.height + rasterizedGlyph.size.y >= activePage.canvas.height) {\n          // Find the first page with room to create the new row on\n          let candidatePage: AtlasPage | undefined;\n          for (const p of this._activePages) {\n            if (p.currentRow.y + p.currentRow.height + rasterizedGlyph.size.y < p.canvas.height) {\n              candidatePage = p;\n              break;\n            }\n          }\n          if (candidatePage) {\n            activePage = candidatePage;\n          } else {\n            // Create a new page if there is no room\n            const newPage = this._createNewPage();\n            activePage = newPage;\n            activeRow = newPage.currentRow;\n            activeRow.height = rasterizedGlyph.size.y;\n            wasNewPageCreated = true;\n          }\n        }\n        if (!wasNewPageCreated) {\n          // Fix the current row as the new row is being added below\n          if (activePage.currentRow.height > 0) {\n            activePage.fixedRows.push(activePage.currentRow);\n          }\n          activeRow = {\n            x: 0,\n            y: activePage.currentRow.y + activePage.currentRow.height,\n            height: rasterizedGlyph.size.y\n          };\n          activePage.fixedRows.push(activeRow);\n\n          // Create the new current row below the new fixed height row\n          activePage.currentRow = {\n            x: 0,\n            y: activeRow.y + activeRow.height,\n            height: 0\n          };\n        }\n        // TODO: Remove pages from _activePages when all rows are filled\n      }\n\n      // Exit the loop if there is enough room in the row\n      if (activeRow.x + rasterizedGlyph.size.x <= activePage.canvas.width) {\n        break;\n      }\n\n      // If there is not enough room in the current row, finish it and try again\n      if (activeRow === activePage.currentRow) {\n        activeRow.x = 0;\n        activeRow.y += activeRow.height;\n        activeRow.height = 0;\n      } else {\n        activePage.fixedRows.splice(activePage.fixedRows.indexOf(activeRow), 1);\n      }\n    }\n\n    // Record texture position\n    rasterizedGlyph.texturePage = this._pages.indexOf(activePage);\n    rasterizedGlyph.texturePosition.x = activeRow.x;\n    rasterizedGlyph.texturePosition.y = activeRow.y;\n    rasterizedGlyph.texturePositionClipSpace.x = activeRow.x / activePage.canvas.width;\n    rasterizedGlyph.texturePositionClipSpace.y = activeRow.y / activePage.canvas.height;\n\n    // Fix the clipspace position as pages may be of differing size\n    rasterizedGlyph.sizeClipSpace.x /= activePage.canvas.width;\n    rasterizedGlyph.sizeClipSpace.y /= activePage.canvas.height;\n\n    // Update atlas current row, for fixed rows the glyph height will never be larger than the row\n    // height\n    activeRow.height = Math.max(activeRow.height, rasterizedGlyph.size.y);\n    activeRow.x += rasterizedGlyph.size.x;\n\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    activePage.ctx.putImageData(\n      imageData,\n      rasterizedGlyph.texturePosition.x - this._workBoundingBox.left,\n      rasterizedGlyph.texturePosition.y - this._workBoundingBox.top,\n      this._workBoundingBox.left,\n      this._workBoundingBox.top,\n      rasterizedGlyph.size.x,\n      rasterizedGlyph.size.y\n    );\n    activePage.addGlyph(rasterizedGlyph);\n    activePage.version++;\n\n    return rasterizedGlyph;\n  }\n\n  /**\n   * Given an ImageData object, find the bounding box of the non-transparent\n   * portion of the texture and return an IRasterizedGlyph with these\n   * dimensions.\n   * @param imageData The image data to read.\n   * @param boundingBox An IBoundingBox to put the clipped bounding box values.\n   */\n  private _findGlyphBoundingBox(imageData: ImageData, boundingBox: IBoundingBox, allowedWidth: number, restrictedGlyph: boolean, customGlyph: boolean, padding: number): IRasterizedGlyph {\n    boundingBox.top = 0;\n    const height = restrictedGlyph ? this._config.deviceCellHeight : this._tmpCanvas.height;\n    const width = restrictedGlyph ? this._config.deviceCellWidth : allowedWidth;\n    let found = false;\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.top = y;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.left = 0;\n    found = false;\n    for (let x = 0; x < padding + width; x++) {\n      for (let y = 0; y < height; y++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.left = x;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.right = width;\n    found = false;\n    for (let x = padding + width - 1; x >= padding; x--) {\n      for (let y = 0; y < height; y++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.right = x;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.bottom = height;\n    found = false;\n    for (let y = height - 1; y >= 0; y--) {\n      for (let x = 0; x < width; x++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.bottom = y;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    return {\n      texturePage: 0,\n      texturePosition: { x: 0, y: 0 },\n      texturePositionClipSpace: { x: 0, y: 0 },\n      size: {\n        x: boundingBox.right - boundingBox.left + 1,\n        y: boundingBox.bottom - boundingBox.top + 1\n      },\n      sizeClipSpace: {\n        x: (boundingBox.right - boundingBox.left + 1),\n        y: (boundingBox.bottom - boundingBox.top + 1)\n      },\n      offset: {\n        x: -boundingBox.left + padding + ((restrictedGlyph || customGlyph) ? Math.floor((this._config.deviceCellWidth - this._config.deviceCharWidth) / 2) : 0),\n        y: -boundingBox.top + padding + ((restrictedGlyph || customGlyph) ? this._config.lineHeight === 1 ? 0 : Math.round((this._config.deviceCellHeight - this._config.deviceCharHeight) / 2) : 0)\n      }\n    };\n  }\n}\n\nclass AtlasPage {\n  public readonly canvas: HTMLCanvasElement;\n  public readonly ctx: CanvasRenderingContext2D;\n\n  private _usedPixels: number = 0;\n  public get percentageUsed(): number { return this._usedPixels / (this.canvas.width * this.canvas.height); }\n\n  private readonly _glyphs: IRasterizedGlyph[] = [];\n  public get glyphs(): ReadonlyArray<IRasterizedGlyph> { return this._glyphs; }\n  public addGlyph(glyph: IRasterizedGlyph): void {\n    this._glyphs.push(glyph);\n    this._usedPixels += glyph.size.x * glyph.size.y;\n  }\n\n  /**\n   * Used to check whether the canvas of the atlas page has changed.\n   */\n  public version = 0;\n\n  // Texture atlas current positioning data. The texture packing strategy used is to fill from\n  // left-to-right and top-to-bottom. When the glyph being written is less than half of the current\n  // row's height, the following happens:\n  //\n  // - The current row becomes the fixed height row A\n  // - A new fixed height row B the exact size of the glyph is created below the current row\n  // - A new dynamic height current row is created below B\n  //\n  // This strategy does a good job preventing space being wasted for very short glyphs such as\n  // underscores, hyphens etc. or those with underlines rendered.\n  public currentRow: ICharAtlasActiveRow = {\n    x: 0,\n    y: 0,\n    height: 0\n  };\n  public readonly fixedRows: ICharAtlasActiveRow[] = [];\n\n  constructor(\n    document: Document,\n    size: number,\n    sourcePages?: AtlasPage[]\n  ) {\n    if (sourcePages) {\n      for (const p of sourcePages) {\n        this._glyphs.push(...p.glyphs);\n        this._usedPixels += p._usedPixels;\n      }\n    }\n    this.canvas = createCanvas(document, size, size);\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this.ctx = throwIfFalsy(this.canvas.getContext('2d', { alpha: true }));\n  }\n\n  public clear(): void {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.currentRow.x = 0;\n    this.currentRow.y = 0;\n    this.currentRow.height = 0;\n    this.fixedRows.length = 0;\n    this.version++;\n  }\n}\n\n/**\n * Makes a particular rgb color and colors that are nearly the same in an ImageData completely\n * transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, bg: IColor, fg: IColor, enableThresholdCheck: boolean): boolean {\n  // Get color channels\n  const r = bg.rgba >>> 24;\n  const g = bg.rgba >>> 16 & 0xFF;\n  const b = bg.rgba >>> 8 & 0xFF;\n  const fgR = fg.rgba >>> 24;\n  const fgG = fg.rgba >>> 16 & 0xFF;\n  const fgB = fg.rgba >>> 8 & 0xFF;\n\n  // Calculate a threshold that when below a color will be treated as transpart when the sum of\n  // channel value differs. This helps improve rendering when glyphs overlap with others. This\n  // threshold is calculated relative to the difference between the background and foreground to\n  // ensure important details of the glyph are always shown, even when the contrast ratio is low.\n  // The number 12 is largely arbitrary to ensure the pixels that escape the cell in the test case\n  // were covered (fg=#8ae234, bg=#c4a000).\n  const threshold = Math.floor((Math.abs(r - fgR) + Math.abs(g - fgG) + Math.abs(b - fgB)) / 12);\n\n  // Set alpha channel of relevent pixels to 0\n  let isEmpty = true;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    // Check exact match\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      // Check the threshold based difference\n      if (enableThresholdCheck &&\n          (Math.abs(imageData.data[offset] - r) +\n          Math.abs(imageData.data[offset + 1] - g) +\n          Math.abs(imageData.data[offset + 2] - b)) < threshold) {\n        imageData.data[offset + 3] = 0;\n      } else {\n        isEmpty = false;\n      }\n    }\n  }\n\n  return isEmpty;\n}\n\nfunction checkCompletelyTransparent(imageData: ImageData): boolean {\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset + 3] > 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction createCanvas(document: Document, width: number, height: number): HTMLCanvasElement {\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n  public isOverline(): number      { return this.bg & BgFlags.OVERLINE; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000,\n  OVERLINE = 0x40000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler, IWindowsPty, ILogger } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<TArgs extends any[]> = TArgs extends [] ? []\n  : TArgs extends [...infer TFirst, infer TLast] ? TLast extends IBrandedService ? GetLeadingNonServiceArgs<TFirst> : TArgs\n    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  logger?: ILogger | null;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowsPty?: IWindowsPty;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharacterJoinerService, ICharSizeService, ICoreBrowserService, IRenderService, ISelectionService, IThemeService } from 'browser/services/Services';\nimport { ITerminal } from 'browser/Types';\nimport { CanvasRenderer } from './CanvasRenderer';\nimport { IBufferService, ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { ITerminalAddon, Terminal } from 'xterm';\nimport { EventEmitter, forwardEvent } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nexport class CanvasAddon extends Disposable implements ITerminalAddon {\n  private _terminal?: Terminal;\n  private _renderer?: CanvasRenderer;\n\n  private readonly _onChangeTextureAtlas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onChangeTextureAtlas = this._onChangeTextureAtlas.event;\n  private readonly _onAddTextureAtlasCanvas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onAddTextureAtlasCanvas = this._onAddTextureAtlasCanvas.event;\n\n  public get textureAtlas(): HTMLCanvasElement | undefined {\n    return this._renderer?.textureAtlas;\n  }\n\n  public activate(terminal: Terminal): void {\n    const core = (terminal as any)._core as ITerminal;\n    if (!terminal.element) {\n      this.register(core.onWillOpen(() => this.activate(terminal)));\n      return;\n    }\n\n    this._terminal = terminal;\n    const coreService = core.coreService;\n    const optionsService = core.optionsService;\n    const screenElement = core.screenElement!;\n    const linkifier = core.linkifier2;\n\n    const unsafeCore = core as any;\n    const bufferService: IBufferService = unsafeCore._bufferService;\n    const renderService: IRenderService = unsafeCore._renderService;\n    const characterJoinerService: ICharacterJoinerService = unsafeCore._characterJoinerService;\n    const charSizeService: ICharSizeService = unsafeCore._charSizeService;\n    const coreBrowserService: ICoreBrowserService = unsafeCore._coreBrowserService;\n    const decorationService: IDecorationService = unsafeCore._decorationService;\n    const themeService: IThemeService = unsafeCore._themeService;\n\n    this._renderer = new CanvasRenderer(terminal, screenElement, linkifier, bufferService, charSizeService, optionsService, characterJoinerService, coreService, coreBrowserService, decorationService, themeService);\n    this.register(forwardEvent(this._renderer.onChangeTextureAtlas, this._onChangeTextureAtlas));\n    this.register(forwardEvent(this._renderer.onAddTextureAtlasCanvas, this._onAddTextureAtlasCanvas));\n    renderService.setRenderer(this._renderer);\n    renderService.handleResize(bufferService.cols, bufferService.rows);\n\n    this.register(toDisposable(() => {\n      renderService.setRenderer((this._terminal as any)._core._createRenderer());\n      renderService.handleResize(terminal.cols, terminal.rows);\n      this._renderer?.dispose();\n      this._renderer = undefined;\n    }));\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","self","BaseRenderLayer","Disposable","constructor","_terminal","_container","id","zIndex","_alpha","_themeService","_bufferService","_optionsService","_decorationService","_coreBrowserService","super","_deviceCharWidth","_deviceCharHeight","_deviceCellWidth","_deviceCellHeight","_deviceCharLeft","_deviceCharTop","_selectionModel","createSelectionRenderModel","_bitmapGenerator","_onAddTextureAtlasCanvas","this","register","EventEmitter","onAddTextureAtlasCanvas","event","_cellColorResolver","CellColorResolver","_canvas","document","createElement","classList","add","style","toString","_initCanvas","appendChild","_refreshCharAtlas","colors","onChangeColors","e","reset","handleSelectionChanged","selectionStart","selectionEnd","columnSelectMode","toDisposable","remove","_charAtlas","dispose","canvas","cacheCanvas","pages","_ctx","throwIfFalsy","getContext","alpha","_clearAll","handleBlur","handleFocus","handleCursorMove","handleGridChanged","startRow","endRow","start","end","update","_setTransparency","oldCanvas","cloneNode","replaceChild","rows","colorSet","_charAtlasDisposable","acquireTextureAtlas","rawOptions","dpr","forwardEvent","warmUp","i","length","BitmapGenerator","resize","dim","device","cell","width","height","char","left","top","css","clearTextureAtlas","clearTexture","_fillCells","x","y","fillRect","_fillMiddleLineAtCells","cellOffset","Math","ceil","_fillBottomLineAtCells","pixelOffset","_curlyUnderlineAtCell","save","beginPath","strokeStyle","fillStyle","lineWidth","xOffset","xLeft","xMid","xRight","yMid","yMidBot","yMidTop","moveTo","bezierCurveTo","stroke","restore","_dottedUnderlineAtCell","setLineDash","lineTo","closePath","_dashedUnderlineAtCell","_fillLeftLineAtCell","_strokeRectAtCell","strokeRect","clearRect","background","_clearCells","_fillCharTrueColor","font","_getFont","textBaseline","TEXT_BASELINE","_clipRow","drawSuccess","customGlyphs","tryDrawCustomChar","getChars","fontSize","fillText","_drawChars","chars","glyph","resolve","buffer","ydisp","getRasterizedGlyphCombinedChar","result","bg","fg","ext","getRasterizedGlyph","getCode","WHITESPACE_CELL_CODE","size","texturePage","bitmap","close","version","refresh","drawImage","texturePosition","offset","rect","cols","clip","isBold","isItalic","fontWeightBold","fontWeight","fontFamily","_state","_commitTimeout","undefined","_bitmap","isSafari","window","setTimeout","_generate","createImageBitmap","then","CanvasRenderer","_screenElement","linkifier2","_charSizeService","characterJoinerService","coreService","decorationService","_onRequestRedraw","onRequestRedraw","_onChangeTextureAtlas","onChangeTextureAtlas","allowTransparency","_renderLayers","TextRenderLayer","SelectionRenderLayer","LinkRenderLayer","CursorRenderLayer","layer","dimensions","createRenderDimensions","_devicePixelRatio","_updateDimensions","observeDevicePixelDimensions","w","h","_setCanvasDevicePixelDimensions","l","removeTerminalFromCache","textureAtlas","handleDevicePixelRatioChange","handleResize","handleCharSizeChanged","_runOperation","selectionForeground","fire","clear","operation","renderRows","hasValidSize","floor","lineHeight","round","letterSpacing","_requestRedrawViewport","terminal","container","bufferService","optionsService","_coreService","coreBrowserService","themeService","_cell","CellData","isFocused","_cursorRenderers","_renderBarCursor","bind","_renderBlockCursor","_renderUnderlineCursor","onOptionChange","_handleOptionsChanged","_cursorBlinkStateManager","_clearCursor","restartBlinkAnimation","pause","resume","cursorBlink","CursorBlinkStateManager","_render","isPaused","triggeredByAnimationFrame","isCursorInitialized","isCursorHidden","cursorY","ybase","viewportRelativeCursorY","cursorX","min","lines","get","loadCell","content","cursor","cursorStyle","_renderBlurCursor","getWidth","isCursorVisible","isFirefox","cursorWidth","cursorAccent","_renderCallback","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","clearTimeout","_animationFrame","cancelAnimationFrame","_animationTimeRestarted","Date","now","requestAnimationFrame","timeToStart","BLINK_INTERVAL","time","setInterval","cache","push","onShowLinkUnderline","_handleShowLinkUnderline","onHideLinkUnderline","_handleHideLinkUnderline","_clearCurrentLink","x1","y1","middleRowCount","y2","x2","INVERTED_DEFAULT_COLOR","is256Color","ansi","foreground","_clearState","_redrawSelection","_didStateChange","viewportStartRow","viewportEndRow","viewportCappedStartRow","max","viewportCappedEndRow","selectionBackgroundTransparent","selectionInactiveBackgroundTransparent","startCol","startRowEndCol","middleRowsCount","endCol","_areCoordinatesEqual","coord1","coord2","_characterJoinerService","_characterWidth","_characterFont","_characterOverlapCache","_workCell","GridCache","onSpecificOptionChange","value","terminalFont","_forEachCell","firstRow","lastRow","callback","row","line","joinedRanges","getJoinedCharacters","isJoined","lastCharX","range","shift","JoinedCellData","translateToString","_isOverlapping","getCodePoint","NULL_CELL_CODE","_drawBackground","ctx","startX","startY","prevFillStyle","nextFillStyle","isInverse","isFgDefault","isFgRGB","AttributeData","toColorRGB","getFgColor","join","isBgRGB","getBgColor","isBgPalette","isTop","forEachDecorationAtCell","d","options","backgroundColorRGB","_drawForeground","beginFrame","hasOwnProperty","overlaps","measureText","$colors","$fg","$bg","$hasFg","$hasBg","$isSelected","_selectionRenderModel","extended","rgba","foregroundColorRGB","isCellSelected","selectionBackgroundOpaque","selectionInactiveBackgroundOpaque","charAtlasCache","deviceCellWidth","deviceCellHeight","deviceCharWidth","deviceCharHeight","devicePixelRatio","newConfig","generateConfig","entry","ownedByIndex","ownedBy","indexOf","configEquals","config","atlas","splice","core","_core","newEntry","TextureAtlas","unicodeService","index","clonedColors","NULL_COLOR","slice","contrastCache","drawBoldTextInBrightColors","minimumContrastRatio","a","b","colorCode","DIM_OPACITY","isLegacyEdge","blockElementDefinitions","patternCharacterDefinitions","boxDrawingDefinitions","xp","yp","powerlineDefinitions","type","rightPadding","leftPadding","c","yOffset","blockElementDefinition","charDefinition","box","xEighth","yEighth","drawBlockElementChar","patternDefinition","patternSet","cachedPatterns","Map","set","Error","pattern","tmpCanvas","tmpCtx","imageData","ImageData","r","g","startsWith","parseInt","substring","split","map","parseFloat","data","putImageData","createPattern","drawPatternChar","boxDrawingDefinition","instructions","Object","entries","actualInstructions","Number","instruction","f","svgToCanvasInstructionMap","console","error","args","translateArgs","drawBoxDrawingChar","powerlineDefinition","clipRegion","Path2D","cssLineWidth","fill","drawPowerlineChar","clamp","cellWidth","cellHeight","doClamp","element","parentWindow","observer","ResizeObserver","find","target","disconnect","devicePixelContentBoxSize","inlineSize","blockSize","observe","isPowerlineGlyph","codepoint","isBoxOrBlockGlyph","SelectionRenderModel","hasSelection","active","viewportY","NULL_RASTERIZED_GLYPH","texturePositionClipSpace","sizeClipSpace","$glyph","_document","_config","_unicodeService","_didWarmUp","_cacheMap","FourKeyMap","_cacheMapCombined","_pages","_activePages","_workBoundingBox","bottom","right","_workAttributeData","_textureSize","_onRemoveTextureAtlasCanvas","onRemoveTextureAtlasCanvas","_requestClearModel","_createNewPage","_tmpCanvas","createCanvas","TMP_CANVAS_GLYPH_PADDING","_tmpCtx","willReadFrequently","page","_doWarmUp","queue","IdleTaskQueue","enqueue","DEFAULT_COLOR","DEFAULT_EXT","rasterizedGlyph","_drawToCache","currentRow","maxAtlasPages","queueMicrotask","pagesBySize","filter","maxTextureSize","sort","percentageUsed","sameSizeI","mergingPages","sortedMergingPagesIndexes","glyphs","mergedPageIndex","mergedPage","_mergePages","_deletePage","newPage","AtlasPage","mergedSize","p","pageIndex","j","adjustingPage","_getFromCacheMap","code","cacheMap","key","_getColorFromAnsiIndex","idx","_getBackgroundColor","bgColorMode","bgColor","inverse","arr","toColor","_getForegroundColor","fgColorMode","fgColor","bold","excludeFromContrastRatioDemands","minimumContrastColor","_getMinimumContrastColor","color","opaque","multiplyOpacity","_resolveBackgroundRgba","_resolveForegroundRgba","adjustedColor","getColor","bgRgba","fgRgba","ensureContrastRatio","setColor","codeOrChars","String","fromCharCode","allowedWidth","allowedHeight","isInvisible","isDim","italic","underline","isUnderline","strikethrough","isStrikethrough","overline","isOverline","getFgColorMode","getBgColorMode","temp","temp2","backgroundColor","globalCompositeOperation","fontStyle","powerlineGlyph","charCodeAt","restrictedPowerlineGlyph","isRestrictedPowerlineGlyph","foregroundColor","padding","customGlyph","chWidth","enableClearThresholdCheck","wcwidth","getStringCellWidth","isUnderlineColorDefault","isUnderlineColorRGB","getUnderlineColor","yTop","yBot","xChLeft","xChRight","xChMid","underlineStyle","yCurlyBot","yCurlyTop","metrics","actualBoundingBoxDescent","strokeText","isBeyondCellBounds","clearColor","getImageData","isEmpty","checkCompletelyTransparent","_findGlyphBoundingBox","activePage","activeRow","fixedRows","wasNewPageCreated","candidatePage","addGlyph","boundingBox","restrictedGlyph","found","alphaOffset","sourcePages","_usedPixels","_glyphs","enableThresholdCheck","fgR","fgG","fgB","threshold","abs","firstCell","combinedData","_width","isCombined","setFromCharData","getAsCharData","CharacterJoinerService","_characterJoiners","_nextCharacterJoinerId","handler","joiner","deregister","joinerId","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","getFg","rangeAttrBG","getBg","getTrimmedLength","_getJoinedRanges","WHITESPACE_CELL_CHAR","startIndex","endIndex","lineData","text","allJoinedRanges","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","static","newRange","inRange","IBufferService","$r","$g","$b","$a","channels","rgb","toPaddedHex","s","contrastRatio","l1","l2","toCss","toRgba","opacity","toChannels","blend","bgR","bgG","bgB","isOpaque","ratio","rgbaColor","factor","$ctx","$litmusColor","isNode","createLinearGradient","match","repeat","rgbaMatch","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","cr","increaseLuminance","bgL","fgL","resultA","resultARatio","resultB","_listeners","_disposed","_event","listener","arg1","arg2","call","from","to","disposeArray","disposables","_disposables","_isDisposed","unregister","array","TwoKeyMap","_data","first","second","third","fourth","navigator","userAgent","platform","includes","test","majorVersion","isMac","isIpad","isIphone","isWindows","isLinux","isChromeOS","TaskQueue","_tasks","_i","task","_start","flush","_idleCallback","_cancelCallback","_requestCallback","_process","deadline","taskDuration","longestTask","lastDeadlineRemaining","timeRemaining","deadlineRemaining","warn","PriorityTaskQueue","_createDeadline","identifier","duration","requestIdleCallback","cancelIdleCallback","_queue","ExtendedAttrs","clone","newObj","hasExtendedAttrs","isBlink","isProtected","isFgPalette","isBgDefault","isAttributeDefault","updateExtended","underlineColor","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","urlId","_ext","_urlId","obj","stringFromCodePoint","CHAR_DATA_ATTR_INDEX","combined","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","DEFAULT_ATTR","CHAR_DATA_CODE_INDEX","NULL_CELL_CHAR","NULL_CELL_WIDTH","WHITESPACE_CELL_WIDTH","codePoint","_interim","decode","input","startPos","interim","Uint8Array","byte1","byte2","byte3","byte4","discardInterim","cp","tmp","pos","missing","fourStop","storeServiceDependency","serviceRegistry","ctor","has","decorator","arguments","LogLevelEnum","createDecorator","ICoreMouseService","ICoreService","ICharsetService","IInstantiationService","ILogService","IOptionsService","IOscLinkService","IUnicodeService","IDecorationService","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","CanvasAddon","_renderer","activate","onWillOpen","screenElement","linkifier","unsafeCore","renderService","_renderService","charSizeService","setRenderer","_createRenderer"],"sourceRoot":""}