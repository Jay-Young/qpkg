{"version":3,"sources":["out-vscode-reh-web/bootstrap-node.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n//@ts-check\n'use strict';\n\n// Setup current working directory in all our node & electron processes\n// - Windows: call `process.chdir()` to always set application folder as cwd\n// -  all OS: store the `process.cwd()` inside `VSCODE_CWD` for consistent lookups\nfunction setupCurrentWorkingDirectory() {\n\tconst path = require('path');\n\n\ttry {\n\n\t\t// Store the `process.cwd()` inside `VSCODE_CWD`\n\t\t// for consistent lookups, but make sure to only\n\t\t// do this once unless defined already from e.g.\n\t\t// a parent process.\n\t\tif (typeof process.env['VSCODE_CWD'] !== 'string') {\n\t\t\tprocess.env['VSCODE_CWD'] = process.cwd();\n\t\t}\n\n\t\t// Windows: always set application folder as current working dir\n\t\tif (process.platform === 'win32') {\n\t\t\tprocess.chdir(path.dirname(process.execPath));\n\t\t}\n\t} catch (err) {\n\t\tconsole.error(err);\n\t}\n}\n\nsetupCurrentWorkingDirectory();\n\n/**\n * Add support for redirecting the loading of node modules\n *\n * @param {string} injectPath\n */\nexports.injectNodeModuleLookupPath = function (injectPath) {\n\tif (!injectPath) {\n\t\tthrow new Error('Missing injectPath');\n\t}\n\n\tconst Module = require('module');\n\tconst path = require('path');\n\n\tconst nodeModulesPath = path.join(__dirname, '../node_modules');\n\n\t// @ts-ignore\n\tconst originalResolveLookupPaths = Module._resolveLookupPaths;\n\n\t// @ts-ignore\n\tModule._resolveLookupPaths = function (moduleName, parent) {\n\t\tconst paths = originalResolveLookupPaths(moduleName, parent);\n\t\tif (Array.isArray(paths)) {\n\t\t\tfor (let i = 0, len = paths.length; i < len; i++) {\n\t\t\t\tif (paths[i] === nodeModulesPath) {\n\t\t\t\t\tpaths.splice(i, 0, injectPath);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn paths;\n\t};\n};\n\nexports.removeGlobalNodeModuleLookupPaths = function () {\n\tconst Module = require('module');\n\t// @ts-ignore\n\tconst globalPaths = Module.globalPaths;\n\n\t// @ts-ignore\n\tconst originalResolveLookupPaths = Module._resolveLookupPaths;\n\n\t// @ts-ignore\n\tModule._resolveLookupPaths = function (moduleName, parent) {\n\t\tconst paths = originalResolveLookupPaths(moduleName, parent);\n\t\tif (Array.isArray(paths)) {\n\t\t\tlet commonSuffixLength = 0;\n\t\t\twhile (commonSuffixLength < paths.length && paths[paths.length - 1 - commonSuffixLength] === globalPaths[globalPaths.length - 1 - commonSuffixLength]) {\n\t\t\t\tcommonSuffixLength++;\n\t\t\t}\n\t\t\treturn paths.slice(0, paths.length - commonSuffixLength);\n\t\t}\n\t\treturn paths;\n\t};\n};\n\n/**\n * Helper to enable portable mode.\n *\n * @param {Partial<import('./vs/base/common/product').IProductConfiguration>} product\n * @returns {{ portableDataPath: string; isPortable: boolean; }}\n */\nexports.configurePortable = function (product) {\n\tconst fs = require('fs');\n\tconst path = require('path');\n\n\tconst appRoot = path.dirname(__dirname);\n\n\t/**\n\t * @param {import('path')} path\n\t */\n\tfunction getApplicationPath(path) {\n\t\tif (process.env['VSCODE_DEV']) {\n\t\t\treturn appRoot;\n\t\t}\n\n\t\tif (process.platform === 'darwin') {\n\t\t\treturn path.dirname(path.dirname(path.dirname(appRoot)));\n\t\t}\n\n\t\treturn path.dirname(path.dirname(appRoot));\n\t}\n\n\t/**\n\t * @param {import('path')} path\n\t */\n\tfunction getPortableDataPath(path) {\n\t\tif (process.env['VSCODE_PORTABLE']) {\n\t\t\treturn process.env['VSCODE_PORTABLE'];\n\t\t}\n\n\t\tif (process.platform === 'win32' || process.platform === 'linux') {\n\t\t\treturn path.join(getApplicationPath(path), 'data');\n\t\t}\n\n\t\t// @ts-ignore\n\t\tconst portableDataName = product.portable || `${product.applicationName}-portable-data`;\n\t\treturn path.join(path.dirname(getApplicationPath(path)), portableDataName);\n\t}\n\n\tconst portableDataPath = getPortableDataPath(path);\n\tconst isPortable = !('target' in product) && fs.existsSync(portableDataPath);\n\tconst portableTempPath = path.join(portableDataPath, 'tmp');\n\tconst isTempPortable = isPortable && fs.existsSync(portableTempPath);\n\n\tif (isPortable) {\n\t\tprocess.env['VSCODE_PORTABLE'] = portableDataPath;\n\t} else {\n\t\tdelete process.env['VSCODE_PORTABLE'];\n\t}\n\n\tif (isTempPortable) {\n\t\tif (process.platform === 'win32') {\n\t\t\tprocess.env['TMP'] = portableTempPath;\n\t\t\tprocess.env['TEMP'] = portableTempPath;\n\t\t} else {\n\t\t\tprocess.env['TMPDIR'] = portableTempPath;\n\t\t}\n\t}\n\n\treturn {\n\t\tportableDataPath,\n\t\tisPortable\n\t};\n};\n"],"mappings":"aAWA,SAAS,8BAA+B,CACvC,MAAMA,EAAO,QAAQ,MAAM,EAE3B,GAAI,CAMC,OAAO,QAAQ,IAAI,YAAkB,WACxC,QAAQ,IAAI,WAAgB,QAAQ,IAAI,GAIrC,QAAQ,WAAa,SACxB,QAAQ,MAAMA,EAAK,QAAQ,QAAQ,QAAQ,CAAC,CAE9C,OAASC,EAAP,CACD,QAAQ,MAAMA,CAAG,CAClB,CACD,CAEA,6BAA6B,EAO7B,QAAQ,2BAA6B,SAAUC,EAAY,CAC1D,GAAI,CAACA,EACJ,MAAM,IAAI,MAAM,oBAAoB,EAGrC,MAAMC,EAAS,QAAQ,QAAQ,EAGzBC,EAFO,QAAQ,MAAM,EAEE,KAAK,UAAW,iBAAiB,EAGxDC,EAA6BF,EAAO,oBAG1CA,EAAO,oBAAsB,SAAUG,EAAYC,EAAQ,CAC1D,MAAMC,EAAQH,EAA2BC,EAAYC,CAAM,EAC3D,GAAI,MAAM,QAAQC,CAAK,GACtB,QAAS,EAAI,EAAGC,EAAMD,EAAM,OAAQ,EAAIC,EAAK,IAC5C,GAAID,EAAM,KAAOJ,EAAiB,CACjCI,EAAM,OAAO,EAAG,EAAGN,CAAU,EAC7B,KACD,EAIF,OAAOM,CACR,CACD,EAEA,QAAQ,kCAAoC,UAAY,CACvD,MAAML,EAAS,QAAQ,QAAQ,EAEzBO,EAAcP,EAAO,YAGrBE,EAA6BF,EAAO,oBAG1CA,EAAO,oBAAsB,SAAUG,EAAYC,EAAQ,CAC1D,MAAMC,EAAQH,EAA2BC,EAAYC,CAAM,EAC3D,GAAI,MAAM,QAAQC,CAAK,EAAG,CACzB,IAAIG,EAAqB,EACzB,KAAOA,EAAqBH,EAAM,QAAUA,EAAMA,EAAM,OAAS,EAAIG,KAAwBD,EAAYA,EAAY,OAAS,EAAIC,IACjIA,IAED,OAAOH,EAAM,MAAM,EAAGA,EAAM,OAASG,CAAkB,CACxD,CACA,OAAOH,CACR,CACD,EAQA,QAAQ,kBAAoB,SAAUI,EAAS,CAC9C,MAAMC,EAAK,QAAQ,IAAI,EACjBb,EAAO,QAAQ,MAAM,EAErBc,EAAUd,EAAK,QAAQ,SAAS,EAKtC,SAASe,EAAmBf,EAAM,CACjC,OAAI,QAAQ,IAAI,WACRc,EAGJ,QAAQ,WAAa,SACjBd,EAAK,QAAQA,EAAK,QAAQA,EAAK,QAAQc,CAAO,CAAC,CAAC,EAGjDd,EAAK,QAAQA,EAAK,QAAQc,CAAO,CAAC,CAC1C,CAKA,SAASE,EAAoBhB,EAAM,CAClC,GAAI,QAAQ,IAAI,gBACf,OAAO,QAAQ,IAAI,gBAGpB,GAAI,QAAQ,WAAa,SAAW,QAAQ,WAAa,QACxD,OAAOA,EAAK,KAAKe,EAAmBf,CAAI,EAAG,MAAM,EAIlD,MAAMiB,EAAmBL,EAAQ,UAAY,GAAGA,EAAQ,gCACxD,OAAOZ,EAAK,KAAKA,EAAK,QAAQe,EAAmBf,CAAI,CAAC,EAAGiB,CAAgB,CAC1E,CAEA,MAAMC,EAAmBF,EAAoBhB,CAAI,EAC3CmB,EAAa,EAAE,WAAYP,IAAYC,EAAG,WAAWK,CAAgB,EACrEE,EAAmBpB,EAAK,KAAKkB,EAAkB,KAAK,EACpDG,EAAiBF,GAAcN,EAAG,WAAWO,CAAgB,EAEnE,OAAID,EACH,QAAQ,IAAI,gBAAqBD,EAEjC,OAAO,QAAQ,IAAI,gBAGhBG,IACC,QAAQ,WAAa,SACxB,QAAQ,IAAI,IAASD,EACrB,QAAQ,IAAI,KAAUA,GAEtB,QAAQ,IAAI,OAAYA,GAInB,CACN,iBAAAF,EACA,WAAAC,CACD,CACD","names":["path","err","injectPath","Module","nodeModulesPath","originalResolveLookupPaths","moduleName","parent","paths","len","globalPaths","commonSuffixLength","product","fs","appRoot","getApplicationPath","getPortableDataPath","portableDataName","portableDataPath","isPortable","portableTempPath","isTempPortable"],"file":"bootstrap-node.js"}