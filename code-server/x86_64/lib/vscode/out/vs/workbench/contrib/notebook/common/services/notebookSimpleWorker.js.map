{"version":3,"sources":["out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/fake","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/map.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/mime.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/stream.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/buffer.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/symbols.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/extpath.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/network.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/resources.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/async.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/base/common/glob.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/core/eolCounter.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/core/stringBuilder.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/core/textChange.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/model/pieceTreeTextBuffer/rbTreeBase.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/model/pieceTreeTextBuffer/pieceTreeBase.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBuffer.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBufferBuilder.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/instantiation/common/instantiation.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/platform/contextkey/common/contextkey.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/contrib/notebook/common/notebookCommon.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/workbench/contrib/notebook/common/services/notebookSimpleWorker.ts"],"sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\ninterface ResourceMapKeyFn {\n\t(resource: URI): string;\n}\n\nclass ResourceMapEntry<T> {\n\tconstructor(readonly uri: URI, readonly value: T) { }\n}\n\nexport class ResourceMap<T> implements Map<URI, T> {\n\n\tprivate static readonly defaultToKey = (resource: URI) => resource.toString();\n\n\treadonly [Symbol.toStringTag] = 'ResourceMap';\n\n\tprivate readonly map: Map<string, ResourceMapEntry<T>>;\n\tprivate readonly toKey: ResourceMapKeyFn;\n\n\t/**\n\t *\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(toKey?: ResourceMapKeyFn);\n\n\t/**\n\t *\n\t * @param other Another resource which this maps is created from\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(other?: ResourceMap<T>, toKey?: ResourceMapKeyFn);\n\n\tconstructor(mapOrKeyFn?: ResourceMap<T> | ResourceMapKeyFn, toKey?: ResourceMapKeyFn) {\n\t\tif (mapOrKeyFn instanceof ResourceMap) {\n\t\t\tthis.map = new Map(mapOrKeyFn.map);\n\t\t\tthis.toKey = toKey ?? ResourceMap.defaultToKey;\n\t\t} else {\n\t\t\tthis.map = new Map();\n\t\t\tthis.toKey = mapOrKeyFn ?? ResourceMap.defaultToKey;\n\t\t}\n\t}\n\n\tset(resource: URI, value: T): this {\n\t\tthis.map.set(this.toKey(resource), new ResourceMapEntry(resource, value));\n\t\treturn this;\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource))?.value;\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI, map: Map<URI, T>) => void, thisArg?: any): void {\n\t\tif (typeof thisArg !== 'undefined') {\n\t\t\tclb = clb.bind(thisArg);\n\t\t}\n\t\tfor (const [_, entry] of this.map) {\n\t\t\tclb(entry.value, entry.uri, <any>this);\n\t\t}\n\t}\n\n\t*values(): IterableIterator<T> {\n\t\tfor (const entry of this.map.values()) {\n\t\t\tyield entry.value;\n\t\t}\n\t}\n\n\t*keys(): IterableIterator<URI> {\n\t\tfor (const entry of this.map.values()) {\n\t\t\tyield entry.uri;\n\t\t}\n\t}\n\n\t*entries(): IterableIterator<[URI, T]> {\n\t\tfor (const entry of this.map.values()) {\n\t\t\tyield [entry.uri, entry.value];\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[URI, T]> {\n\t\tfor (const [, entry] of this.map) {\n\t\t\tyield [entry.uri, entry.value];\n\t\t}\n\t}\n}\n\nexport class ResourceSet implements Set<URI> {\n\n\treadonly [Symbol.toStringTag]: string = 'ResourceSet';\n\n\tprivate readonly _map: ResourceMap<URI>;\n\n\tconstructor(toKey?: ResourceMapKeyFn);\n\tconstructor(entries: readonly URI[], toKey?: ResourceMapKeyFn);\n\tconstructor(entriesOrKey?: readonly URI[] | ResourceMapKeyFn, toKey?: ResourceMapKeyFn) {\n\t\tif (!entriesOrKey || typeof entriesOrKey === 'function') {\n\t\t\tthis._map = new ResourceMap(entriesOrKey);\n\t\t} else {\n\t\t\tthis._map = new ResourceMap(toKey);\n\t\t\tentriesOrKey.forEach(this.add, this);\n\t\t}\n\t}\n\n\n\tget size(): number {\n\t\treturn this._map.size;\n\t}\n\n\tadd(value: URI): this {\n\t\tthis._map.set(value, value);\n\t\treturn this;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t}\n\n\tdelete(value: URI): boolean {\n\t\treturn this._map.delete(value);\n\t}\n\n\tforEach(callbackfn: (value: URI, value2: URI, set: Set<URI>) => void, thisArg?: any): void {\n\t\tthis._map.forEach((_value, key) => callbackfn.call(thisArg, key, key, this));\n\t}\n\n\thas(value: URI): boolean {\n\t\treturn this._map.has(value);\n\t}\n\n\tentries(): IterableIterator<[URI, URI]> {\n\t\treturn this._map.entries();\n\t}\n\n\tkeys(): IterableIterator<URI> {\n\t\treturn this._map.keys();\n\t}\n\n\tvalues(): IterableIterator<URI> {\n\t\treturn this._map.keys();\n\t}\n\n\t[Symbol.iterator](): IterableIterator<URI> {\n\t\treturn this.keys();\n\t}\n}\n\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> implements Map<K, V> {\n\n\treadonly [Symbol.toStringTag] = 'LinkedMap';\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tprivate _state: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state++;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): this {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tif (this._state !== state) {\n\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<K> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<V> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<[K, V]> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<[K, V]> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result: IteratorResult<[K, V]> = { value: [current.key, current.value], done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t\tthis._state++;\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t\tthis._state++;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t\tthis._state++;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t\tthis._state++;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t\tthis._state++;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t\tthis._state++;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\toverride get(key: K, touch: Touch = Touch.AsNew): V | undefined {\n\t\treturn super.get(key, touch);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\toverride set(key: K, value: V): this {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t\treturn this;\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { extname } from 'vs/base/common/path';\n\nexport const Mimes = Object.freeze({\n\ttext: 'text/plain',\n\tbinary: 'application/octet-stream',\n\tunknown: 'application/unknown',\n\tmarkdown: 'text/markdown',\n\tlatex: 'text/latex',\n\turiList: 'text/uri-list',\n});\n\ninterface MapExtToMediaMimes {\n\t[index: string]: string;\n}\n\nconst mapExtToTextMimes: MapExtToMediaMimes = {\n\t'.css': 'text/css',\n\t'.csv': 'text/csv',\n\t'.htm': 'text/html',\n\t'.html': 'text/html',\n\t'.ics': 'text/calendar',\n\t'.js': 'text/javascript',\n\t'.mjs': 'text/javascript',\n\t'.txt': 'text/plain',\n\t'.xml': 'text/xml'\n};\n\n// Known media mimes that we can handle\nconst mapExtToMediaMimes: MapExtToMediaMimes = {\n\t'.aac': 'audio/x-aac',\n\t'.avi': 'video/x-msvideo',\n\t'.bmp': 'image/bmp',\n\t'.flv': 'video/x-flv',\n\t'.gif': 'image/gif',\n\t'.ico': 'image/x-icon',\n\t'.jpe': 'image/jpg',\n\t'.jpeg': 'image/jpg',\n\t'.jpg': 'image/jpg',\n\t'.m1v': 'video/mpeg',\n\t'.m2a': 'audio/mpeg',\n\t'.m2v': 'video/mpeg',\n\t'.m3a': 'audio/mpeg',\n\t'.mid': 'audio/midi',\n\t'.midi': 'audio/midi',\n\t'.mk3d': 'video/x-matroska',\n\t'.mks': 'video/x-matroska',\n\t'.mkv': 'video/x-matroska',\n\t'.mov': 'video/quicktime',\n\t'.movie': 'video/x-sgi-movie',\n\t'.mp2': 'audio/mpeg',\n\t'.mp2a': 'audio/mpeg',\n\t'.mp3': 'audio/mpeg',\n\t'.mp4': 'video/mp4',\n\t'.mp4a': 'audio/mp4',\n\t'.mp4v': 'video/mp4',\n\t'.mpe': 'video/mpeg',\n\t'.mpeg': 'video/mpeg',\n\t'.mpg': 'video/mpeg',\n\t'.mpg4': 'video/mp4',\n\t'.mpga': 'audio/mpeg',\n\t'.oga': 'audio/ogg',\n\t'.ogg': 'audio/ogg',\n\t'.opus': 'audio/opus',\n\t'.ogv': 'video/ogg',\n\t'.png': 'image/png',\n\t'.psd': 'image/vnd.adobe.photoshop',\n\t'.qt': 'video/quicktime',\n\t'.spx': 'audio/ogg',\n\t'.svg': 'image/svg+xml',\n\t'.tga': 'image/x-tga',\n\t'.tif': 'image/tiff',\n\t'.tiff': 'image/tiff',\n\t'.wav': 'audio/x-wav',\n\t'.webm': 'video/webm',\n\t'.webp': 'image/webp',\n\t'.wma': 'audio/x-ms-wma',\n\t'.wmv': 'video/x-ms-wmv',\n\t'.woff': 'application/font-woff',\n};\n\nexport function getMediaOrTextMime(path: string): string | undefined {\n\tconst ext = extname(path);\n\tconst textMime = mapExtToTextMimes[ext.toLowerCase()];\n\tif (textMime !== undefined) {\n\t\treturn textMime;\n\t} else {\n\t\treturn getMediaMime(path);\n\t}\n}\n\nexport function getMediaMime(path: string): string | undefined {\n\tconst ext = extname(path);\n\treturn mapExtToMediaMimes[ext.toLowerCase()];\n}\n\nexport function getExtensionForMimeType(mimeType: string): string | undefined {\n\tfor (const extension in mapExtToMediaMimes) {\n\t\tif (mapExtToMediaMimes[extension] === mimeType) {\n\t\t\treturn extension;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nconst _simplePattern = /^(.+)\\/(.+?)(;.+)?$/;\n\nexport function normalizeMimeType(mimeType: string): string;\nexport function normalizeMimeType(mimeType: string, strict: true): string | undefined;\nexport function normalizeMimeType(mimeType: string, strict?: true): string | undefined {\n\n\tconst match = _simplePattern.exec(mimeType);\n\tif (!match) {\n\t\treturn strict\n\t\t\t? undefined\n\t\t\t: mimeType;\n\t}\n\t// https://datatracker.ietf.org/doc/html/rfc2045#section-5.1\n\t// media and subtype must ALWAYS be lowercase, parameter not\n\treturn `${match[1].toLowerCase()}/${match[2].toLowerCase()}${match[3] ?? ''}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\n\n/**\n * The payload that flows in readable stream events.\n */\nexport type ReadableStreamEventPayload<T> = T | Error | 'end';\n\nexport interface ReadableStreamEvents<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t *\n\t * NOTE: PLEASE UNDERSTAND THAT ADDING A DATA LISTENER CAN\n\t * TURN THE STREAM INTO FLOWING MODE. IT IS THEREFOR THE\n\t * LAST LISTENER THAT SHOULD BE ADDED AND NOT THE FIRST\n\t *\n\t * Use `listenStream` as a helper method to listen to\n\t * stream events in the right order.\n\t */\n\ton(event: 'data', callback: (data: T) => void): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\ton(event: 'error', callback: (err: Error) => void): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\ton(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in native and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n\t/**\n\t * Stops emitting any events until resume() is called.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Starts emitting events again after pause() was called.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Destroys the stream and stops emitting any event.\n\t */\n\tdestroy(): void;\n\n\t/**\n\t * Allows to remove a listener that was previously added.\n\t */\n\tremoveListener(event: string, callback: Function): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in native and web environments.\n */\nexport interface Readable<T> {\n\n\t/**\n\t * Read data from the underlying source. Will return\n\t * null to indicate that no more data can be read.\n\t */\n\tread(): T | null;\n}\n\nexport function isReadable<T>(obj: unknown): obj is Readable<T> {\n\tconst candidate = obj as Readable<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn typeof candidate.read === 'function';\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in native and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n\t/**\n\t * Writing data to the stream will trigger the on('data')\n\t * event listener if the stream is flowing and buffer the\n\t * data otherwise until the stream is flowing.\n\t *\n\t * If a `highWaterMark` is configured and writing to the\n\t * stream reaches this mark, a promise will be returned\n\t * that should be awaited on before writing more data.\n\t * Otherwise there is a risk of buffering a large number\n\t * of data chunks without consumer.\n\t */\n\twrite(data: T): void | Promise<void>;\n\n\t/**\n\t * Signals an error to the consumer of the stream via the\n\t * on('error') handler if the stream is flowing.\n\t *\n\t * NOTE: call `end` to signal that the stream has ended,\n\t * this DOES NOT happen automatically from `error`.\n\t */\n\terror(error: Error): void;\n\n\t/**\n\t * Signals the end of the stream to the consumer. If the\n\t * result is provided, will trigger the on('data') event\n\t * listener if the stream is flowing and buffer the data\n\t * otherwise until the stream is flowing.\n\t */\n\tend(result?: T): void;\n}\n\n/**\n * A stream that has a buffer already read. Returns the original stream\n * that was read as well as the chunks that got read.\n *\n * The `ended` flag indicates if the stream has been fully consumed.\n */\nexport interface ReadableBufferedStream<T> {\n\n\t/**\n\t * The original stream that is being read.\n\t */\n\tstream: ReadableStream<T>;\n\n\t/**\n\t * An array of chunks already read from this stream.\n\t */\n\tbuffer: T[];\n\n\t/**\n\t * Signals if the stream has ended or not. If not, consumers\n\t * should continue to read from the stream until consumed.\n\t */\n\tended: boolean;\n}\n\nexport function isReadableStream<T>(obj: unknown): obj is ReadableStream<T> {\n\tconst candidate = obj as ReadableStream<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport function isReadableBufferedStream<T>(obj: unknown): obj is ReadableBufferedStream<T> {\n\tconst candidate = obj as ReadableBufferedStream<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn isReadableStream(candidate.stream) && Array.isArray(candidate.buffer) && typeof candidate.ended === 'boolean';\n}\n\nexport interface IReducer<T, R = T> {\n\t(data: T[]): R;\n}\n\nexport interface IDataTransformer<Original, Transformed> {\n\t(data: Original): Transformed;\n}\n\nexport interface IErrorTransformer {\n\t(error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n\tdata: IDataTransformer<Original, Transformed>;\n\terror?: IErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: IReducer<T>, options?: WriteableStreamOptions): WriteableStream<T> {\n\treturn new WriteableStreamImpl<T>(reducer, options);\n}\n\nexport interface WriteableStreamOptions {\n\n\t/**\n\t * The number of objects to buffer before WriteableStream#write()\n\t * signals back that the buffer is full. Can be used to reduce\n\t * the memory pressure when the stream is not flowing.\n\t */\n\thighWaterMark?: number;\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n\tprivate readonly state = {\n\t\tflowing: false,\n\t\tended: false,\n\t\tdestroyed: false\n\t};\n\n\tprivate readonly buffer = {\n\t\tdata: [] as T[],\n\t\terror: [] as Error[]\n\t};\n\n\tprivate readonly listeners = {\n\t\tdata: [] as { (data: T): void }[],\n\t\terror: [] as { (error: Error): void }[],\n\t\tend: [] as { (): void }[]\n\t};\n\n\tprivate readonly pendingWritePromises: Function[] = [];\n\n\tconstructor(private reducer: IReducer<T>, private options?: WriteableStreamOptions) { }\n\n\tpause(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.flowing = false;\n\t}\n\n\tresume(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.flowing) {\n\t\t\tthis.state.flowing = true;\n\n\t\t\t// emit buffered events\n\t\t\tthis.flowData();\n\t\t\tthis.flowErrors();\n\t\t\tthis.flowEnd();\n\t\t}\n\t}\n\n\twrite(data: T): void | Promise<void> {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the data to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitData(data);\n\t\t}\n\n\t\t// not yet flowing: buffer data until flowing\n\t\telse {\n\t\t\tthis.buffer.data.push(data);\n\n\t\t\t// highWaterMark: if configured, signal back when buffer reached limits\n\t\t\tif (typeof this.options?.highWaterMark === 'number' && this.buffer.data.length > this.options.highWaterMark) {\n\t\t\t\treturn new Promise(resolve => this.pendingWritePromises.push(resolve));\n\t\t\t}\n\t\t}\n\t}\n\n\terror(error: Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the error to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitError(error);\n\t\t}\n\n\t\t// not yet flowing: buffer errors until flowing\n\t\telse {\n\t\t\tthis.buffer.error.push(error);\n\t\t}\n\t}\n\n\tend(result?: T): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// end with data if provided\n\t\tif (typeof result !== 'undefined') {\n\t\t\tthis.write(result);\n\t\t}\n\n\t\t// flowing: send end event to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitEnd();\n\n\t\t\tthis.destroy();\n\t\t}\n\n\t\t// not yet flowing: remember state\n\t\telse {\n\t\t\tthis.state.ended = true;\n\t\t}\n\t}\n\n\tprivate emitData(data: T): void {\n\t\tthis.listeners.data.slice(0).forEach(listener => listener(data)); // slice to avoid listener mutation from delivering event\n\t}\n\n\tprivate emitError(error: Error): void {\n\t\tif (this.listeners.error.length === 0) {\n\t\t\tonUnexpectedError(error); // nobody listened to this error so we log it as unexpected\n\t\t} else {\n\t\t\tthis.listeners.error.slice(0).forEach(listener => listener(error)); // slice to avoid listener mutation from delivering event\n\t\t}\n\t}\n\n\tprivate emitEnd(): void {\n\t\tthis.listeners.end.slice(0).forEach(listener => listener()); // slice to avoid listener mutation from delivering event\n\t}\n\n\ton(event: 'data', callback: (data: T) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tthis.listeners.data.push(callback);\n\n\t\t\t\t// switch into flowing mode as soon as the first 'data'\n\t\t\t\t// listener is added and we are not yet in flowing mode\n\t\t\t\tthis.resume();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tthis.listeners.end.push(callback);\n\n\t\t\t\t// emit 'end' event directly if we are flowing\n\t\t\t\t// and the end has already been reached\n\t\t\t\t//\n\t\t\t\t// finish() when it went through\n\t\t\t\tif (this.state.flowing && this.flowEnd()) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tthis.listeners.error.push(callback);\n\n\t\t\t\t// emit buffered 'error' events unless done already\n\t\t\t\t// now that we know that we have at least one listener\n\t\t\t\tif (this.state.flowing) {\n\t\t\t\t\tthis.flowErrors();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tremoveListener(event: string, callback: Function): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet listeners: unknown[] | undefined = undefined;\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tlisteners = this.listeners.data;\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tlisteners = this.listeners.end;\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tlisteners = this.listeners.error;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (listeners) {\n\t\t\tconst index = listeners.indexOf(callback);\n\t\t\tif (index >= 0) {\n\t\t\t\tlisteners.splice(index, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate flowData(): void {\n\t\tif (this.buffer.data.length > 0) {\n\t\t\tconst fullDataBuffer = this.reducer(this.buffer.data);\n\n\t\t\tthis.emitData(fullDataBuffer);\n\n\t\t\tthis.buffer.data.length = 0;\n\n\t\t\t// When the buffer is empty, resolve all pending writers\n\t\t\tconst pendingWritePromises = [...this.pendingWritePromises];\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t\tpendingWritePromises.forEach(pendingWritePromise => pendingWritePromise());\n\t\t}\n\t}\n\n\tprivate flowErrors(): void {\n\t\tif (this.listeners.error.length > 0) {\n\t\t\tfor (const error of this.buffer.error) {\n\t\t\t\tthis.emitError(error);\n\t\t\t}\n\n\t\t\tthis.buffer.error.length = 0;\n\t\t}\n\t}\n\n\tprivate flowEnd(): boolean {\n\t\tif (this.state.ended) {\n\t\t\tthis.emitEnd();\n\n\t\t\treturn this.listeners.end.length > 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy(): void {\n\t\tif (!this.state.destroyed) {\n\t\t\tthis.state.destroyed = true;\n\t\t\tthis.state.ended = true;\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t\tthis.buffer.error.length = 0;\n\n\t\t\tthis.listeners.data.length = 0;\n\t\t\tthis.listeners.error.length = 0;\n\t\t\tthis.listeners.end.length = 0;\n\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t}\n\t}\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: IReducer<T>): T {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null;\n\twhile ((chunk = readable.read()) !== null) {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function peekReadable<T>(readable: Readable<T>, reducer: IReducer<T>, maxChunks: number): T | Readable<T> {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null | undefined = undefined;\n\twhile ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n\t\tchunks.push(chunk);\n\t}\n\n\t// If the last chunk is null, it means we reached the end of\n\t// the readable and return all the data at once\n\tif (chunk === null && chunks.length > 0) {\n\t\treturn reducer(chunks);\n\t}\n\n\t// Otherwise, we still have a chunk, it means we reached the maxChunks\n\t// value and as such we return a new Readable that first returns\n\t// the existing read chunks and then continues with reading from\n\t// the underlying readable.\n\treturn {\n\t\tread: () => {\n\n\t\t\t// First consume chunks from our array\n\t\t\tif (chunks.length > 0) {\n\t\t\t\treturn chunks.shift()!;\n\t\t\t}\n\n\t\t\t// Then ensure to return our last read chunk\n\t\t\tif (typeof chunk !== 'undefined') {\n\t\t\t\tconst lastReadChunk = chunk;\n\n\t\t\t\t// explicitly use undefined here to indicate that we consumed\n\t\t\t\t// the chunk, which could have either been null or valued.\n\t\t\t\tchunk = undefined;\n\n\t\t\t\treturn lastReadChunk;\n\t\t\t}\n\n\t\t\t// Finally delegate back to the Readable\n\t\t\treturn readable.read();\n\t\t}\n\t};\n}\n\n/**\n * Helper to fully read a T stream into a T or consuming\n * a stream fully, awaiting all the events without caring\n * about the data.\n */\nexport function consumeStream<T, R = T>(stream: ReadableStreamEvents<T>, reducer: IReducer<T, R>): Promise<R>;\nexport function consumeStream(stream: ReadableStreamEvents<unknown>): Promise<undefined>;\nexport function consumeStream<T, R = T>(stream: ReadableStreamEvents<T>, reducer?: IReducer<T, R>): Promise<R | undefined> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tlistenStream(stream, {\n\t\t\tonData: chunk => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\tchunks.push(chunk);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError: error => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonEnd: () => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\tresolve(reducer(chunks));\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport interface IStreamListener<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t */\n\tonData(data: T): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\tonError(err: Error): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\tonEnd(): void;\n}\n\n/**\n * Helper to listen to all events of a T stream in proper order.\n */\nexport function listenStream<T>(stream: ReadableStreamEvents<T>, listener: IStreamListener<T>): IDisposable {\n\tlet destroyed = false;\n\n\tstream.on('error', error => {\n\t\tif (!destroyed) {\n\t\t\tlistener.onError(error);\n\t\t}\n\t});\n\n\tstream.on('end', () => {\n\t\tif (!destroyed) {\n\t\t\tlistener.onEnd();\n\t\t}\n\t});\n\n\t// Adding the `data` listener will turn the stream\n\t// into flowing mode. As such it is important to\n\t// add this listener last (DO NOT CHANGE!)\n\tstream.on('data', data => {\n\t\tif (!destroyed) {\n\t\t\tlistener.onData(data);\n\t\t}\n\t});\n\n\treturn toDisposable(() => destroyed = true);\n}\n\n/**\n * Helper to peek up to `maxChunks` into a stream. The return type signals if\n * the stream has ended or not. If not, caller needs to add a `data` listener\n * to continue reading.\n */\nexport function peekStream<T>(stream: ReadableStream<T>, maxChunks: number): Promise<ReadableBufferedStream<T>> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst streamListeners = new DisposableStore();\n\t\tconst buffer: T[] = [];\n\n\t\t// Data Listener\n\t\tconst dataListener = (chunk: T) => {\n\n\t\t\t// Add to buffer\n\t\t\tbuffer.push(chunk);\n\n\t\t\t// We reached maxChunks and thus need to return\n\t\t\tif (buffer.length > maxChunks) {\n\n\t\t\t\t// Dispose any listeners and ensure to pause the\n\t\t\t\t// stream so that it can be consumed again by caller\n\t\t\t\tstreamListeners.dispose();\n\t\t\t\tstream.pause();\n\n\t\t\t\treturn resolve({ stream, buffer, ended: false });\n\t\t\t}\n\t\t};\n\n\t\t// Error Listener\n\t\tconst errorListener = (error: Error) => {\n\t\t\treturn reject(error);\n\t\t};\n\n\t\t// End Listener\n\t\tconst endListener = () => {\n\t\t\treturn resolve({ stream, buffer, ended: true });\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('error', errorListener)));\n\t\tstream.on('error', errorListener);\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('end', endListener)));\n\t\tstream.on('end', endListener);\n\n\t\t// Important: leave the `data` listener last because\n\t\t// this can turn the stream into flowing mode and we\n\t\t// want `error` events to be received as well.\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('data', dataListener)));\n\t\tstream.on('data', dataListener);\n\t});\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: IReducer<T>): ReadableStream<T> {\n\tconst stream = newWriteableStream<T>(reducer);\n\n\tstream.end(t);\n\n\treturn stream;\n}\n\n/**\n * Helper to create an empty stream\n */\nexport function emptyStream(): ReadableStream<never> {\n\tconst stream = newWriteableStream<never>(() => { throw new Error('not supported'); });\n\tstream.end();\n\n\treturn stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n\tlet consumed = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tif (consumed) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsumed = true;\n\n\t\t\treturn t;\n\t\t}\n\t};\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: IReducer<Transformed>): ReadableStream<Transformed> {\n\tconst target = newWriteableStream<Transformed>(reducer);\n\n\tlistenStream(stream, {\n\t\tonData: data => target.write(transformer.data(data)),\n\t\tonError: error => target.error(transformer.error ? transformer.error(error) : error),\n\t\tonEnd: () => target.end()\n\t});\n\n\treturn target;\n}\n\n/**\n * Helper to take an existing readable that will\n * have a prefix injected to the beginning.\n */\nexport function prefixedReadable<T>(prefix: T, readable: Readable<T>, reducer: IReducer<T>): Readable<T> {\n\tlet prefixHandled = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tconst chunk = readable.read();\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\t// If we have also a read-result, make\n\t\t\t\t// sure to reduce it to a single result\n\t\t\t\tif (chunk !== null) {\n\t\t\t\t\treturn reducer([prefix, chunk]);\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, just return prefix directly\n\t\t\t\treturn prefix;\n\t\t\t}\n\n\t\t\treturn chunk;\n\t\t}\n\t};\n}\n\n/**\n * Helper to take an existing stream that will\n * have a prefix injected to the beginning.\n */\nexport function prefixedStream<T>(prefix: T, stream: ReadableStream<T>, reducer: IReducer<T>): ReadableStream<T> {\n\tlet prefixHandled = false;\n\n\tconst target = newWriteableStream<T>(reducer);\n\n\tlistenStream(stream, {\n\t\tonData: data => {\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\treturn target.write(reducer([prefix, data]));\n\t\t\t}\n\n\t\t\treturn target.write(data);\n\t\t},\n\t\tonError: error => target.error(error),\n\t\tonEnd: () => {\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\ttarget.write(prefix);\n\t\t\t}\n\n\t\t\ttarget.end();\n\t\t}\n\t});\n\n\treturn target;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as streams from 'vs/base/common/stream';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\t/**\n\t * When running in a nodejs context, if `actual` is not a nodejs Buffer, the backing store for\n\t * the returned `VSBuffer` instance might use a nodejs Buffer allocated from node's Buffer pool,\n\t * which is not transferrable.\n\t */\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic fromString(source: string, options?: { dontUseNodeBuffer?: boolean }): VSBuffer {\n\t\tconst dontUseNodeBuffer = options?.dontUseNodeBuffer || false;\n\t\tif (!dontUseNodeBuffer && hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t}\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic fromByteArray(source: number[]): VSBuffer {\n\t\tconst result = VSBuffer.alloc(source.length);\n\t\tfor (let i = 0, len = source.length; i < len; i++) {\n\t\t\tresult.buffer[i] = source[i];\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tclone(): VSBuffer {\n\t\tconst result = VSBuffer.alloc(this.byteLength);\n\t\tresult.set(this);\n\t\treturn result;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performance, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void;\n\tset(array: Uint8Array, offset?: number): void;\n\tset(array: ArrayBuffer, offset?: number): void;\n\tset(array: ArrayBufferView, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView, offset?: number): void {\n\t\tif (array instanceof VSBuffer) {\n\t\t\tthis.buffer.set(array.buffer, offset);\n\t\t} else if (array instanceof Uint8Array) {\n\t\t\tthis.buffer.set(array, offset);\n\t\t} else if (array instanceof ArrayBuffer) {\n\t\t\tthis.buffer.set(new Uint8Array(array), offset);\n\t\t} else if (ArrayBuffer.isView(array)) {\n\t\t\tthis.buffer.set(new Uint8Array(array.buffer, array.byteOffset, array.byteLength), offset);\n\t\t} else {\n\t\t\tthrow new Error(`Unknown argument 'array'`);\n\t\t}\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt32LE(offset: number): number {\n\t\treturn readUInt32LE(this.buffer, offset);\n\t}\n\n\twriteUInt32LE(value: number, offset: number): void {\n\t\twriteUInt32LE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n}\n\nexport function readUInt16LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0)\n\t);\n}\n\nexport function writeUInt16LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nexport function readUInt32LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0) |\n\t\t((source[offset + 2] << 16) >>> 0) |\n\t\t((source[offset + 3] << 24) >>> 0)\n\t);\n}\n\nexport function writeUInt32LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 3] = (value & 0b11111111);\n}\n\nexport function readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nexport function writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport interface VSBufferReadableBufferedStream extends streams.ReadableBufferedStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport async function bufferedStreamToBuffer(bufferedStream: streams.ReadableBufferedStream<VSBuffer>): Promise<VSBuffer> {\n\tif (bufferedStream.ended) {\n\t\treturn VSBuffer.concat(bufferedStream.buffer);\n\t}\n\n\treturn VSBuffer.concat([\n\n\t\t// Include already read chunks...\n\t\t...bufferedStream.buffer,\n\n\t\t// ...and all additional chunks\n\t\tawait streamToBuffer(bufferedStream.stream)\n\t]);\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(options?: streams.WriteableStreamOptions): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks), options);\n}\n\nexport function prefixedBufferReadable(prefix: VSBuffer, readable: VSBufferReadable): VSBufferReadable {\n\treturn streams.prefixedReadable(prefix, readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function prefixedBufferStream(prefix: VSBuffer, stream: VSBufferReadableStream): VSBufferReadableStream {\n\treturn streams.prefixedStream(prefix, stream, chunks => VSBuffer.concat(chunks));\n}\n\n/** Decodes base64 to a uint8 array. URL-encoded and unpadded base64 is allowed. */\nexport function decodeBase64(encoded: string) {\n\tlet building = 0;\n\tlet remainder = 0;\n\tlet bufi = 0;\n\n\t// The simpler way to do this is `Uint8Array.from(atob(str), c => c.charCodeAt(0))`,\n\t// but that's about 10-20x slower than this function in current Chromium versions.\n\n\tconst buffer = new Uint8Array(Math.floor(encoded.length / 4 * 3));\n\tconst append = (value: number) => {\n\t\tswitch (remainder) {\n\t\t\tcase 3:\n\t\t\t\tbuffer[bufi++] = building | value;\n\t\t\t\tremainder = 0;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tbuffer[bufi++] = building | (value >>> 2);\n\t\t\t\tbuilding = value << 6;\n\t\t\t\tremainder = 3;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tbuffer[bufi++] = building | (value >>> 4);\n\t\t\t\tbuilding = value << 4;\n\t\t\t\tremainder = 2;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbuilding = value << 2;\n\t\t\t\tremainder = 1;\n\t\t}\n\t};\n\n\tfor (let i = 0; i < encoded.length; i++) {\n\t\tconst code = encoded.charCodeAt(i);\n\t\t// See https://datatracker.ietf.org/doc/html/rfc4648#section-4\n\t\t// This branchy code is about 3x faster than an indexOf on a base64 char string.\n\t\tif (code >= 65 && code <= 90) {\n\t\t\tappend(code - 65); // A-Z starts ranges from char code 65 to 90\n\t\t} else if (code >= 97 && code <= 122) {\n\t\t\tappend(code - 97 + 26); // a-z starts ranges from char code 97 to 122, starting at byte 26\n\t\t} else if (code >= 48 && code <= 57) {\n\t\t\tappend(code - 48 + 52); // 0-9 starts ranges from char code 48 to 58, starting at byte 52\n\t\t} else if (code === 43 || code === 45) {\n\t\t\tappend(62); // \"+\" or \"-\" for URLS\n\t\t} else if (code === 47 || code === 95) {\n\t\t\tappend(63); // \"/\" or \"_\" for URLS\n\t\t} else if (code === 61) {\n\t\t\tbreak; // \"=\"\n\t\t} else {\n\t\t\tthrow new SyntaxError(`Unexpected base64 character ${encoded[i]}`);\n\t\t}\n\t}\n\n\tconst unpadded = bufi;\n\twhile (remainder > 0) {\n\t\tappend(0);\n\t}\n\n\t// slice is needed to account for overestimation due to padding\n\treturn VSBuffer.wrap(buffer).slice(0, unpadded);\n}\n\nconst base64Alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst base64UrlSafeAlphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_';\n\n/** Encodes a buffer to a base64 string. */\nexport function encodeBase64({ buffer }: VSBuffer, padded = true, urlSafe = false) {\n\tconst dictionary = urlSafe ? base64UrlSafeAlphabet : base64Alphabet;\n\tlet output = '';\n\n\tconst remainder = buffer.byteLength % 3;\n\n\tlet i = 0;\n\tfor (; i < buffer.byteLength - remainder; i += 3) {\n\t\tconst a = buffer[i + 0];\n\t\tconst b = buffer[i + 1];\n\t\tconst c = buffer[i + 2];\n\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4 | b >>> 4) & 0b111111];\n\t\toutput += dictionary[(b << 2 | c >>> 6) & 0b111111];\n\t\toutput += dictionary[c & 0b111111];\n\t}\n\n\tif (remainder === 1) {\n\t\tconst a = buffer[i + 0];\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4) & 0b111111];\n\t\tif (padded) { output += '=='; }\n\t} else if (remainder === 2) {\n\t\tconst a = buffer[i + 0];\n\t\tconst b = buffer[i + 1];\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4 | b >>> 4) & 0b111111];\n\t\toutput += dictionary[(b << 2) & 0b111111];\n\t\tif (padded) { output += '='; }\n\t}\n\n\treturn output;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Can be passed into the Delayed to defer using a microtask\n * */\nexport const MicrotaskDelay = Symbol('MicrotaskDelay');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isAbsolute, join, normalize, posix, sep } from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\nimport { equalsIgnoreCase, rtrim, startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { isNumber } from 'vs/base/common/types';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Takes a Windows OS path (using backward or forward slashes) and turns it into a posix path:\n * - turns backward slashes into forward slashes\n * - makes it absolute if it starts with a drive letter\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toPosixPath(osPath: string) {\n\tif (osPath.indexOf('/') === -1) {\n\t\tosPath = toSlashes(osPath);\n\t}\n\tif (/^[a-zA-Z]:(\\/|$)/.test(osPath)) { // starts with a drive letter\n\t\tosPath = '/' + osPath;\n\t}\n\treturn osPath;\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\tcode = path.charCodeAt(1);\n\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\n\tcode = path.charCodeAt(pos + 1);\n\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])(\\.(.*?))?$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqual` instead. If you are\n * in a context without services, consider to pass down the `extUri` from the outside\n * or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqualOrParent` instead. If\n * you are in a context without services, consider to pass down the `extUri` from the\n * outside, or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqualOrParent(base: string, parentCandidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (base === parentCandidate) {\n\t\treturn true;\n\t}\n\n\tif (!base || !parentCandidate) {\n\t\treturn false;\n\t}\n\n\tif (parentCandidate.length > base.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(base, parentCandidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (parentCandidate.length === base.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = parentCandidate.length;\n\t\tif (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn base.charAt(sepOffset) === separator;\n\t}\n\n\tif (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n\t\tparentCandidate += separator;\n\t}\n\n\treturn base.indexOf(parentCandidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && candidate.endsWith(':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (candidate.endsWith(':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn hasDriveLetter(pathNormalized) &&\n\t\t\t(path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function hasDriveLetter(path: string, isWindowsOS: boolean = isWindows): boolean {\n\tif (isWindowsOS) {\n\t\treturn isWindowsDriveLetter(path.charCodeAt(0)) && path.charCodeAt(1) === CharCode.Colon;\n\t}\n\n\treturn false;\n}\n\nexport function getDriveLetter(path: string): string | undefined {\n\treturn hasDriveLetter(path) ? path[0] : undefined;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase?: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n\nexport interface IPathWithLineAndColumn {\n\tpath: string;\n\tline?: number;\n\tcolumn?: number;\n}\n\nexport function parseLineAndColumnAware(rawPath: string): IPathWithLineAndColumn {\n\tconst segments = rawPath.split(':'); // C:\\file.txt:<line>:<column>\n\n\tlet path: string | undefined = undefined;\n\tlet line: number | undefined = undefined;\n\tlet column: number | undefined = undefined;\n\n\tfor (const segment of segments) {\n\t\tconst segmentAsNumber = Number(segment);\n\t\tif (!isNumber(segmentAsNumber)) {\n\t\t\tpath = !!path ? [path, segment].join(':') : segment; // a colon can well be part of a path (e.g. C:\\...)\n\t\t} else if (line === undefined) {\n\t\t\tline = segmentAsNumber;\n\t\t} else if (column === undefined) {\n\t\t\tcolumn = segmentAsNumber;\n\t\t}\n\t}\n\n\tif (!path) {\n\t\tthrow new Error('Format for `--goto` should be: `FILE:LINE(:COLUMN)`');\n\t}\n\n\treturn {\n\t\tpath,\n\t\tline: line !== undefined ? line : undefined,\n\t\tcolumn: column !== undefined ? column : line !== undefined ? 1 : undefined // if we have a line, make sure column is also set\n\t};\n}\n\nconst pathChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\nexport function randomPath(parent?: string, prefix?: string, randomLength = 8): string {\n\tlet suffix = '';\n\tfor (let i = 0; i < randomLength; i++) {\n\t\tsuffix += pathChars.charAt(Math.floor(Math.random() * pathChars.length));\n\t}\n\n\tlet randomFileName: string;\n\tif (prefix) {\n\t\trandomFileName = `${prefix}-${suffix}`;\n\t} else {\n\t\trandomFileName = suffix;\n\t}\n\n\tif (parent) {\n\t\treturn join(parent, randomFileName);\n\t}\n\n\treturn randomFileName;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as errors from 'vs/base/common/errors';\nimport * as platform from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const vscodeUserData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeNotebookCell = 'vscode-notebook-cell';\n\n\texport const vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n\texport const vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n\texport const vscodeInteractive = 'vscode-interactive';\n\texport const vscodeInteractiveInput = 'vscode-interactive-input';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const vscodeWorkspaceTrust = 'vscode-workspace-trust';\n\n\texport const vscodeTerminal = 'vscode-terminal';\n\n\t/**\n\t * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n\t */\n\texport const webviewPanel = 'webview-panel';\n\n\t/**\n\t * Scheme used for loading the wrapper html and script in webviews.\n\t */\n\texport const vscodeWebview = 'vscode-webview';\n\n\t/**\n\t * Scheme used for extension pages\n\t */\n\texport const extension = 'extension';\n\n\t/**\n\t * Scheme used as a replacement of `file` scheme to load\n\t * files with our custom protocol handler (desktop only).\n\t */\n\texport const vscodeFileResource = 'vscode-file';\n\n\t/**\n\t * Scheme used for temporary resources\n\t */\n\texport const tmp = 'tmp';\n\n\t/**\n\t * Scheme used vs live share\n\t */\n\texport const vsls = 'vsls';\n\n\t/**\n\t * Scheme used for the Source Control commit input's text document\n\t */\n\texport const vscodeSourceControl = 'vscode-scm';\n}\n\nexport const connectionTokenCookieName = 'vscode-tkn';\nexport const connectionTokenQueryName = 'tkn';\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\tprivate _remoteResourcesPath: string = `/${Schemas.vscodeRemoteResource}`;\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tsetServerRootPath(serverRootPath: string): void {\n\t\tthis._remoteResourcesPath = `${serverRootPath}/${Schemas.vscodeRemoteResource}`;\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\tgetPreferredWebSchema(): 'http' | 'https' {\n\t\treturn this._preferredWebSchema;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\ttry {\n\t\t\t\treturn this._delegate(uri);\n\t\t\t} catch (err) {\n\t\t\t\terrors.onUnexpectedError(err);\n\t\t\t\treturn uri;\n\t\t\t}\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1 && host.indexOf('[') === -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\tconst port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: `${host}:${port}`,\n\t\t\tpath: platform.isWeb\n\t\t\t\t? (window.location.pathname + \"/\" + this._remoteResourcesPath).replace(/\\/\\/+/g, \"/\")\n\t\t\t\t: this._remoteResourcesPath,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n\n/**\n * A string pointing to a path inside the app. It should not begin with ./ or ../\n */\nexport type AppResourcePath = (\n\t`a${string}` | `b${string}` | `c${string}` | `d${string}` | `e${string}` | `f${string}`\n\t| `g${string}` | `h${string}` | `i${string}` | `j${string}` | `k${string}` | `l${string}`\n\t| `m${string}` | `n${string}` | `o${string}` | `p${string}` | `q${string}` | `r${string}`\n\t| `s${string}` | `t${string}` | `u${string}` | `v${string}` | `w${string}` | `x${string}`\n\t| `y${string}` | `z${string}`\n);\n\nexport const builtinExtensionsPath: AppResourcePath = 'vs/../../extensions';\nexport const nodeModulesPath: AppResourcePath = 'vs/../../node_modules';\nexport const nodeModulesAsarPath: AppResourcePath = 'vs/../../node_modules.asar';\nexport const nodeModulesAsarUnpackedPath: AppResourcePath = 'vs/../../node_modules.asar.unpacked';\n\nclass FileAccessImpl {\n\n\tprivate static readonly FALLBACK_AUTHORITY = 'vscode-app';\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\tasBrowserUri(resourcePath: AppResourcePath | ''): URI {\n\t\tconst uri = this.toUri(resourcePath, require);\n\t\treturn this.uriToBrowserUri(uri);\n\t}\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\turiToBrowserUri(uri: URI): URI {\n\t\t// Handle remote URIs via `RemoteAuthorities`\n\t\tif (uri.scheme === Schemas.vscodeRemote) {\n\t\t\treturn RemoteAuthorities.rewrite(uri);\n\t\t}\n\n\t\t// Convert to `vscode-file` resource..\n\t\tif (\n\t\t\t// ...only ever for `file` resources\n\t\t\turi.scheme === Schemas.file &&\n\t\t\t(\n\t\t\t\t// ...and we run in native environments\n\t\t\t\tplatform.isNative ||\n\t\t\t\t// ...or web worker extensions on desktop\n\t\t\t\t(platform.isWebWorker && platform.globals.origin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`)\n\t\t\t)\n\t\t) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.vscodeFileResource,\n\t\t\t\t// We need to provide an authority here so that it can serve\n\t\t\t\t// as origin for network and loading matters in chromium.\n\t\t\t\t// If the URI is not coming with an authority already, we\n\t\t\t\t// add our own\n\t\t\t\tauthority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\tasFileUri(resourcePath: AppResourcePath | ''): URI {\n\t\tconst uri = this.toUri(resourcePath, require);\n\t\treturn this.uriToFileUri(uri);\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\turiToFileUri(uri: URI): URI {\n\t\t// Only convert the URI if it is `vscode-file:` scheme\n\t\tif (uri.scheme === Schemas.vscodeFileResource) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.file,\n\t\t\t\t// Only preserve the `authority` if it is different from\n\t\t\t\t// our fallback authority. This ensures we properly preserve\n\t\t\t\t// Windows UNC paths that come with their own authority.\n\t\t\t\tauthority: uri.authority !== FileAccessImpl.FALLBACK_AUTHORITY ? uri.authority : null,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\tprivate toUri(uriOrModule: URI | string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI {\n\t\tif (URI.isUri(uriOrModule)) {\n\t\t\treturn uriOrModule;\n\t\t}\n\n\t\treturn URI.parse(moduleIdToUrl.toUrl(uriOrModule));\n\t}\n}\n\nexport const FileAccess = new FileAccessImpl();\n\n\nexport namespace COI {\n\n\tconst coiHeaders = new Map<'3' | '2' | '1' | string, Record<string, string>>([\n\t\t['1', { 'Cross-Origin-Opener-Policy': 'same-origin' }],\n\t\t['2', { 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n\t\t['3', { 'Cross-Origin-Opener-Policy': 'same-origin', 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n\t]);\n\n\texport const CoopAndCoep = Object.freeze(coiHeaders.get('3'));\n\n\tconst coiSearchParamName = 'vscode-coi';\n\n\t/**\n\t * Extract desired headers from `vscode-coi` invocation\n\t */\n\texport function getHeadersFromQuery(url: string | URI | URL): Record<string, string> | undefined {\n\t\tlet params: URLSearchParams | undefined;\n\t\tif (typeof url === 'string') {\n\t\t\tparams = new URL(url).searchParams;\n\t\t} else if (url instanceof URL) {\n\t\t\tparams = url.searchParams;\n\t\t} else if (URI.isUri(url)) {\n\t\t\tparams = new URL(url.toString(true)).searchParams;\n\t\t}\n\t\tconst value = params?.get(coiSearchParamName);\n\t\tif (!value) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn coiHeaders.get(value);\n\t}\n\n\t/**\n\t * Add the `vscode-coi` query attribute based on wanting `COOP` and `COEP`. Will be a noop when `crossOriginIsolated`\n\t * isn't enabled the current context\n\t */\n\texport function addSearchParam(urlOrSearch: URLSearchParams | Record<string, string>, coop: boolean, coep: boolean): void {\n\t\tif (!(<any>globalThis).crossOriginIsolated) {\n\t\t\t// depends on the current context being COI\n\t\t\treturn;\n\t\t}\n\t\tconst value = coop && coep ? '3' : coep ? '2' : '1';\n\t\tif (urlOrSearch instanceof URLSearchParams) {\n\t\t\turlOrSearch.set(coiSearchParamName, value);\n\t\t} else {\n\t\t\t(<Record<string, string>>urlOrSearch)[coiSearchParamName] = value;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as extpath from 'vs/base/common/extpath';\nimport { Schemas } from 'vs/base/common/network';\nimport * as paths from 'vs/base/common/path';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { compare as strCompare, equalsIgnoreCase } from 'vs/base/common/strings';\nimport { URI, uriToFsPath } from 'vs/base/common/uri';\n\nexport function originalFSPath(uri: URI): string {\n\treturn uriToFsPath(uri, true);\n}\n\n//#region IExtUri\n\nexport interface IExtUri {\n\n\t// --- identity\n\n\t/**\n\t * Compares two uris.\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tcompare(uri1: URI, uri2: URI, ignoreFragment?: boolean): number;\n\n\t/**\n\t * Tests whether two uris are equal\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n\t *\n\t * @param base A uri which is \"longer\" or at least same length as `parentCandidate`\n\t * @param parentCandidate A uri which is \"shorter\" or up to same length as `base`\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Creates a key from a resource URI to be used to resource comparison and for resource maps.\n\t * @see {@link ResourceMap}\n\t * @param uri Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tgetComparisonKey(uri: URI, ignoreFragment?: boolean): string;\n\n\t/**\n\t * Whether the casing of the path-component of the uri should be ignored.\n\t */\n\tignorePathCasing(uri: URI): boolean;\n\n\t// --- path math\n\n\tbasenameOrAuthority(resource: URI): string;\n\n\t/**\n\t * Returns the basename of the path component of an uri.\n\t * @param resource\n\t */\n\tbasename(resource: URI): string;\n\n\t/**\n\t * Returns the extension of the path component of an uri.\n\t * @param resource\n\t */\n\textname(resource: URI): string;\n\t/**\n\t * Return a URI representing the directory of a URI path.\n\t *\n\t * @param resource The input URI.\n\t * @returns The URI representing the directory of the input URI.\n\t */\n\tdirname(resource: URI): URI;\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param resource The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI;\n\t/**\n\t * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n\t *\n\t * @param resource The URI to normalize the path.\n\t * @returns The URI with the normalized path.\n\t */\n\tnormalizePath(resource: URI): URI;\n\t/**\n\t *\n\t * @param from\n\t * @param to\n\t */\n\trelativePath(from: URI, to: URI): string | undefined;\n\t/**\n\t * Resolves an absolute or relative path against a base URI.\n\t * The path can be relative or absolute posix or a Windows path\n\t */\n\tresolvePath(base: URI, path: string): URI;\n\n\t// --- misc\n\n\t/**\n\t * Returns true if the URI path is absolute.\n\t */\n\tisAbsolutePath(resource: URI): boolean;\n\t/**\n\t * Tests whether the two authorities are the same\n\t */\n\tisEqualAuthority(a1: string, a2: string): boolean;\n\t/**\n\t * Returns true if the URI path has a trailing path separator\n\t */\n\thasTrailingPathSeparator(resource: URI, sep?: string): boolean;\n\t/**\n\t * Removes a trailing path separator, if there's one.\n\t * Important: Doesn't remove the first slash, it would make the URI invalid\n\t */\n\tremoveTrailingPathSeparator(resource: URI, sep?: string): URI;\n\t/**\n\t * Adds a trailing path separator to the URI if there isn't one already.\n\t * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n\t */\n\taddTrailingPathSeparator(resource: URI, sep?: string): URI;\n}\n\nexport class ExtUri implements IExtUri {\n\n\tconstructor(private _ignorePathCasing: (uri: URI) => boolean) { }\n\n\tcompare(uri1: URI, uri2: URI, ignoreFragment: boolean = false): number {\n\t\tif (uri1 === uri2) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n\t}\n\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment: boolean = false): boolean {\n\t\tif (uri1 === uri2) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!uri1 || !uri2) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n\t}\n\n\tgetComparisonKey(uri: URI, ignoreFragment: boolean = false): string {\n\t\treturn uri.with({\n\t\t\tpath: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n\t\t\tfragment: ignoreFragment ? null : undefined\n\t\t}).toString();\n\t}\n\n\tignorePathCasing(uri: URI): boolean {\n\t\treturn this._ignorePathCasing(uri);\n\t}\n\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment: boolean = false): boolean {\n\t\tif (base.scheme === parentCandidate.scheme) {\n\t\t\tif (base.scheme === Schemas.file) {\n\t\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\t\treturn extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// --- path math\n\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI {\n\t\treturn URI.joinPath(resource, ...pathFragment);\n\t}\n\n\tbasenameOrAuthority(resource: URI): string {\n\t\treturn basename(resource) || resource.authority;\n\t}\n\n\tbasename(resource: URI): string {\n\t\treturn paths.posix.basename(resource.path);\n\t}\n\n\textname(resource: URI): string {\n\t\treturn paths.posix.extname(resource.path);\n\t}\n\n\tdirname(resource: URI): URI {\n\t\tif (resource.path.length === 0) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet dirname;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tdirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tdirname = paths.posix.dirname(resource.path);\n\t\t\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\t\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\t\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t\t\t}\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: dirname\n\t\t});\n\t}\n\n\tnormalizePath(resource: URI): URI {\n\t\tif (!resource.path.length) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet normalizedPath: string;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: normalizedPath\n\t\t});\n\t}\n\n\trelativePath(from: URI, to: URI): string | undefined {\n\t\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (from.scheme === Schemas.file) {\n\t\t\tconst relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n\t\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t\t}\n\t\tlet fromPath = from.path || '/';\n\t\tconst toPath = to.path || '/';\n\t\tif (this._ignorePathCasing(from)) {\n\t\t\t// make casing of fromPath match toPath\n\t\t\tlet i = 0;\n\t\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t\t}\n\t\treturn paths.posix.relative(fromPath, toPath);\n\t}\n\n\tresolvePath(base: URI, path: string): URI {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\t\treturn base.with({\n\t\t\t\tauthority: newURI.authority,\n\t\t\t\tpath: newURI.path\n\t\t\t});\n\t\t}\n\t\tpath = extpath.toPosixPath(path); // we allow path to be a windows path\n\t\treturn base.with({\n\t\t\tpath: paths.posix.resolve(base.path, path)\n\t\t});\n\t}\n\n\t// --- misc\n\n\tisAbsolutePath(resource: URI): boolean {\n\t\treturn !!resource.path && resource.path[0] === '/';\n\t}\n\n\tisEqualAuthority(a1: string | undefined, a2: string | undefined) {\n\t\treturn a1 === a2 || (a1 !== undefined && a2 !== undefined && equalsIgnoreCase(a1, a2));\n\t}\n\n\thasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t\t} else {\n\t\t\tconst p = resource.path;\n\t\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t\t}\n\t}\n\n\tremoveTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\t\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t\t}\n\t\treturn resource;\n\t}\n\n\taddTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\tlet isRootSep: boolean = false;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t\t} else {\n\t\t\tsep = '/';\n\t\t\tconst p = resource.path;\n\t\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t\t}\n\t\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path + '/' });\n\t\t}\n\t\treturn resource;\n\t}\n}\n\n\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn uri.scheme === Schemas.file ? !isLinux : true;\n});\n\n\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\n\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n\n//#endregion\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined, localScheme: string): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: localScheme, authority, path });\n\t}\n\n\treturn resource.with({ scheme: localScheme });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { CancellationError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable, MutableDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { extUri as defaultExtUri, IExtUri } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { setTimeout0 } from 'vs/base/common/platform';\nimport { MicrotaskDelay } from './symbols';\n\nexport function isThenable<T>(obj: unknown): obj is Promise<T> {\n\treturn !!obj && typeof (obj as unknown as Promise<T>).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tconst subscription = source.token.onCancellationRequested(() => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\n/**\n * Returns a promise that resolves with `undefined` as soon as the passed token is cancelled.\n * @see {@link raceCancellationError}\n */\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\n\n/**\n * Returns a promise that resolves with `defaultValue` as soon as the passed token is cancelled.\n * @see {@link raceCancellationError}\n */\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T | undefined> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst ref = token.onCancellationRequested(() => {\n\t\t\tref.dispose();\n\t\t\tresolve(defaultValue);\n\t\t});\n\t\tpromise.then(resolve, reject).finally(() => ref.dispose());\n\t});\n}\n\n/**\n * Returns a promise that rejects with an {@CancellationError} as soon as the passed token is cancelled.\n * @see {@link raceCancellation}\n */\nexport function raceCancellationError<T>(promise: Promise<T>, token: CancellationToken): Promise<T> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst ref = token.onCancellationRequested(() => {\n\t\t\tref.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t\tpromise.then(resolve, reject).finally(() => ref.dispose());\n\t});\n}\n\n/**\n * Returns as soon as one of the promises is resolved and cancels remaining promises\n */\nexport async function raceCancellablePromises<T>(cancellablePromises: CancelablePromise<T>[]): Promise<T> {\n\tlet resolvedPromiseIndex = -1;\n\tconst promises = cancellablePromises.map((promise, index) => promise.then(result => { resolvedPromiseIndex = index; return result; }));\n\tconst result = await Promise.race(promises);\n\tcancellablePromises.forEach((cancellablePromise, index) => {\n\t\tif (index !== resolvedPromiseIndex) {\n\t\t\tcancellablePromise.cancel();\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T | undefined> {\n\tlet promiseResolve: ((value: T | undefined) => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.(undefined);\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T | undefined>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(resolve => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(resolve);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.queuedPromise!.then(resolve, reject);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.activePromise!.then((result: T) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tresolve(result);\n\t\t\t}, (err: unknown) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\treject(err);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<unknown> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask(), () => promiseTask());\n\t}\n}\n\nexport class SequencerByKey<TKey> {\n\n\tprivate promiseMap = new Map<TKey, Promise<unknown>>();\n\n\tqueue<T>(key: TKey, promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\tconst runningPromise = this.promiseMap.get(key) ?? Promise.resolve();\n\t\tconst newPromise = runningPromise\n\t\t\t.catch(() => { })\n\t\t\t.then(promiseTask)\n\t\t\t.finally(() => {\n\t\t\t\tif (this.promiseMap.get(key) === newPromise) {\n\t\t\t\t\tthis.promiseMap.delete(key);\n\t\t\t\t}\n\t\t\t});\n\t\tthis.promiseMap.set(key, newPromise);\n\t\treturn newPromise;\n\t}\n}\n\ninterface IScheduledLater extends IDisposable {\n\tisTriggered(): boolean;\n}\n\nconst timeoutDeferred = (timeout: number, fn: () => void): IScheduledLater => {\n\tlet scheduled = true;\n\tconst handle = setTimeout(() => {\n\t\tscheduled = false;\n\t\tfn();\n\t}, timeout);\n\treturn {\n\t\tisTriggered: () => scheduled,\n\t\tdispose: () => {\n\t\t\tclearTimeout(handle);\n\t\t\tscheduled = false;\n\t\t},\n\t};\n};\n\nconst microtaskDeferred = (fn: () => void): IScheduledLater => {\n\tlet scheduled = true;\n\tqueueMicrotask(() => {\n\t\tif (scheduled) {\n\t\t\tscheduled = false;\n\t\t\tfn();\n\t\t}\n\t});\n\n\treturn {\n\t\tisTriggered: () => scheduled,\n\t\tdispose: () => { scheduled = false; },\n\t};\n};\n\n/**\n * A helper to delay (debounce) execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate deferred: IScheduledLater | null;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number | typeof MicrotaskDelay) {\n\t\tthis.deferred = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((resolve, reject) => {\n\t\t\t\tthis.doResolve = resolve;\n\t\t\t\tthis.doReject = reject;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tconst fn = () => {\n\t\t\tthis.deferred = null;\n\t\t\tthis.doResolve?.(null);\n\t\t};\n\n\t\tthis.deferred = delay === MicrotaskDelay ? microtaskDeferred(fn) : timeoutDeferred(delay, fn);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn !!this.deferred?.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tthis.doReject?.(new CancellationError());\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tthis.deferred?.dispose();\n\t\tthis.deferred = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as unknown as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently after a certain period of\n * time or when open is called explicitly\n */\nexport class AutoOpenBarrier extends Barrier {\n\n\tprivate readonly _timeout: any;\n\n\tconstructor(autoOpenTimeMs: number) {\n\t\tsuper();\n\t\tthis._timeout = setTimeout(() => this.open(), autoOpenTimeMs);\n\t}\n\n\toverride open(): void {\n\t\tclearTimeout(this._timeout);\n\t\tsuper.open();\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(() => {\n\t\t\tdisposable.dispose();\n\t\t\tresolve();\n\t\t}, millis);\n\t\tconst disposable = token.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\tdisposable.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\n/**\n * Returns the result of the first promise that matches the \"shouldStop\",\n * running all promises in parallel. Supports cancelable promises.\n */\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop?: (t: T) => boolean, defaultValue?: T | null): Promise<T | null>;\nexport function firstParallel<T, R extends T>(promiseList: Promise<T>[], shouldStop: (t: T) => t is R, defaultValue?: R | null): Promise<R | null>;\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null) {\n\tif (promiseList.length === 0) {\n\t\treturn Promise.resolve(defaultValue);\n\t}\n\n\tlet todo = promiseList.length;\n\tconst finish = () => {\n\t\ttodo = -1;\n\t\tfor (const promise of promiseList) {\n\t\t\t(promise as Partial<CancelablePromise<T>>).cancel?.();\n\t\t}\n\t};\n\n\treturn new Promise<T | null>((resolve, reject) => {\n\t\tfor (const promise of promiseList) {\n\t\t\tpromise.then(result => {\n\t\t\t\tif (--todo >= 0 && shouldStop(result)) {\n\t\t\t\t\tfinish();\n\t\t\t\t\tresolve(result);\n\t\t\t\t} else if (todo === 0) {\n\t\t\t\t\tresolve(defaultValue);\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tif (--todo >= 0) {\n\t\t\t\t\t\tfinish();\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t});\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value: T | Promise<T>) => void;\n\te: (error?: unknown) => void;\n}\n\nexport interface ILimiter<T> {\n\n\treadonly size: number;\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T>;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> implements ILimiter<T>{\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate readonly maxDegreeOfParalellism: number;\n\tprivate readonly outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onDrained: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onDrained = new Emitter<void>();\n\t}\n\n\t/**\n\t * An event that fires when every promise in the queue\n\t * has started to execute. In other words: no work is\n\t * pending to be scheduled.\n\t *\n\t * This is NOT an event that signals when all promises\n\t * have finished though.\n\t */\n\tget onDrained(): Event<void> {\n\t\treturn this._onDrained.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onDrained.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onDrained.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tprivate readonly drainers = new Set<DeferredPromise<void>>();\n\n\tasync whenDrained(): Promise<void> {\n\t\tif (this.isDrained()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst promise = new DeferredPromise<void>();\n\t\tthis.drainers.add(promise);\n\n\t\treturn promise.p;\n\t}\n\n\tprivate isDrained(): boolean {\n\t\tfor (const [, queue] of this.queues) {\n\t\t\tif (queue.size > 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tqueueFor(resource: URI, extUri: IExtUri = defaultExtUri): ILimiter<void> {\n\t\tconst key = extUri.getComparisonKey(resource);\n\n\t\tlet queue = this.queues.get(key);\n\t\tif (!queue) {\n\t\t\tqueue = new Queue<void>();\n\t\t\tEvent.once(queue.onDrained)(() => {\n\t\t\t\tqueue?.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t\tthis.onDidQueueDrain();\n\t\t\t});\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn queue;\n\t}\n\n\tprivate onDidQueueDrain(): void {\n\t\tif (!this.isDrained()) {\n\t\t\treturn; // not done yet\n\t\t}\n\n\t\tthis.releaseDrainers();\n\t}\n\n\tprivate releaseDrainers(): void {\n\t\tfor (const drainer of this.drainers) {\n\t\t\tdrainer.complete();\n\t\t}\n\n\t\tthis.drainers.clear();\n\t}\n\n\tdispose(): void {\n\t\tfor (const [, queue] of this.queues) {\n\t\t\tqueue.dispose();\n\t\t}\n\n\t\tthis.queues.clear();\n\n\t\t// Even though we might still have pending\n\t\t// tasks queued, after the queues have been\n\t\t// disposed, we can no longer track them, so\n\t\t// we release drainers to prevent hanging\n\t\t// promises when the resource queue is being\n\t\t// disposed.\n\t\tthis.releaseDrainers();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler implements IDisposable {\n\n\tprotected runner: ((...args: unknown[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, delay: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\tget delay(): number {\n\t\treturn this.timeout;\n\t}\n\n\tset delay(value: number) {\n\t\tthis.timeout = value;\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tflush(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tthis.cancel();\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tthis.runner?.();\n\t}\n}\n\n/**\n * Same as `RunOnceScheduler`, but doesn't count the time spent in sleep mode.\n * > **NOTE**: Only offers 1s resolution.\n *\n * When calling `setTimeout` with 3hrs, and putting the computer immediately to sleep\n * for 8hrs, `setTimeout` will fire **as soon as the computer wakes from sleep**. But\n * this scheduler will execute 3hrs **after waking the computer from sleep**.\n */\nexport class ProcessTimeRunOnceScheduler {\n\n\tprivate runner: (() => void) | null;\n\tprivate timeout: number;\n\n\tprivate counter: number;\n\tprivate intervalToken: any;\n\tprivate intervalHandler: () => void;\n\n\tconstructor(runner: () => void, delay: number) {\n\t\tif (delay % 1000 !== 0) {\n\t\t\tconsole.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${delay}ms is not a multiple of 1000ms.`);\n\t\t}\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.counter = 0;\n\t\tthis.intervalToken = -1;\n\t\tthis.intervalHandler = this.onInterval.bind(this);\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearInterval(this.intervalToken);\n\t\t\tthis.intervalToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tif (delay % 1000 !== 0) {\n\t\t\tconsole.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${delay}ms is not a multiple of 1000ms.`);\n\t\t}\n\t\tthis.cancel();\n\t\tthis.counter = Math.ceil(delay / 1000);\n\t\tthis.intervalToken = setInterval(this.intervalHandler, 1000);\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.intervalToken !== -1;\n\t}\n\n\tprivate onInterval() {\n\t\tthis.counter--;\n\t\tif (this.counter > 0) {\n\t\t\t// still need to wait\n\t\t\treturn;\n\t\t}\n\n\t\t// time elapsed\n\t\tclearInterval(this.intervalToken);\n\t\tthis.intervalToken = -1;\n\t\tthis.runner?.();\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected override doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tthis.runner?.(units);\n\t}\n\n\toverride dispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport interface IThrottledWorkerOptions {\n\n\t/**\n\t * maximum of units the worker will pass onto handler at once\n\t */\n\tmaxWorkChunkSize: number;\n\n\t/**\n\t * maximum of units the worker will keep in memory for processing\n\t */\n\tmaxBufferedWork: number | undefined;\n\n\t/**\n\t * delay before processing the next round of chunks when chunk size exceeds limits\n\t */\n\tthrottleDelay: number;\n}\n\n/**\n * The `ThrottledWorker` will accept units of work `T`\n * to handle. The contract is:\n * * there is a maximum of units the worker can handle at once (via `maxWorkChunkSize`)\n * * there is a maximum of units the worker will keep in memory for processing (via `maxBufferedWork`)\n * * after having handled `maxWorkChunkSize` units, the worker needs to rest (via `throttleDelay`)\n */\nexport class ThrottledWorker<T> extends Disposable {\n\n\tprivate readonly pendingWork: T[] = [];\n\n\tprivate readonly throttler = this._register(new MutableDisposable<RunOnceScheduler>());\n\tprivate disposed = false;\n\n\tconstructor(\n\t\tprivate options: IThrottledWorkerOptions,\n\t\tprivate readonly handler: (units: T[]) => void\n\t) {\n\t\tsuper();\n\t}\n\n\t/**\n\t * The number of work units that are pending to be processed.\n\t */\n\tget pending(): number { return this.pendingWork.length; }\n\n\t/**\n\t * Add units to be worked on. Use `pending` to figure out\n\t * how many units are not yet processed after this method\n\t * was called.\n\t *\n\t * @returns whether the work was accepted or not. If the\n\t * worker is disposed, it will not accept any more work.\n\t * If the number of pending units would become larger\n\t * than `maxPendingWork`, more work will also not be accepted.\n\t */\n\twork(units: readonly T[]): boolean {\n\t\tif (this.disposed) {\n\t\t\treturn false; // work not accepted: disposed\n\t\t}\n\n\t\t// Check for reaching maximum of pending work\n\t\tif (typeof this.options.maxBufferedWork === 'number') {\n\n\t\t\t// Throttled: simple check if pending + units exceeds max pending\n\t\t\tif (this.throttler.value) {\n\t\t\t\tif (this.pending + units.length > this.options.maxBufferedWork) {\n\t\t\t\t\treturn false; // work not accepted: too much pending work\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Unthrottled: same as throttled, but account for max chunk getting\n\t\t\t// worked on directly without being pending\n\t\t\telse {\n\t\t\t\tif (this.pending + units.length - this.options.maxWorkChunkSize > this.options.maxBufferedWork) {\n\t\t\t\t\treturn false; // work not accepted: too much pending work\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add to pending units first\n\t\tfor (const unit of units) {\n\t\t\tthis.pendingWork.push(unit);\n\t\t}\n\n\t\t// If not throttled, start working directly\n\t\t// Otherwise, when the throttle delay has\n\t\t// past, pending work will be worked again.\n\t\tif (!this.throttler.value) {\n\t\t\tthis.doWork();\n\t\t}\n\n\t\treturn true; // work accepted\n\t}\n\n\tprivate doWork(): void {\n\n\t\t// Extract chunk to handle and handle it\n\t\tthis.handler(this.pendingWork.splice(0, this.options.maxWorkChunkSize));\n\n\t\t// If we have remaining work, schedule it after a delay\n\t\tif (this.pendingWork.length > 0) {\n\t\t\tthis.throttler.value = new RunOnceScheduler(() => {\n\t\t\t\tthis.throttler.clear();\n\n\t\t\t\tthis.doWork();\n\t\t\t}, this.options.throttleDelay);\n\t\t\tthis.throttler.value.schedule();\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.disposed = true;\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n\n/**\n * Execute the callback the next time the browser is idle, returning an\n * {@link IDisposable} that will cancel the callback when disposed. This wraps\n * [requestIdleCallback] so it will fallback to [setTimeout] if the environment\n * doesn't support it.\n *\n * @param callback The callback to run when idle, this includes an\n * [IdleDeadline] that provides the time alloted for the idle callback by the\n * browser. Not respecting this deadline will result in a degraded user\n * experience.\n * @param timeout A timeout at which point to queue no longer wait for an idle\n * callback but queue it on the regular event loop (like setTimeout). Typically\n * this should not be used.\n *\n * [IdleDeadline]: https://developer.mozilla.org/en-US/docs/Web/API/IdleDeadline\n * [requestIdleCallback]: https://developer.mozilla.org/en-US/docs/Web/API/Window/requestIdleCallback\n * [setTimeout]: https://developer.mozilla.org/en-US/docs/Web/API/Window/setTimeout\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\trunWhenIdle = (runner) => {\n\t\t\tsetTimeout0(() => {\n\t\t\t\tif (disposed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst end = Date.now() + 15; // one frame at 64fps\n\t\t\t\trunner(Object.freeze({\n\t\t\t\t\tdidTimeout: true,\n\t\t\t\t\ttimeRemaining() {\n\t\t\t\t\t\treturn Math.max(0, end - Date.now());\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t});\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: unknown;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tget value(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n\n\tget isInitialized(): boolean {\n\t\treturn this._didRun;\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IPendingTask {\n\treadonly taskId: number;\n\treadonly cancel: () => void;\n\treadonly promise: Promise<void>;\n}\n\ninterface INextTask {\n\treadonly promise: Promise<void>;\n\treadonly promiseResolve: () => void;\n\treadonly promiseReject: (error: Error) => void;\n\trun: () => Promise<void>;\n}\n\nexport interface ITaskSequentializerWithPendingTask {\n\treadonly pending: Promise<void>;\n}\n\nexport interface ITaskSequentializerWithNextTask {\n\treadonly next: INextTask;\n}\n\nexport class TaskSequentializer {\n\n\tprivate _pending?: IPendingTask;\n\tprivate _next?: INextTask;\n\n\thasPending(taskId?: number): this is ITaskSequentializerWithPendingTask {\n\t\tif (!this._pending) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._pending.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._pending;\n\t}\n\n\tget pending(): Promise<void> | undefined {\n\t\treturn this._pending?.promise;\n\t}\n\n\tcancelPending(): void {\n\t\tthis._pending?.cancel();\n\t}\n\n\tsetPending(taskId: number, promise: Promise<void>, onCancel?: () => void,): Promise<void> {\n\t\tthis._pending = { taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.donePending(taskId), () => this.donePending(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate donePending(taskId: number): void {\n\t\tif (this._pending && taskId === this._pending.taskId) {\n\n\t\t\t// only set pending to done if the promise finished that is associated with that taskId\n\t\t\tthis._pending = undefined;\n\n\t\t\t// schedule the next task now that we are free if we have any\n\t\t\tthis.triggerNext();\n\t\t}\n\t}\n\n\tprivate triggerNext(): void {\n\t\tif (this._next) {\n\t\t\tconst next = this._next;\n\t\t\tthis._next = undefined;\n\n\t\t\t// Run next task and complete on the associated promise\n\t\t\tnext.run().then(next.promiseResolve, next.promiseReject);\n\t\t}\n\t}\n\n\tsetNext(run: () => Promise<void>): Promise<void> {\n\n\t\t// this is our first next task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._next) {\n\t\t\tlet promiseResolve: () => void;\n\t\t\tlet promiseReject: (error: Error) => void;\n\t\t\tconst promise = new Promise<void>((resolve, reject) => {\n\t\t\t\tpromiseResolve = resolve;\n\t\t\t\tpromiseReject = reject;\n\t\t\t});\n\n\t\t\tthis._next = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous next task, just overwrite it\n\t\telse {\n\t\t\tthis._next.run = run;\n\t\t}\n\n\t\treturn this._next.promise;\n\t}\n\n\thasNext(): this is ITaskSequentializerWithNextTask {\n\t\treturn !!this._next;\n\t}\n\n\tasync join(): Promise<void> {\n\t\treturn this._next?.promise ?? this._pending?.promise;\n\t}\n}\n\n//#endregion\n\n//#region\n\n/**\n * The `IntervalCounter` allows to count the number\n * of calls to `increment()` over a duration of\n * `interval`. This utility can be used to conditionally\n * throttle a frequent task when a certain threshold\n * is reached.\n */\nexport class IntervalCounter {\n\n\tprivate lastIncrementTime = 0;\n\n\tprivate value = 0;\n\n\tconstructor(private readonly interval: number, private readonly nowFn = () => Date.now()) { }\n\n\tincrement(): number {\n\t\tconst now = this.nowFn();\n\n\t\t// We are outside of the range of `interval` and as such\n\t\t// start counting from 0 and remember the time\n\t\tif (now - this.lastIncrementTime > this.interval) {\n\t\t\tthis.lastIncrementTime = now;\n\t\t\tthis.value = 0;\n\t\t}\n\n\t\tthis.value++;\n\n\t\treturn this.value;\n\t}\n}\n\n//#endregion\n\n//#region\n\nexport type ValueCallback<T = unknown> = (value: T | Promise<T>) => void;\n\n/**\n * Creates a promise whose resolution or rejection can be controlled imperatively.\n */\nexport class DeferredPromise<T> {\n\n\tprivate completeCallback!: ValueCallback<T>;\n\tprivate errorCallback!: (err: unknown) => void;\n\tprivate rejected = false;\n\tprivate resolved = false;\n\n\tpublic get isRejected() {\n\t\treturn this.rejected;\n\t}\n\n\tpublic get isResolved() {\n\t\treturn this.resolved;\n\t}\n\n\tpublic get isSettled() {\n\t\treturn this.rejected || this.resolved;\n\t}\n\n\tpublic readonly p: Promise<T>;\n\n\tconstructor() {\n\t\tthis.p = new Promise<T>((c, e) => {\n\t\t\tthis.completeCallback = c;\n\t\t\tthis.errorCallback = e;\n\t\t});\n\t}\n\n\tpublic complete(value: T) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.completeCallback(value);\n\t\t\tthis.resolved = true;\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic error(err: unknown) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.errorCallback(err);\n\t\t\tthis.rejected = true;\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic cancel() {\n\t\tnew Promise<void>(resolve => {\n\t\t\tthis.errorCallback(new CancellationError());\n\t\t\tthis.rejected = true;\n\t\t\tresolve();\n\t\t});\n\t}\n}\n\n//#endregion\n\n//#region Promises\n\nexport namespace Promises {\n\n\t/**\n\t * A drop-in replacement for `Promise.all` with the only difference\n\t * that the method awaits every promise to either fulfill or reject.\n\t *\n\t * Similar to `Promise.all`, only the first error will be returned\n\t * if any.\n\t */\n\texport async function settled<T>(promises: Promise<T>[]): Promise<T[]> {\n\t\tlet firstError: Error | undefined = undefined;\n\n\t\tconst result = await Promise.all(promises.map(promise => promise.then(value => value, error => {\n\t\t\tif (!firstError) {\n\t\t\t\tfirstError = error;\n\t\t\t}\n\n\t\t\treturn undefined; // do not rethrow so that other promises can settle\n\t\t})));\n\n\t\tif (typeof firstError !== 'undefined') {\n\t\t\tthrow firstError;\n\t\t}\n\n\t\treturn result as unknown as T[]; // cast is needed and protected by the `throw` above\n\t}\n\n\t/**\n\t * A helper to create a new `Promise<T>` with a body that is a promise\n\t * itself. By default, an error that raises from the async body will\n\t * end up as a unhandled rejection, so this utility properly awaits the\n\t * body and rejects the promise as a normal promise does without async\n\t * body.\n\t *\n\t * This method should only be used in rare cases where otherwise `async`\n\t * cannot be used (e.g. when callbacks are involved that require this).\n\t */\n\texport function withAsyncBody<T, E = Error>(bodyFn: (resolve: (value: T) => unknown, reject: (error: E) => unknown) => Promise<unknown>): Promise<T> {\n\t\t// eslint-disable-next-line no-async-promise-executor\n\t\treturn new Promise<T>(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tawait bodyFn(resolve, reject);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t}\n}\n\n//#endregion\n\n//#region\n\nconst enum AsyncIterableSourceState {\n\tInitial,\n\tDoneOK,\n\tDoneError,\n}\n\n/**\n * An object that allows to emit async values asynchronously or bring the iterable to an error state using `reject()`.\n * This emitter is valid only for the duration of the executor (until the promise returned by the executor settles).\n */\nexport interface AsyncIterableEmitter<T> {\n\t/**\n\t * The value will be appended at the end.\n\t *\n\t * **NOTE** If `reject()` has already been called, this method has no effect.\n\t */\n\temitOne(value: T): void;\n\t/**\n\t * The values will be appended at the end.\n\t *\n\t * **NOTE** If `reject()` has already been called, this method has no effect.\n\t */\n\temitMany(values: T[]): void;\n\t/**\n\t * Writing an error will permanently invalidate this iterable.\n\t * The current users will receive an error thrown, as will all future users.\n\t *\n\t * **NOTE** If `reject()` have already been called, this method has no effect.\n\t */\n\treject(error: Error): void;\n}\n\n/**\n * An executor for the `AsyncIterableObject` that has access to an emitter.\n */\nexport interface AsyncIterableExecutor<T> {\n\t/**\n\t * @param emitter An object that allows to emit async values valid only for the duration of the executor.\n\t */\n\t(emitter: AsyncIterableEmitter<T>): void | Promise<void>;\n}\n\n/**\n * A rich implementation for an `AsyncIterable<T>`.\n */\nexport class AsyncIterableObject<T> implements AsyncIterable<T> {\n\n\tpublic static fromArray<T>(items: T[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>((writer) => {\n\t\t\twriter.emitMany(items);\n\t\t});\n\t}\n\n\tpublic static fromPromise<T>(promise: Promise<T[]>): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\temitter.emitMany(await promise);\n\t\t});\n\t}\n\n\tpublic static fromPromises<T>(promises: Promise<T>[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\tawait Promise.all(promises.map(async (p) => emitter.emitOne(await p)));\n\t\t});\n\t}\n\n\tpublic static merge<T>(iterables: AsyncIterable<T>[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject(async (emitter) => {\n\t\t\tawait Promise.all(iterables.map(async (iterable) => {\n\t\t\t\tfor await (const item of iterable) {\n\t\t\t\t\temitter.emitOne(item);\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\t}\n\n\tpublic static EMPTY = AsyncIterableObject.fromArray<any>([]);\n\n\tprivate _state: AsyncIterableSourceState;\n\tprivate _results: T[];\n\tprivate _error: Error | null;\n\tprivate readonly _onStateChanged: Emitter<void>;\n\n\tconstructor(executor: AsyncIterableExecutor<T>) {\n\t\tthis._state = AsyncIterableSourceState.Initial;\n\t\tthis._results = [];\n\t\tthis._error = null;\n\t\tthis._onStateChanged = new Emitter<void>();\n\n\t\tqueueMicrotask(async () => {\n\t\t\tconst writer: AsyncIterableEmitter<T> = {\n\t\t\t\temitOne: (item) => this.emitOne(item),\n\t\t\t\temitMany: (items) => this.emitMany(items),\n\t\t\t\treject: (error) => this.reject(error)\n\t\t\t};\n\t\t\ttry {\n\t\t\t\tawait Promise.resolve(executor(writer));\n\t\t\t\tthis.resolve();\n\t\t\t} catch (err) {\n\t\t\t\tthis.reject(err);\n\t\t\t} finally {\n\t\t\t\twriter.emitOne = undefined!;\n\t\t\t\twriter.emitMany = undefined!;\n\t\t\t\twriter.reject = undefined!;\n\t\t\t}\n\t\t});\n\t}\n\n\t[Symbol.asyncIterator](): AsyncIterator<T, undefined, undefined> {\n\t\tlet i = 0;\n\t\treturn {\n\t\t\tnext: async () => {\n\t\t\t\tdo {\n\t\t\t\t\tif (this._state === AsyncIterableSourceState.DoneError) {\n\t\t\t\t\t\tthrow this._error;\n\t\t\t\t\t}\n\t\t\t\t\tif (i < this._results.length) {\n\t\t\t\t\t\treturn { done: false, value: this._results[i++] };\n\t\t\t\t\t}\n\t\t\t\t\tif (this._state === AsyncIterableSourceState.DoneOK) {\n\t\t\t\t\t\treturn { done: true, value: undefined };\n\t\t\t\t\t}\n\t\t\t\t\tawait Event.toPromise(this._onStateChanged.event);\n\t\t\t\t} while (true);\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic static map<T, R>(iterable: AsyncIterable<T>, mapFn: (item: T) => R): AsyncIterableObject<R> {\n\t\treturn new AsyncIterableObject<R>(async (emitter) => {\n\t\t\tfor await (const item of iterable) {\n\t\t\t\temitter.emitOne(mapFn(item));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic map<R>(mapFn: (item: T) => R): AsyncIterableObject<R> {\n\t\treturn AsyncIterableObject.map(this, mapFn);\n\t}\n\n\tpublic static filter<T>(iterable: AsyncIterable<T>, filterFn: (item: T) => boolean): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\tfor await (const item of iterable) {\n\t\t\t\tif (filterFn(item)) {\n\t\t\t\t\temitter.emitOne(item);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic filter(filterFn: (item: T) => boolean): AsyncIterableObject<T> {\n\t\treturn AsyncIterableObject.filter(this, filterFn);\n\t}\n\n\tpublic static coalesce<T>(iterable: AsyncIterable<T | undefined | null>): AsyncIterableObject<T> {\n\t\treturn <AsyncIterableObject<T>>AsyncIterableObject.filter(iterable, item => !!item);\n\t}\n\n\tpublic coalesce(): AsyncIterableObject<NonNullable<T>> {\n\t\treturn AsyncIterableObject.coalesce(this) as AsyncIterableObject<NonNullable<T>>;\n\t}\n\n\tpublic static async toPromise<T>(iterable: AsyncIterable<T>): Promise<T[]> {\n\t\tconst result: T[] = [];\n\t\tfor await (const item of iterable) {\n\t\t\tresult.push(item);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic toPromise(): Promise<T[]> {\n\t\treturn AsyncIterableObject.toPromise(this);\n\t}\n\n\t/**\n\t * The value will be appended at the end.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate emitOne(value: T): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\t// it is important to add new values at the end,\n\t\t// as we may have iterators already running on the array\n\t\tthis._results.push(value);\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * The values will be appended at the end.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate emitMany(values: T[]): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\t// it is important to add new values at the end,\n\t\t// as we may have iterators already running on the array\n\t\tthis._results = this._results.concat(values);\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * Calling `resolve()` will mark the result array as complete.\n\t *\n\t * **NOTE** `resolve()` must be called, otherwise all consumers of this iterable will hang indefinitely, similar to a non-resolved promise.\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate resolve(): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\tthis._state = AsyncIterableSourceState.DoneOK;\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * Writing an error will permanently invalidate this iterable.\n\t * The current users will receive an error thrown, as will all future users.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate reject(error: Error) {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\tthis._state = AsyncIterableSourceState.DoneError;\n\t\tthis._error = error;\n\t\tthis._onStateChanged.fire();\n\t}\n}\n\nexport class CancelableAsyncIterableObject<T> extends AsyncIterableObject<T> {\n\tconstructor(\n\t\tprivate readonly _source: CancellationTokenSource,\n\t\texecutor: AsyncIterableExecutor<T>\n\t) {\n\t\tsuper(executor);\n\t}\n\n\tcancel(): void {\n\t\tthis._source.cancel();\n\t}\n}\n\nexport function createCancelableAsyncIterable<T>(callback: (token: CancellationToken) => AsyncIterable<T>): CancelableAsyncIterableObject<T> {\n\tconst source = new CancellationTokenSource();\n\tconst innerIterable = callback(source.token);\n\n\treturn new CancelableAsyncIterableObject<T>(source, async (emitter) => {\n\t\tconst subscription = source.token.onCancellationRequested(() => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\temitter.reject(new CancellationError());\n\t\t});\n\t\ttry {\n\t\t\tfor await (const item of innerIterable) {\n\t\t\t\tif (source.token.isCancellationRequested) {\n\t\t\t\t\t// canceled in the meantime\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\temitter.emitOne(item);\n\t\t\t}\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t} catch (err) {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\temitter.reject(err);\n\t\t}\n\t});\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equals } from 'vs/base/common/arrays';\nimport { isThenable } from 'vs/base/common/async';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isEqualOrParent } from 'vs/base/common/extpath';\nimport { LRUCache } from 'vs/base/common/map';\nimport { basename, extname, posix, sep } from 'vs/base/common/path';\nimport { isLinux } from 'vs/base/common/platform';\nimport { escapeRegExpCharacters, ltrim } from 'vs/base/common/strings';\n\nexport interface IRelativePattern {\n\n\t/**\n\t * A base file path to which this pattern will be matched against relatively.\n\t */\n\treadonly base: string;\n\n\t/**\n\t * A file glob pattern like `*.{ts,js}` that will be matched on file paths\n\t * relative to the base path.\n\t *\n\t * Example: Given a base of `/home/work/folder` and a file path of `/home/work/folder/index.js`,\n\t * the file glob pattern will match on `index.js`.\n\t */\n\treadonly pattern: string;\n}\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\ninterface SiblingClause {\n\twhen: string;\n}\n\nexport const GLOBSTAR = '**';\nexport const GLOB_SPLIT = '/';\n\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number, isLastPattern?: boolean): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep) 0-many times except when it's the last pattern\n\t\t\t//           in which case also matches (Path Sep followed by Path Val)\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}${isLastPattern ? `|${PATH_REGEX}${NO_PATH_REGEX}+` : ''})*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(segment => segment === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Treat globstar specially\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (previousSegmentWasGlobStar) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tregEx += starsToRegExp(2, index === segments.length - 1);\n\t\t\t}\n\n\t\t\t// Anything else, not globstar\n\t\t\telse {\n\n\t\t\t\t// States\n\t\t\t\tlet inBraces = false;\n\t\t\t\tlet braceVal = '';\n\n\t\t\t\tlet inBrackets = false;\n\t\t\t\tlet bracketVal = '';\n\n\t\t\t\tfor (const char of segment) {\n\n\t\t\t\t\t// Support brace expansion\n\t\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\t\tbraceVal += char;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support brackets\n\t\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t\t// range operator\n\t\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\t\tres = char;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\t\tres = '^';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tres = escapeRegExpCharacters(char);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbracketVal += res;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch (char) {\n\t\t\t\t\t\tcase '{':\n\t\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tcase '[':\n\t\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tcase '}': {\n\t\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(choice => parseRegExp(choice)).join('|')})`;\n\n\t\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase ']': {\n\t\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase '?':\n\t\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tcase '*':\n\t\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tregEx += escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Tail: Add the slash we had split on if there is more to\n\t\t\t\t// come and the remaining pattern is not a globstar\n\t\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after\n\t\t\t\t// some to be included in the RegEx to prevent a folder called\n\t\t\t\t// \"something\" to match as well.\n\t\t\t\tif (\n\t\t\t\t\tindex < segments.length - 1 &&\t\t\t// more segments to come after this\n\t\t\t\t\t(\n\t\t\t\t\t\tsegments[index + 1] !== GLOBSTAR ||\t// next segment is not **, or...\n\t\t\t\t\t\tindex + 2 < segments.length\t\t\t// ...next segment is ** but there is more segments after that\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tregEx += PATH_REGEX;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// update globstar state\n\t\t\tpreviousSegmentWasGlobStar = (segment === GLOBSTAR);\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trivial glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t\t\t\t\t\t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t\t\t\t\t\t// **/something\nconst T3 = /^{\\*\\*\\/\\*?[\\w\\.-]+\\/?(,\\*\\*\\/\\*?[\\w\\.-]+\\/?)*}$/; \t\t\t\t\t\t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/\\*?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/\\*?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t\t\t\t\t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t\t\t\t\t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The `ParsedExpression` returns a `Promise`\n// iff `hasSibling` returns a `Promise`.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\ninterface IGlobOptions {\n\n\t/**\n\t * Simplify patterns for use as exclusion filters during\n\t * tree traversal to skip entire subtrees. Cannot be used\n\t * outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename?: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\ninterface ParsedExpressionPattern {\n\t(path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle relative patterns\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivials\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) {\n\t\tparsedPattern = trivia1(pattern.substr(4), pattern); \t\t\t// common pattern: **/*.txt just need endsWith check\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { \t// common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { \t// common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { \t// common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\tconst wrappedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (!isEqualOrParent(path, arg2.base, !isLinux)) {\n\t\t\t// skip glob matching if `base` is not a parent of `path`\n\t\t\treturn null;\n\t\t}\n\n\t\t// Given we have checked `base` being a parent of `path`,\n\t\t// we can now remove the `base` portion of the `path`\n\t\t// and only match on the remaining path components\n\t\t// For that we try to extract the portion of the `path`\n\t\t// that comes after the `base` portion. We have to account\n\t\t// for the fact that `base` might end in a path separator\n\t\t// (https://github.com/microsoft/vscode/issues/162498)\n\n\t\treturn parsedPattern(ltrim(path.substr(arg2.base.length), sep), basename);\n\t};\n\n\t// Make sure to preserve associated metadata\n\twrappedPattern.allBasenames = parsedPattern.allBasenames;\n\twrappedPattern.allPaths = parsedPattern.allPaths;\n\twrappedPattern.basenames = parsedPattern.basenames;\n\twrappedPattern.patterns = parsedPattern.patterns;\n\n\treturn wrappedPattern;\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/*.txt just need endsWith check\nfunction trivia1(base: string, pattern: string): ParsedStringPattern {\n\treturn function (path: string, basename?: string) {\n\t\treturn typeof path === 'string' && path.endsWith(base) ? pattern : null;\n\t};\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, pattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (basename) {\n\t\t\treturn basename === base ? pattern : null;\n\t\t}\n\n\t\treturn path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? pattern : null;\n\t};\n\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [pattern];\n\tparsedPattern.allBasenames = basenames;\n\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1)\n\t\t.split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\n\tconst patternsLength = parsedPatterns.length;\n\tif (!patternsLength) {\n\t\treturn NULL;\n\t}\n\n\tif (patternsLength === 1) {\n\t\treturn parsedPatterns[0];\n\t}\n\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif (parsedPatterns[i](path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = withBasenames.allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, [] as string[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(targetPath: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst usingPosixSep = sep === posix.sep;\n\tconst nativePath = usingPosixSep ? targetPath : targetPath.replace(ALL_FORWARD_SLASHES, sep);\n\tconst nativePathEnd = sep + nativePath;\n\tconst targetPathEnd = posix.sep + targetPath;\n\n\tlet parsedPattern: ParsedStringPattern;\n\tif (matchPathEnds) {\n\t\tparsedPattern = function (path: string, basename?: string) {\n\t\t\treturn typeof path === 'string' && ((path === nativePath || path.endsWith(nativePathEnd)) || !usingPosixSep && (path === targetPath || path.endsWith(targetPathEnd))) ? pattern : null;\n\t\t};\n\t} else {\n\t\tparsedPattern = function (path: string, basename?: string) {\n\t\t\treturn typeof path === 'string' && (path === nativePath || (!usingPosixSep && path === targetPath)) ? pattern : null;\n\t\t};\n\t}\n\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + targetPath];\n\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * * `*` to match zero or more characters in a path segment\n * * `?` to match on one character in a path segment\n * * `**` to match any number of path segments, including none\n * * `{}` to group conditions (e.g. *.{ts,js} matches all TypeScript and JavaScript files)\n * * `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to match on `example.0`, `example.1`, …)\n * * `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]` to match on `example.a`, `example.b`, but not `example.0`)\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): boolean | string | null | Promise<string | null> {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * * `*` to match zero or more characters in a path segment\n * * `?` to match on one character in a path segment\n * * `**` to match any number of path segments, including none\n * * `{}` to group conditions (e.g. *.{ts,js} matches all TypeScript and JavaScript files)\n * * `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to match on `example.0`, `example.1`, …)\n * * `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]` to match on `example.a`, `example.b`, but not `example.0`)\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options?: IGlobOptions): ParsedPattern | ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): ParsedPattern | ParsedExpression {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\n\t\tconst resultPattern: ParsedPattern & { allBasenames?: string[]; allPaths?: string[] } = function (path: string, basename?: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\n\t\tif (parsedPattern.allBasenames) {\n\t\t\tresultPattern.allBasenames = parsedPattern.allBasenames;\n\t\t}\n\n\t\tif (parsedPattern.allPaths) {\n\t\t\tresultPattern.allPaths = parsedPattern.allPaths;\n\t\t}\n\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function isRelativePattern(obj: unknown): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern | undefined | null;\n\tif (!rp) {\n\t\treturn false;\n\t}\n\n\treturn typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst patternsLength = parsedPatterns.length;\n\tif (!patternsLength) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (patternsLength === 1) {\n\t\t\treturn parsedPatterns[0] as ParsedStringPattern;\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string) {\n\t\t\tlet resultPromises: Promise<string | null>[] | undefined = undefined;\n\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\tconst result = parsedPatterns[i](path, basename);\n\t\t\t\tif (typeof result === 'string') {\n\t\t\t\t\treturn result; // immediately return as soon as the first expression matches\n\t\t\t\t}\n\n\t\t\t\t// If the result is a promise, we have to keep it for\n\t\t\t\t// later processing and await the result properly.\n\t\t\t\tif (isThenable(result)) {\n\t\t\t\t\tif (!resultPromises) {\n\t\t\t\t\t\tresultPromises = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tresultPromises.push(result);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// With result promises, we have to loop over each and\n\t\t\t// await the result before we can return any result.\n\t\t\tif (resultPromises) {\n\t\t\t\treturn (async () => {\n\t\t\t\t\tfor (const resultPromise of resultPromises) {\n\t\t\t\t\t\tconst result = await resultPromise;\n\t\t\t\t\t\tif (typeof result === 'string') {\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\t\t\t\t})();\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = withBasenames.allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, [] as string[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, base?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\t\tlet resultPromises: Promise<string | null>[] | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!base) {\n\t\t\t\t\tbase = basename(path);\n\t\t\t\t}\n\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = base.substr(0, base.length - extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst result = parsedPattern(path, base, name, hasSibling);\n\t\t\tif (typeof result === 'string') {\n\t\t\t\treturn result; // immediately return as soon as the first expression matches\n\t\t\t}\n\n\t\t\t// If the result is a promise, we have to keep it for\n\t\t\t// later processing and await the result properly.\n\t\t\tif (isThenable(result)) {\n\t\t\t\tif (!resultPromises) {\n\t\t\t\t\tresultPromises = [];\n\t\t\t\t}\n\n\t\t\t\tresultPromises.push(result);\n\t\t\t}\n\t\t}\n\n\t\t// With result promises, we have to loop over each and\n\t\t// await the result before we can return any result.\n\t\tif (resultPromises) {\n\t\t\treturn (async () => {\n\t\t\t\tfor (const resultPromise of resultPromises) {\n\t\t\t\t\tconst result = await resultPromise;\n\t\t\t\t\tif (typeof result === 'string') {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t})();\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = withBasenames.allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, [] as string[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: boolean | SiblingClause, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = value.when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', () => name!);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(match => match ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\n\t\t\tresult.requiresSiblings = true;\n\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, [] as string[]);\n\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, [] as string[]);\n\t}\n\n\tconst aggregate: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbasename = path.substr(i);\n\t\t}\n\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\n\treturn aggregatedPatterns;\n}\n\nexport function patternsEquals(patternsA: Array<string | IRelativePattern> | undefined, patternsB: Array<string | IRelativePattern> | undefined): boolean {\n\treturn equals(patternsA, patternsB, (a, b) => {\n\t\tif (typeof a === 'string' && typeof b === 'string') {\n\t\t\treturn a === b;\n\t\t}\n\n\t\tif (typeof a !== 'string' && typeof b !== 'string') {\n\t\t\treturn a.base === b.base && a.pattern === b.pattern;\n\t\t}\n\n\t\treturn false;\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\n\nexport const enum StringEOL {\n\tUnknown = 0,\n\tInvalid = 3,\n\tLF = 1,\n\tCRLF = 2\n}\n\nexport function countEOL(text: string): [number, number, number, StringEOL] {\n\tlet eolCount = 0;\n\tlet firstLineLength = 0;\n\tlet lastLineStart = 0;\n\tlet eol: StringEOL = StringEOL.Unknown;\n\tfor (let i = 0, len = text.length; i < len; i++) {\n\t\tconst chr = text.charCodeAt(i);\n\n\t\tif (chr === CharCode.CarriageReturn) {\n\t\t\tif (eolCount === 0) {\n\t\t\t\tfirstLineLength = i;\n\t\t\t}\n\t\t\teolCount++;\n\t\t\tif (i + 1 < len && text.charCodeAt(i + 1) === CharCode.LineFeed) {\n\t\t\t\t// \\r\\n... case\n\t\t\t\teol |= StringEOL.CRLF;\n\t\t\t\ti++; // skip \\n\n\t\t\t} else {\n\t\t\t\t// \\r... case\n\t\t\t\teol |= StringEOL.Invalid;\n\t\t\t}\n\t\t\tlastLineStart = i + 1;\n\t\t} else if (chr === CharCode.LineFeed) {\n\t\t\t// \\n... case\n\t\t\teol |= StringEOL.LF;\n\t\t\tif (eolCount === 0) {\n\t\t\t\tfirstLineLength = i;\n\t\t\t}\n\t\t\teolCount++;\n\t\t\tlastLineStart = i + 1;\n\t\t}\n\t}\n\tif (eolCount === 0) {\n\t\tfirstLineLength = text.length;\n\t}\n\treturn [eolCount, firstLineLength, text.length - lastLineStart, eol];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as platform from 'vs/base/common/platform';\nimport * as buffer from 'vs/base/common/buffer';\n\nlet _utf16LE_TextDecoder: TextDecoder | null;\nfunction getUTF16LE_TextDecoder(): TextDecoder {\n\tif (!_utf16LE_TextDecoder) {\n\t\t_utf16LE_TextDecoder = new TextDecoder('UTF-16LE');\n\t}\n\treturn _utf16LE_TextDecoder;\n}\n\nlet _utf16BE_TextDecoder: TextDecoder | null;\nfunction getUTF16BE_TextDecoder(): TextDecoder {\n\tif (!_utf16BE_TextDecoder) {\n\t\t_utf16BE_TextDecoder = new TextDecoder('UTF-16BE');\n\t}\n\treturn _utf16BE_TextDecoder;\n}\n\nlet _platformTextDecoder: TextDecoder | null;\nexport function getPlatformTextDecoder(): TextDecoder {\n\tif (!_platformTextDecoder) {\n\t\t_platformTextDecoder = platform.isLittleEndian() ? getUTF16LE_TextDecoder() : getUTF16BE_TextDecoder();\n\t}\n\treturn _platformTextDecoder;\n}\n\nexport function decodeUTF16LE(source: Uint8Array, offset: number, len: number): string {\n\tconst view = new Uint16Array(source.buffer, offset, len);\n\tif (len > 0 && (view[0] === 0xFEFF || view[0] === 0xFFFE)) {\n\t\t// UTF16 sometimes starts with a BOM https://de.wikipedia.org/wiki/Byte_Order_Mark\n\t\t// It looks like TextDecoder.decode will eat up a leading BOM (0xFEFF or 0xFFFE)\n\t\t// We don't want that behavior because we know the string is UTF16LE and the BOM should be maintained\n\t\t// So we use the manual decoder\n\t\treturn compatDecodeUTF16LE(source, offset, len);\n\t}\n\treturn getUTF16LE_TextDecoder().decode(view);\n}\n\nfunction compatDecodeUTF16LE(source: Uint8Array, offset: number, len: number): string {\n\tconst result: string[] = [];\n\tlet resultLen = 0;\n\tfor (let i = 0; i < len; i++) {\n\t\tconst charCode = buffer.readUInt16LE(source, offset); offset += 2;\n\t\tresult[resultLen++] = String.fromCharCode(charCode);\n\t}\n\treturn result.join('');\n}\n\nexport class StringBuilder {\n\n\tprivate readonly _capacity: number;\n\tprivate readonly _buffer: Uint16Array;\n\n\tprivate _completedStrings: string[] | null;\n\tprivate _bufferLength: number;\n\n\tconstructor(capacity: number) {\n\t\tthis._capacity = capacity | 0;\n\t\tthis._buffer = new Uint16Array(this._capacity);\n\n\t\tthis._completedStrings = null;\n\t\tthis._bufferLength = 0;\n\t}\n\n\tpublic reset(): void {\n\t\tthis._completedStrings = null;\n\t\tthis._bufferLength = 0;\n\t}\n\n\tpublic build(): string {\n\t\tif (this._completedStrings !== null) {\n\t\t\tthis._flushBuffer();\n\t\t\treturn this._completedStrings.join('');\n\t\t}\n\t\treturn this._buildBuffer();\n\t}\n\n\tprivate _buildBuffer(): string {\n\t\tif (this._bufferLength === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst view = new Uint16Array(this._buffer.buffer, 0, this._bufferLength);\n\t\treturn getPlatformTextDecoder().decode(view);\n\t}\n\n\tprivate _flushBuffer(): void {\n\t\tconst bufferString = this._buildBuffer();\n\t\tthis._bufferLength = 0;\n\n\t\tif (this._completedStrings === null) {\n\t\t\tthis._completedStrings = [bufferString];\n\t\t} else {\n\t\t\tthis._completedStrings[this._completedStrings.length] = bufferString;\n\t\t}\n\t}\n\n\t/**\n\t * Append a char code (<2^16)\n\t */\n\tpublic appendCharCode(charCode: number): void {\n\t\tconst remainingSpace = this._capacity - this._bufferLength;\n\n\t\tif (remainingSpace <= 1) {\n\t\t\tif (remainingSpace === 0 || strings.isHighSurrogate(charCode)) {\n\t\t\t\tthis._flushBuffer();\n\t\t\t}\n\t\t}\n\n\t\tthis._buffer[this._bufferLength++] = charCode;\n\t}\n\n\t/**\n\t * Append an ASCII char code (<2^8)\n\t */\n\tpublic appendASCIICharCode(charCode: number): void {\n\t\tif (this._bufferLength === this._capacity) {\n\t\t\t// buffer is full\n\t\t\tthis._flushBuffer();\n\t\t}\n\t\tthis._buffer[this._bufferLength++] = charCode;\n\t}\n\n\tpublic appendString(str: string): void {\n\t\tconst strLen = str.length;\n\n\t\tif (this._bufferLength + strLen >= this._capacity) {\n\t\t\t// This string does not fit in the remaining buffer space\n\n\t\t\tthis._flushBuffer();\n\t\t\tthis._completedStrings![this._completedStrings!.length] = str;\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let i = 0; i < strLen; i++) {\n\t\t\tthis._buffer[this._bufferLength++] = str.charCodeAt(i);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as buffer from 'vs/base/common/buffer';\nimport { decodeUTF16LE } from 'vs/editor/common/core/stringBuilder';\n\nfunction escapeNewLine(str: string): string {\n\treturn (\n\t\tstr\n\t\t\t.replace(/\\n/g, '\\\\n')\n\t\t\t.replace(/\\r/g, '\\\\r')\n\t);\n}\n\nexport class TextChange {\n\n\tpublic get oldLength(): number {\n\t\treturn this.oldText.length;\n\t}\n\n\tpublic get oldEnd(): number {\n\t\treturn this.oldPosition + this.oldText.length;\n\t}\n\n\tpublic get newLength(): number {\n\t\treturn this.newText.length;\n\t}\n\n\tpublic get newEnd(): number {\n\t\treturn this.newPosition + this.newText.length;\n\t}\n\n\tconstructor(\n\t\tpublic readonly oldPosition: number,\n\t\tpublic readonly oldText: string,\n\t\tpublic readonly newPosition: number,\n\t\tpublic readonly newText: string\n\t) { }\n\n\tpublic toString(): string {\n\t\tif (this.oldText.length === 0) {\n\t\t\treturn `(insert@${this.oldPosition} \"${escapeNewLine(this.newText)}\")`;\n\t\t}\n\t\tif (this.newText.length === 0) {\n\t\t\treturn `(delete@${this.oldPosition} \"${escapeNewLine(this.oldText)}\")`;\n\t\t}\n\t\treturn `(replace@${this.oldPosition} \"${escapeNewLine(this.oldText)}\" with \"${escapeNewLine(this.newText)}\")`;\n\t}\n\n\tprivate static _writeStringSize(str: string): number {\n\t\treturn (\n\t\t\t4 + 2 * str.length\n\t\t);\n\t}\n\n\tprivate static _writeString(b: Uint8Array, str: string, offset: number): number {\n\t\tconst len = str.length;\n\t\tbuffer.writeUInt32BE(b, len, offset); offset += 4;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tbuffer.writeUInt16LE(b, str.charCodeAt(i), offset); offset += 2;\n\t\t}\n\t\treturn offset;\n\t}\n\n\tprivate static _readString(b: Uint8Array, offset: number): string {\n\t\tconst len = buffer.readUInt32BE(b, offset); offset += 4;\n\t\treturn decodeUTF16LE(b, offset, len);\n\t}\n\n\tpublic writeSize(): number {\n\t\treturn (\n\t\t\t+ 4 // oldPosition\n\t\t\t+ 4 // newPosition\n\t\t\t+ TextChange._writeStringSize(this.oldText)\n\t\t\t+ TextChange._writeStringSize(this.newText)\n\t\t);\n\t}\n\n\tpublic write(b: Uint8Array, offset: number): number {\n\t\tbuffer.writeUInt32BE(b, this.oldPosition, offset); offset += 4;\n\t\tbuffer.writeUInt32BE(b, this.newPosition, offset); offset += 4;\n\t\toffset = TextChange._writeString(b, this.oldText, offset);\n\t\toffset = TextChange._writeString(b, this.newText, offset);\n\t\treturn offset;\n\t}\n\n\tpublic static read(b: Uint8Array, offset: number, dest: TextChange[]): number {\n\t\tconst oldPosition = buffer.readUInt32BE(b, offset); offset += 4;\n\t\tconst newPosition = buffer.readUInt32BE(b, offset); offset += 4;\n\t\tconst oldText = TextChange._readString(b, offset); offset += TextChange._writeStringSize(oldText);\n\t\tconst newText = TextChange._readString(b, offset); offset += TextChange._writeStringSize(newText);\n\t\tdest.push(new TextChange(oldPosition, oldText, newPosition, newText));\n\t\treturn offset;\n\t}\n}\n\nexport function compressConsecutiveTextChanges(prevEdits: TextChange[] | null, currEdits: TextChange[]): TextChange[] {\n\tif (prevEdits === null || prevEdits.length === 0) {\n\t\treturn currEdits;\n\t}\n\tconst compressor = new TextChangeCompressor(prevEdits, currEdits);\n\treturn compressor.compress();\n}\n\nclass TextChangeCompressor {\n\n\tprivate _prevEdits: TextChange[];\n\tprivate _currEdits: TextChange[];\n\n\tprivate _result: TextChange[];\n\tprivate _resultLen: number;\n\n\tprivate _prevLen: number;\n\tprivate _prevDeltaOffset: number;\n\n\tprivate _currLen: number;\n\tprivate _currDeltaOffset: number;\n\n\tconstructor(prevEdits: TextChange[], currEdits: TextChange[]) {\n\t\tthis._prevEdits = prevEdits;\n\t\tthis._currEdits = currEdits;\n\n\t\tthis._result = [];\n\t\tthis._resultLen = 0;\n\n\t\tthis._prevLen = this._prevEdits.length;\n\t\tthis._prevDeltaOffset = 0;\n\n\t\tthis._currLen = this._currEdits.length;\n\t\tthis._currDeltaOffset = 0;\n\t}\n\n\tpublic compress(): TextChange[] {\n\t\tlet prevIndex = 0;\n\t\tlet currIndex = 0;\n\n\t\tlet prevEdit = this._getPrev(prevIndex);\n\t\tlet currEdit = this._getCurr(currIndex);\n\n\t\twhile (prevIndex < this._prevLen || currIndex < this._currLen) {\n\n\t\t\tif (prevEdit === null) {\n\t\t\t\tthis._acceptCurr(currEdit!);\n\t\t\t\tcurrEdit = this._getCurr(++currIndex);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (currEdit === null) {\n\t\t\t\tthis._acceptPrev(prevEdit);\n\t\t\t\tprevEdit = this._getPrev(++prevIndex);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (currEdit.oldEnd <= prevEdit.newPosition) {\n\t\t\t\tthis._acceptCurr(currEdit);\n\t\t\t\tcurrEdit = this._getCurr(++currIndex);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (prevEdit.newEnd <= currEdit.oldPosition) {\n\t\t\t\tthis._acceptPrev(prevEdit);\n\t\t\t\tprevEdit = this._getPrev(++prevIndex);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (currEdit.oldPosition < prevEdit.newPosition) {\n\t\t\t\tconst [e1, e2] = TextChangeCompressor._splitCurr(currEdit, prevEdit.newPosition - currEdit.oldPosition);\n\t\t\t\tthis._acceptCurr(e1);\n\t\t\t\tcurrEdit = e2;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (prevEdit.newPosition < currEdit.oldPosition) {\n\t\t\t\tconst [e1, e2] = TextChangeCompressor._splitPrev(prevEdit, currEdit.oldPosition - prevEdit.newPosition);\n\t\t\t\tthis._acceptPrev(e1);\n\t\t\t\tprevEdit = e2;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// At this point, currEdit.oldPosition === prevEdit.newPosition\n\n\t\t\tlet mergePrev: TextChange;\n\t\t\tlet mergeCurr: TextChange;\n\n\t\t\tif (currEdit.oldEnd === prevEdit.newEnd) {\n\t\t\t\tmergePrev = prevEdit;\n\t\t\t\tmergeCurr = currEdit;\n\t\t\t\tprevEdit = this._getPrev(++prevIndex);\n\t\t\t\tcurrEdit = this._getCurr(++currIndex);\n\t\t\t} else if (currEdit.oldEnd < prevEdit.newEnd) {\n\t\t\t\tconst [e1, e2] = TextChangeCompressor._splitPrev(prevEdit, currEdit.oldLength);\n\t\t\t\tmergePrev = e1;\n\t\t\t\tmergeCurr = currEdit;\n\t\t\t\tprevEdit = e2;\n\t\t\t\tcurrEdit = this._getCurr(++currIndex);\n\t\t\t} else {\n\t\t\t\tconst [e1, e2] = TextChangeCompressor._splitCurr(currEdit, prevEdit.newLength);\n\t\t\t\tmergePrev = prevEdit;\n\t\t\t\tmergeCurr = e1;\n\t\t\t\tprevEdit = this._getPrev(++prevIndex);\n\t\t\t\tcurrEdit = e2;\n\t\t\t}\n\n\t\t\tthis._result[this._resultLen++] = new TextChange(\n\t\t\t\tmergePrev.oldPosition,\n\t\t\t\tmergePrev.oldText,\n\t\t\t\tmergeCurr.newPosition,\n\t\t\t\tmergeCurr.newText\n\t\t\t);\n\t\t\tthis._prevDeltaOffset += mergePrev.newLength - mergePrev.oldLength;\n\t\t\tthis._currDeltaOffset += mergeCurr.newLength - mergeCurr.oldLength;\n\t\t}\n\n\t\tconst merged = TextChangeCompressor._merge(this._result);\n\t\tconst cleaned = TextChangeCompressor._removeNoOps(merged);\n\t\treturn cleaned;\n\t}\n\n\tprivate _acceptCurr(currEdit: TextChange): void {\n\t\tthis._result[this._resultLen++] = TextChangeCompressor._rebaseCurr(this._prevDeltaOffset, currEdit);\n\t\tthis._currDeltaOffset += currEdit.newLength - currEdit.oldLength;\n\t}\n\n\tprivate _getCurr(currIndex: number): TextChange | null {\n\t\treturn (currIndex < this._currLen ? this._currEdits[currIndex] : null);\n\t}\n\n\tprivate _acceptPrev(prevEdit: TextChange): void {\n\t\tthis._result[this._resultLen++] = TextChangeCompressor._rebasePrev(this._currDeltaOffset, prevEdit);\n\t\tthis._prevDeltaOffset += prevEdit.newLength - prevEdit.oldLength;\n\t}\n\n\tprivate _getPrev(prevIndex: number): TextChange | null {\n\t\treturn (prevIndex < this._prevLen ? this._prevEdits[prevIndex] : null);\n\t}\n\n\tprivate static _rebaseCurr(prevDeltaOffset: number, currEdit: TextChange): TextChange {\n\t\treturn new TextChange(\n\t\t\tcurrEdit.oldPosition - prevDeltaOffset,\n\t\t\tcurrEdit.oldText,\n\t\t\tcurrEdit.newPosition,\n\t\t\tcurrEdit.newText\n\t\t);\n\t}\n\n\tprivate static _rebasePrev(currDeltaOffset: number, prevEdit: TextChange): TextChange {\n\t\treturn new TextChange(\n\t\t\tprevEdit.oldPosition,\n\t\t\tprevEdit.oldText,\n\t\t\tprevEdit.newPosition + currDeltaOffset,\n\t\t\tprevEdit.newText\n\t\t);\n\t}\n\n\tprivate static _splitPrev(edit: TextChange, offset: number): [TextChange, TextChange] {\n\t\tconst preText = edit.newText.substr(0, offset);\n\t\tconst postText = edit.newText.substr(offset);\n\n\t\treturn [\n\t\t\tnew TextChange(\n\t\t\t\tedit.oldPosition,\n\t\t\t\tedit.oldText,\n\t\t\t\tedit.newPosition,\n\t\t\t\tpreText\n\t\t\t),\n\t\t\tnew TextChange(\n\t\t\t\tedit.oldEnd,\n\t\t\t\t'',\n\t\t\t\tedit.newPosition + offset,\n\t\t\t\tpostText\n\t\t\t)\n\t\t];\n\t}\n\n\tprivate static _splitCurr(edit: TextChange, offset: number): [TextChange, TextChange] {\n\t\tconst preText = edit.oldText.substr(0, offset);\n\t\tconst postText = edit.oldText.substr(offset);\n\n\t\treturn [\n\t\t\tnew TextChange(\n\t\t\t\tedit.oldPosition,\n\t\t\t\tpreText,\n\t\t\t\tedit.newPosition,\n\t\t\t\tedit.newText\n\t\t\t),\n\t\t\tnew TextChange(\n\t\t\t\tedit.oldPosition + offset,\n\t\t\t\tpostText,\n\t\t\t\tedit.newEnd,\n\t\t\t\t''\n\t\t\t)\n\t\t];\n\t}\n\n\tprivate static _merge(edits: TextChange[]): TextChange[] {\n\t\tif (edits.length === 0) {\n\t\t\treturn edits;\n\t\t}\n\n\t\tconst result: TextChange[] = [];\n\t\tlet resultLen = 0;\n\n\t\tlet prev = edits[0];\n\t\tfor (let i = 1; i < edits.length; i++) {\n\t\t\tconst curr = edits[i];\n\n\t\t\tif (prev.oldEnd === curr.oldPosition) {\n\t\t\t\t// Merge into `prev`\n\t\t\t\tprev = new TextChange(\n\t\t\t\t\tprev.oldPosition,\n\t\t\t\t\tprev.oldText + curr.oldText,\n\t\t\t\t\tprev.newPosition,\n\t\t\t\t\tprev.newText + curr.newText\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresult[resultLen++] = prev;\n\t\t\t\tprev = curr;\n\t\t\t}\n\t\t}\n\t\tresult[resultLen++] = prev;\n\n\t\treturn result;\n\t}\n\n\tprivate static _removeNoOps(edits: TextChange[]): TextChange[] {\n\t\tif (edits.length === 0) {\n\t\t\treturn edits;\n\t\t}\n\n\t\tconst result: TextChange[] = [];\n\t\tlet resultLen = 0;\n\n\t\tfor (let i = 0; i < edits.length; i++) {\n\t\t\tconst edit = edits[i];\n\n\t\t\tif (edit.oldText === edit.newText) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tresult[resultLen++] = edit;\n\t\t}\n\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Piece, PieceTreeBase } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeBase';\n\nexport class TreeNode {\n\tparent: TreeNode;\n\tleft: TreeNode;\n\tright: TreeNode;\n\tcolor: NodeColor;\n\n\t// Piece\n\tpiece: Piece;\n\tsize_left: number; // size of the left subtree (not inorder)\n\tlf_left: number; // line feeds cnt in the left subtree (not in order)\n\n\tconstructor(piece: Piece, color: NodeColor) {\n\t\tthis.piece = piece;\n\t\tthis.color = color;\n\t\tthis.size_left = 0;\n\t\tthis.lf_left = 0;\n\t\tthis.parent = this;\n\t\tthis.left = this;\n\t\tthis.right = this;\n\t}\n\n\tpublic next(): TreeNode {\n\t\tif (this.right !== SENTINEL) {\n\t\t\treturn leftest(this.right);\n\t\t}\n\n\t\tlet node: TreeNode = this;\n\n\t\twhile (node.parent !== SENTINEL) {\n\t\t\tif (node.parent.left === node) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\tif (node.parent === SENTINEL) {\n\t\t\treturn SENTINEL;\n\t\t} else {\n\t\t\treturn node.parent;\n\t\t}\n\t}\n\n\tpublic prev(): TreeNode {\n\t\tif (this.left !== SENTINEL) {\n\t\t\treturn righttest(this.left);\n\t\t}\n\n\t\tlet node: TreeNode = this;\n\n\t\twhile (node.parent !== SENTINEL) {\n\t\t\tif (node.parent.right === node) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\tif (node.parent === SENTINEL) {\n\t\t\treturn SENTINEL;\n\t\t} else {\n\t\t\treturn node.parent;\n\t\t}\n\t}\n\n\tpublic detach(): void {\n\t\tthis.parent = null!;\n\t\tthis.left = null!;\n\t\tthis.right = null!;\n\t}\n}\n\nexport const enum NodeColor {\n\tBlack = 0,\n\tRed = 1,\n}\n\nexport const SENTINEL: TreeNode = new TreeNode(null!, NodeColor.Black);\nSENTINEL.parent = SENTINEL;\nSENTINEL.left = SENTINEL;\nSENTINEL.right = SENTINEL;\nSENTINEL.color = NodeColor.Black;\n\nexport function leftest(node: TreeNode): TreeNode {\n\twhile (node.left !== SENTINEL) {\n\t\tnode = node.left;\n\t}\n\treturn node;\n}\n\nexport function righttest(node: TreeNode): TreeNode {\n\twhile (node.right !== SENTINEL) {\n\t\tnode = node.right;\n\t}\n\treturn node;\n}\n\nfunction calculateSize(node: TreeNode): number {\n\tif (node === SENTINEL) {\n\t\treturn 0;\n\t}\n\n\treturn node.size_left + node.piece.length + calculateSize(node.right);\n}\n\nfunction calculateLF(node: TreeNode): number {\n\tif (node === SENTINEL) {\n\t\treturn 0;\n\t}\n\n\treturn node.lf_left + node.piece.lineFeedCnt + calculateLF(node.right);\n}\n\nfunction resetSentinel(): void {\n\tSENTINEL.parent = SENTINEL;\n}\n\nexport function leftRotate(tree: PieceTreeBase, x: TreeNode) {\n\tconst y = x.right;\n\n\t// fix size_left\n\ty.size_left += x.size_left + (x.piece ? x.piece.length : 0);\n\ty.lf_left += x.lf_left + (x.piece ? x.piece.lineFeedCnt : 0);\n\tx.right = y.left;\n\n\tif (y.left !== SENTINEL) {\n\t\ty.left.parent = x;\n\t}\n\ty.parent = x.parent;\n\tif (x.parent === SENTINEL) {\n\t\ttree.root = y;\n\t} else if (x.parent.left === x) {\n\t\tx.parent.left = y;\n\t} else {\n\t\tx.parent.right = y;\n\t}\n\ty.left = x;\n\tx.parent = y;\n}\n\nexport function rightRotate(tree: PieceTreeBase, y: TreeNode) {\n\tconst x = y.left;\n\ty.left = x.right;\n\tif (x.right !== SENTINEL) {\n\t\tx.right.parent = y;\n\t}\n\tx.parent = y.parent;\n\n\t// fix size_left\n\ty.size_left -= x.size_left + (x.piece ? x.piece.length : 0);\n\ty.lf_left -= x.lf_left + (x.piece ? x.piece.lineFeedCnt : 0);\n\n\tif (y.parent === SENTINEL) {\n\t\ttree.root = x;\n\t} else if (y === y.parent.right) {\n\t\ty.parent.right = x;\n\t} else {\n\t\ty.parent.left = x;\n\t}\n\n\tx.right = y;\n\ty.parent = x;\n}\n\nexport function rbDelete(tree: PieceTreeBase, z: TreeNode) {\n\tlet x: TreeNode;\n\tlet y: TreeNode;\n\n\tif (z.left === SENTINEL) {\n\t\ty = z;\n\t\tx = y.right;\n\t} else if (z.right === SENTINEL) {\n\t\ty = z;\n\t\tx = y.left;\n\t} else {\n\t\ty = leftest(z.right);\n\t\tx = y.right;\n\t}\n\n\tif (y === tree.root) {\n\t\ttree.root = x;\n\n\t\t// if x is null, we are removing the only node\n\t\tx.color = NodeColor.Black;\n\t\tz.detach();\n\t\tresetSentinel();\n\t\ttree.root.parent = SENTINEL;\n\n\t\treturn;\n\t}\n\n\tconst yWasRed = (y.color === NodeColor.Red);\n\n\tif (y === y.parent.left) {\n\t\ty.parent.left = x;\n\t} else {\n\t\ty.parent.right = x;\n\t}\n\n\tif (y === z) {\n\t\tx.parent = y.parent;\n\t\trecomputeTreeMetadata(tree, x);\n\t} else {\n\t\tif (y.parent === z) {\n\t\t\tx.parent = y;\n\t\t} else {\n\t\t\tx.parent = y.parent;\n\t\t}\n\n\t\t// as we make changes to x's hierarchy, update size_left of subtree first\n\t\trecomputeTreeMetadata(tree, x);\n\n\t\ty.left = z.left;\n\t\ty.right = z.right;\n\t\ty.parent = z.parent;\n\t\ty.color = z.color;\n\n\t\tif (z === tree.root) {\n\t\t\ttree.root = y;\n\t\t} else {\n\t\t\tif (z === z.parent.left) {\n\t\t\t\tz.parent.left = y;\n\t\t\t} else {\n\t\t\t\tz.parent.right = y;\n\t\t\t}\n\t\t}\n\n\t\tif (y.left !== SENTINEL) {\n\t\t\ty.left.parent = y;\n\t\t}\n\t\tif (y.right !== SENTINEL) {\n\t\t\ty.right.parent = y;\n\t\t}\n\t\t// update metadata\n\t\t// we replace z with y, so in this sub tree, the length change is z.item.length\n\t\ty.size_left = z.size_left;\n\t\ty.lf_left = z.lf_left;\n\t\trecomputeTreeMetadata(tree, y);\n\t}\n\n\tz.detach();\n\n\tif (x.parent.left === x) {\n\t\tconst newSizeLeft = calculateSize(x);\n\t\tconst newLFLeft = calculateLF(x);\n\t\tif (newSizeLeft !== x.parent.size_left || newLFLeft !== x.parent.lf_left) {\n\t\t\tconst delta = newSizeLeft - x.parent.size_left;\n\t\t\tconst lf_delta = newLFLeft - x.parent.lf_left;\n\t\t\tx.parent.size_left = newSizeLeft;\n\t\t\tx.parent.lf_left = newLFLeft;\n\t\t\tupdateTreeMetadata(tree, x.parent, delta, lf_delta);\n\t\t}\n\t}\n\n\trecomputeTreeMetadata(tree, x.parent);\n\n\tif (yWasRed) {\n\t\tresetSentinel();\n\t\treturn;\n\t}\n\n\t// RB-DELETE-FIXUP\n\tlet w: TreeNode;\n\twhile (x !== tree.root && x.color === NodeColor.Black) {\n\t\tif (x === x.parent.left) {\n\t\t\tw = x.parent.right;\n\n\t\t\tif (w.color === NodeColor.Red) {\n\t\t\t\tw.color = NodeColor.Black;\n\t\t\t\tx.parent.color = NodeColor.Red;\n\t\t\t\tleftRotate(tree, x.parent);\n\t\t\t\tw = x.parent.right;\n\t\t\t}\n\n\t\t\tif (w.left.color === NodeColor.Black && w.right.color === NodeColor.Black) {\n\t\t\t\tw.color = NodeColor.Red;\n\t\t\t\tx = x.parent;\n\t\t\t} else {\n\t\t\t\tif (w.right.color === NodeColor.Black) {\n\t\t\t\t\tw.left.color = NodeColor.Black;\n\t\t\t\t\tw.color = NodeColor.Red;\n\t\t\t\t\trightRotate(tree, w);\n\t\t\t\t\tw = x.parent.right;\n\t\t\t\t}\n\n\t\t\t\tw.color = x.parent.color;\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\tw.right.color = NodeColor.Black;\n\t\t\t\tleftRotate(tree, x.parent);\n\t\t\t\tx = tree.root;\n\t\t\t}\n\t\t} else {\n\t\t\tw = x.parent.left;\n\n\t\t\tif (w.color === NodeColor.Red) {\n\t\t\t\tw.color = NodeColor.Black;\n\t\t\t\tx.parent.color = NodeColor.Red;\n\t\t\t\trightRotate(tree, x.parent);\n\t\t\t\tw = x.parent.left;\n\t\t\t}\n\n\t\t\tif (w.left.color === NodeColor.Black && w.right.color === NodeColor.Black) {\n\t\t\t\tw.color = NodeColor.Red;\n\t\t\t\tx = x.parent;\n\n\t\t\t} else {\n\t\t\t\tif (w.left.color === NodeColor.Black) {\n\t\t\t\t\tw.right.color = NodeColor.Black;\n\t\t\t\t\tw.color = NodeColor.Red;\n\t\t\t\t\tleftRotate(tree, w);\n\t\t\t\t\tw = x.parent.left;\n\t\t\t\t}\n\n\t\t\t\tw.color = x.parent.color;\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\tw.left.color = NodeColor.Black;\n\t\t\t\trightRotate(tree, x.parent);\n\t\t\t\tx = tree.root;\n\t\t\t}\n\t\t}\n\t}\n\tx.color = NodeColor.Black;\n\tresetSentinel();\n}\n\nexport function fixInsert(tree: PieceTreeBase, x: TreeNode) {\n\trecomputeTreeMetadata(tree, x);\n\n\twhile (x !== tree.root && x.parent.color === NodeColor.Red) {\n\t\tif (x.parent === x.parent.parent.left) {\n\t\t\tconst y = x.parent.parent.right;\n\n\t\t\tif (y.color === NodeColor.Red) {\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\ty.color = NodeColor.Black;\n\t\t\t\tx.parent.parent.color = NodeColor.Red;\n\t\t\t\tx = x.parent.parent;\n\t\t\t} else {\n\t\t\t\tif (x === x.parent.right) {\n\t\t\t\t\tx = x.parent;\n\t\t\t\t\tleftRotate(tree, x);\n\t\t\t\t}\n\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\tx.parent.parent.color = NodeColor.Red;\n\t\t\t\trightRotate(tree, x.parent.parent);\n\t\t\t}\n\t\t} else {\n\t\t\tconst y = x.parent.parent.left;\n\n\t\t\tif (y.color === NodeColor.Red) {\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\ty.color = NodeColor.Black;\n\t\t\t\tx.parent.parent.color = NodeColor.Red;\n\t\t\t\tx = x.parent.parent;\n\t\t\t} else {\n\t\t\t\tif (x === x.parent.left) {\n\t\t\t\t\tx = x.parent;\n\t\t\t\t\trightRotate(tree, x);\n\t\t\t\t}\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\tx.parent.parent.color = NodeColor.Red;\n\t\t\t\tleftRotate(tree, x.parent.parent);\n\t\t\t}\n\t\t}\n\t}\n\n\ttree.root.color = NodeColor.Black;\n}\n\nexport function updateTreeMetadata(tree: PieceTreeBase, x: TreeNode, delta: number, lineFeedCntDelta: number): void {\n\t// node length change or line feed count change\n\twhile (x !== tree.root && x !== SENTINEL) {\n\t\tif (x.parent.left === x) {\n\t\t\tx.parent.size_left += delta;\n\t\t\tx.parent.lf_left += lineFeedCntDelta;\n\t\t}\n\n\t\tx = x.parent;\n\t}\n}\n\nexport function recomputeTreeMetadata(tree: PieceTreeBase, x: TreeNode) {\n\tlet delta = 0;\n\tlet lf_delta = 0;\n\tif (x === tree.root) {\n\t\treturn;\n\t}\n\n\t// go upwards till the node whose left subtree is changed.\n\twhile (x !== tree.root && x === x.parent.right) {\n\t\tx = x.parent;\n\t}\n\n\tif (x === tree.root) {\n\t\t// well, it means we add a node to the end (inorder)\n\t\treturn;\n\t}\n\n\t// x is the node whose right subtree is changed.\n\tx = x.parent;\n\n\tdelta = calculateSize(x.left) - x.size_left;\n\tlf_delta = calculateLF(x.left) - x.lf_left;\n\tx.size_left += delta;\n\tx.lf_left += lf_delta;\n\n\n\t// go upwards till root. O(logN)\n\twhile (x !== tree.root && (delta !== 0 || lf_delta !== 0)) {\n\t\tif (x.parent.left === x) {\n\t\t\tx.parent.size_left += delta;\n\t\t\tx.parent.lf_left += lf_delta;\n\t\t}\n\n\t\tx = x.parent;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { FindMatch, ITextSnapshot, SearchData } from 'vs/editor/common/model';\nimport { NodeColor, SENTINEL, TreeNode, fixInsert, leftest, rbDelete, righttest, updateTreeMetadata } from 'vs/editor/common/model/pieceTreeTextBuffer/rbTreeBase';\nimport { Searcher, createFindMatch, isValidMatch } from 'vs/editor/common/model/textModelSearch';\n\n// const lfRegex = new RegExp(/\\r\\n|\\r|\\n/g);\nconst AverageBufferSize = 65535;\n\nfunction createUintArray(arr: number[]): Uint32Array | Uint16Array {\n\tlet r;\n\tif (arr[arr.length - 1] < 65536) {\n\t\tr = new Uint16Array(arr.length);\n\t} else {\n\t\tr = new Uint32Array(arr.length);\n\t}\n\tr.set(arr, 0);\n\treturn r;\n}\n\nclass LineStarts {\n\tconstructor(\n\t\tpublic readonly lineStarts: Uint32Array | Uint16Array | number[],\n\t\tpublic readonly cr: number,\n\t\tpublic readonly lf: number,\n\t\tpublic readonly crlf: number,\n\t\tpublic readonly isBasicASCII: boolean\n\t) { }\n}\n\nexport function createLineStartsFast(str: string, readonly: boolean = true): Uint32Array | Uint16Array | number[] {\n\tconst r: number[] = [0];\n\tlet rLength = 1;\n\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chr = str.charCodeAt(i);\n\n\t\tif (chr === CharCode.CarriageReturn) {\n\t\t\tif (i + 1 < len && str.charCodeAt(i + 1) === CharCode.LineFeed) {\n\t\t\t\t// \\r\\n... case\n\t\t\t\tr[rLength++] = i + 2;\n\t\t\t\ti++; // skip \\n\n\t\t\t} else {\n\t\t\t\t// \\r... case\n\t\t\t\tr[rLength++] = i + 1;\n\t\t\t}\n\t\t} else if (chr === CharCode.LineFeed) {\n\t\t\tr[rLength++] = i + 1;\n\t\t}\n\t}\n\tif (readonly) {\n\t\treturn createUintArray(r);\n\t} else {\n\t\treturn r;\n\t}\n}\n\nexport function createLineStarts(r: number[], str: string): LineStarts {\n\tr.length = 0;\n\tr[0] = 0;\n\tlet rLength = 1;\n\tlet cr = 0, lf = 0, crlf = 0;\n\tlet isBasicASCII = true;\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chr = str.charCodeAt(i);\n\n\t\tif (chr === CharCode.CarriageReturn) {\n\t\t\tif (i + 1 < len && str.charCodeAt(i + 1) === CharCode.LineFeed) {\n\t\t\t\t// \\r\\n... case\n\t\t\t\tcrlf++;\n\t\t\t\tr[rLength++] = i + 2;\n\t\t\t\ti++; // skip \\n\n\t\t\t} else {\n\t\t\t\tcr++;\n\t\t\t\t// \\r... case\n\t\t\t\tr[rLength++] = i + 1;\n\t\t\t}\n\t\t} else if (chr === CharCode.LineFeed) {\n\t\t\tlf++;\n\t\t\tr[rLength++] = i + 1;\n\t\t} else {\n\t\t\tif (isBasicASCII) {\n\t\t\t\tif (chr !== CharCode.Tab && (chr < 32 || chr > 126)) {\n\t\t\t\t\tisBasicASCII = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tconst result = new LineStarts(createUintArray(r), cr, lf, crlf, isBasicASCII);\n\tr.length = 0;\n\n\treturn result;\n}\n\ninterface NodePosition {\n\t/**\n\t * Piece Index\n\t */\n\tnode: TreeNode;\n\t/**\n\t * remainer in current piece.\n\t*/\n\tremainder: number;\n\t/**\n\t * node start offset in document.\n\t */\n\tnodeStartOffset: number;\n}\n\ninterface BufferCursor {\n\t/**\n\t * Line number in current buffer\n\t */\n\tline: number;\n\t/**\n\t * Column number in current buffer\n\t */\n\tcolumn: number;\n}\n\nexport class Piece {\n\treadonly bufferIndex: number;\n\treadonly start: BufferCursor;\n\treadonly end: BufferCursor;\n\treadonly length: number;\n\treadonly lineFeedCnt: number;\n\n\tconstructor(bufferIndex: number, start: BufferCursor, end: BufferCursor, lineFeedCnt: number, length: number) {\n\t\tthis.bufferIndex = bufferIndex;\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.lineFeedCnt = lineFeedCnt;\n\t\tthis.length = length;\n\t}\n}\n\nexport class StringBuffer {\n\tbuffer: string;\n\tlineStarts: Uint32Array | Uint16Array | number[];\n\n\tconstructor(buffer: string, lineStarts: Uint32Array | Uint16Array | number[]) {\n\t\tthis.buffer = buffer;\n\t\tthis.lineStarts = lineStarts;\n\t}\n}\n\n/**\n * Readonly snapshot for piece tree.\n * In a real multiple thread environment, to make snapshot reading always work correctly, we need to\n * 1. Make TreeNode.piece immutable, then reading and writing can run in parallel.\n * 2. TreeNode/Buffers normalization should not happen during snapshot reading.\n */\nclass PieceTreeSnapshot implements ITextSnapshot {\n\tprivate readonly _pieces: Piece[];\n\tprivate _index: number;\n\tprivate readonly _tree: PieceTreeBase;\n\tprivate readonly _BOM: string;\n\n\tconstructor(tree: PieceTreeBase, BOM: string) {\n\t\tthis._pieces = [];\n\t\tthis._tree = tree;\n\t\tthis._BOM = BOM;\n\t\tthis._index = 0;\n\t\tif (tree.root !== SENTINEL) {\n\t\t\ttree.iterate(tree.root, node => {\n\t\t\t\tif (node !== SENTINEL) {\n\t\t\t\t\tthis._pieces.push(node.piece);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\t}\n\n\tread(): string | null {\n\t\tif (this._pieces.length === 0) {\n\t\t\tif (this._index === 0) {\n\t\t\t\tthis._index++;\n\t\t\t\treturn this._BOM;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tif (this._index > this._pieces.length - 1) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this._index === 0) {\n\t\t\treturn this._BOM + this._tree.getPieceContent(this._pieces[this._index++]);\n\t\t}\n\t\treturn this._tree.getPieceContent(this._pieces[this._index++]);\n\t}\n}\n\ninterface CacheEntry {\n\tnode: TreeNode;\n\tnodeStartOffset: number;\n\tnodeStartLineNumber?: number;\n}\n\nclass PieceTreeSearchCache {\n\tprivate readonly _limit: number;\n\tprivate _cache: CacheEntry[];\n\n\tconstructor(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis._cache = [];\n\t}\n\n\tpublic get(offset: number): CacheEntry | null {\n\t\tfor (let i = this._cache.length - 1; i >= 0; i--) {\n\t\t\tconst nodePos = this._cache[i];\n\t\t\tif (nodePos.nodeStartOffset <= offset && nodePos.nodeStartOffset + nodePos.node.piece.length >= offset) {\n\t\t\t\treturn nodePos;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic get2(lineNumber: number): { node: TreeNode; nodeStartOffset: number; nodeStartLineNumber: number } | null {\n\t\tfor (let i = this._cache.length - 1; i >= 0; i--) {\n\t\t\tconst nodePos = this._cache[i];\n\t\t\tif (nodePos.nodeStartLineNumber && nodePos.nodeStartLineNumber < lineNumber && nodePos.nodeStartLineNumber + nodePos.node.piece.lineFeedCnt >= lineNumber) {\n\t\t\t\treturn <{ node: TreeNode; nodeStartOffset: number; nodeStartLineNumber: number }>nodePos;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic set(nodePosition: CacheEntry) {\n\t\tif (this._cache.length >= this._limit) {\n\t\t\tthis._cache.shift();\n\t\t}\n\t\tthis._cache.push(nodePosition);\n\t}\n\n\tpublic validate(offset: number) {\n\t\tlet hasInvalidVal = false;\n\t\tconst tmp: Array<CacheEntry | null> = this._cache;\n\t\tfor (let i = 0; i < tmp.length; i++) {\n\t\t\tconst nodePos = tmp[i]!;\n\t\t\tif (nodePos.node.parent === null || nodePos.nodeStartOffset >= offset) {\n\t\t\t\ttmp[i] = null;\n\t\t\t\thasInvalidVal = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tif (hasInvalidVal) {\n\t\t\tconst newArr: CacheEntry[] = [];\n\t\t\tfor (const entry of tmp) {\n\t\t\t\tif (entry !== null) {\n\t\t\t\t\tnewArr.push(entry);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._cache = newArr;\n\t\t}\n\t}\n}\n\nexport class PieceTreeBase {\n\troot!: TreeNode;\n\tprotected _buffers!: StringBuffer[]; // 0 is change buffer, others are readonly original buffer.\n\tprotected _lineCnt!: number;\n\tprotected _length!: number;\n\tprotected _EOL!: '\\r\\n' | '\\n';\n\tprotected _EOLLength!: number;\n\tprotected _EOLNormalized!: boolean;\n\tprivate _lastChangeBufferPos!: BufferCursor;\n\tprivate _searchCache!: PieceTreeSearchCache;\n\tprivate _lastVisitedLine!: { lineNumber: number; value: string };\n\n\tconstructor(chunks: StringBuffer[], eol: '\\r\\n' | '\\n', eolNormalized: boolean) {\n\t\tthis.create(chunks, eol, eolNormalized);\n\t}\n\n\tcreate(chunks: StringBuffer[], eol: '\\r\\n' | '\\n', eolNormalized: boolean) {\n\t\tthis._buffers = [\n\t\t\tnew StringBuffer('', [0])\n\t\t];\n\t\tthis._lastChangeBufferPos = { line: 0, column: 0 };\n\t\tthis.root = SENTINEL;\n\t\tthis._lineCnt = 1;\n\t\tthis._length = 0;\n\t\tthis._EOL = eol;\n\t\tthis._EOLLength = eol.length;\n\t\tthis._EOLNormalized = eolNormalized;\n\n\t\tlet lastNode: TreeNode | null = null;\n\t\tfor (let i = 0, len = chunks.length; i < len; i++) {\n\t\t\tif (chunks[i].buffer.length > 0) {\n\t\t\t\tif (!chunks[i].lineStarts) {\n\t\t\t\t\tchunks[i].lineStarts = createLineStartsFast(chunks[i].buffer);\n\t\t\t\t}\n\n\t\t\t\tconst piece = new Piece(\n\t\t\t\t\ti + 1,\n\t\t\t\t\t{ line: 0, column: 0 },\n\t\t\t\t\t{ line: chunks[i].lineStarts.length - 1, column: chunks[i].buffer.length - chunks[i].lineStarts[chunks[i].lineStarts.length - 1] },\n\t\t\t\t\tchunks[i].lineStarts.length - 1,\n\t\t\t\t\tchunks[i].buffer.length\n\t\t\t\t);\n\t\t\t\tthis._buffers.push(chunks[i]);\n\t\t\t\tlastNode = this.rbInsertRight(lastNode, piece);\n\t\t\t}\n\t\t}\n\n\t\tthis._searchCache = new PieceTreeSearchCache(1);\n\t\tthis._lastVisitedLine = { lineNumber: 0, value: '' };\n\t\tthis.computeBufferMetadata();\n\t}\n\n\tnormalizeEOL(eol: '\\r\\n' | '\\n') {\n\t\tconst averageBufferSize = AverageBufferSize;\n\t\tconst min = averageBufferSize - Math.floor(averageBufferSize / 3);\n\t\tconst max = min * 2;\n\n\t\tlet tempChunk = '';\n\t\tlet tempChunkLen = 0;\n\t\tconst chunks: StringBuffer[] = [];\n\n\t\tthis.iterate(this.root, node => {\n\t\t\tconst str = this.getNodeContent(node);\n\t\t\tconst len = str.length;\n\t\t\tif (tempChunkLen <= min || tempChunkLen + len < max) {\n\t\t\t\ttempChunk += str;\n\t\t\t\ttempChunkLen += len;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// flush anyways\n\t\t\tconst text = tempChunk.replace(/\\r\\n|\\r|\\n/g, eol);\n\t\t\tchunks.push(new StringBuffer(text, createLineStartsFast(text)));\n\t\t\ttempChunk = str;\n\t\t\ttempChunkLen = len;\n\t\t\treturn true;\n\t\t});\n\n\t\tif (tempChunkLen > 0) {\n\t\t\tconst text = tempChunk.replace(/\\r\\n|\\r|\\n/g, eol);\n\t\t\tchunks.push(new StringBuffer(text, createLineStartsFast(text)));\n\t\t}\n\n\t\tthis.create(chunks, eol, true);\n\t}\n\n\t// #region Buffer API\n\tpublic getEOL(): '\\r\\n' | '\\n' {\n\t\treturn this._EOL;\n\t}\n\n\tpublic setEOL(newEOL: '\\r\\n' | '\\n'): void {\n\t\tthis._EOL = newEOL;\n\t\tthis._EOLLength = this._EOL.length;\n\t\tthis.normalizeEOL(newEOL);\n\t}\n\n\tpublic createSnapshot(BOM: string): ITextSnapshot {\n\t\treturn new PieceTreeSnapshot(this, BOM);\n\t}\n\n\tpublic equal(other: PieceTreeBase): boolean {\n\t\tif (this.getLength() !== other.getLength()) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.getLineCount() !== other.getLineCount()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst offset = 0;\n\t\tconst ret = this.iterate(this.root, node => {\n\t\t\tif (node === SENTINEL) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst str = this.getNodeContent(node);\n\t\t\tconst len = str.length;\n\t\t\tconst startPosition = other.nodeAt(offset);\n\t\t\tconst endPosition = other.nodeAt(offset + len);\n\t\t\tconst val = other.getValueInRange2(startPosition, endPosition);\n\n\t\t\treturn str === val;\n\t\t});\n\n\t\treturn ret;\n\t}\n\n\tpublic getOffsetAt(lineNumber: number, column: number): number {\n\t\tlet leftLen = 0; // inorder\n\n\t\tlet x = this.root;\n\n\t\twhile (x !== SENTINEL) {\n\t\t\tif (x.left !== SENTINEL && x.lf_left + 1 >= lineNumber) {\n\t\t\t\tx = x.left;\n\t\t\t} else if (x.lf_left + x.piece.lineFeedCnt + 1 >= lineNumber) {\n\t\t\t\tleftLen += x.size_left;\n\t\t\t\t// lineNumber >= 2\n\t\t\t\tconst accumualtedValInCurrentIndex = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n\t\t\t\treturn leftLen += accumualtedValInCurrentIndex + column - 1;\n\t\t\t} else {\n\t\t\t\tlineNumber -= x.lf_left + x.piece.lineFeedCnt;\n\t\t\t\tleftLen += x.size_left + x.piece.length;\n\t\t\t\tx = x.right;\n\t\t\t}\n\t\t}\n\n\t\treturn leftLen;\n\t}\n\n\tpublic getPositionAt(offset: number): Position {\n\t\toffset = Math.floor(offset);\n\t\toffset = Math.max(0, offset);\n\n\t\tlet x = this.root;\n\t\tlet lfCnt = 0;\n\t\tconst originalOffset = offset;\n\n\t\twhile (x !== SENTINEL) {\n\t\t\tif (x.size_left !== 0 && x.size_left >= offset) {\n\t\t\t\tx = x.left;\n\t\t\t} else if (x.size_left + x.piece.length >= offset) {\n\t\t\t\tconst out = this.getIndexOf(x, offset - x.size_left);\n\n\t\t\t\tlfCnt += x.lf_left + out.index;\n\n\t\t\t\tif (out.index === 0) {\n\t\t\t\t\tconst lineStartOffset = this.getOffsetAt(lfCnt + 1, 1);\n\t\t\t\t\tconst column = originalOffset - lineStartOffset;\n\t\t\t\t\treturn new Position(lfCnt + 1, column + 1);\n\t\t\t\t}\n\n\t\t\t\treturn new Position(lfCnt + 1, out.remainder + 1);\n\t\t\t} else {\n\t\t\t\toffset -= x.size_left + x.piece.length;\n\t\t\t\tlfCnt += x.lf_left + x.piece.lineFeedCnt;\n\n\t\t\t\tif (x.right === SENTINEL) {\n\t\t\t\t\t// last node\n\t\t\t\t\tconst lineStartOffset = this.getOffsetAt(lfCnt + 1, 1);\n\t\t\t\t\tconst column = originalOffset - offset - lineStartOffset;\n\t\t\t\t\treturn new Position(lfCnt + 1, column + 1);\n\t\t\t\t} else {\n\t\t\t\t\tx = x.right;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn new Position(1, 1);\n\t}\n\n\tpublic getValueInRange(range: Range, eol?: string): string {\n\t\tif (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst startPosition = this.nodeAt2(range.startLineNumber, range.startColumn);\n\t\tconst endPosition = this.nodeAt2(range.endLineNumber, range.endColumn);\n\n\t\tconst value = this.getValueInRange2(startPosition, endPosition);\n\t\tif (eol) {\n\t\t\tif (eol !== this._EOL || !this._EOLNormalized) {\n\t\t\t\treturn value.replace(/\\r\\n|\\r|\\n/g, eol);\n\t\t\t}\n\n\t\t\tif (eol === this.getEOL() && this._EOLNormalized) {\n\t\t\t\tif (eol === '\\r\\n') {\n\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\treturn value.replace(/\\r\\n|\\r|\\n/g, eol);\n\t\t}\n\t\treturn value;\n\t}\n\n\tpublic getValueInRange2(startPosition: NodePosition, endPosition: NodePosition): string {\n\t\tif (startPosition.node === endPosition.node) {\n\t\t\tconst node = startPosition.node;\n\t\t\tconst buffer = this._buffers[node.piece.bufferIndex].buffer;\n\t\t\tconst startOffset = this.offsetInBuffer(node.piece.bufferIndex, node.piece.start);\n\t\t\treturn buffer.substring(startOffset + startPosition.remainder, startOffset + endPosition.remainder);\n\t\t}\n\n\t\tlet x = startPosition.node;\n\t\tconst buffer = this._buffers[x.piece.bufferIndex].buffer;\n\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\t\tlet ret = buffer.substring(startOffset + startPosition.remainder, startOffset + x.piece.length);\n\n\t\tx = x.next();\n\t\twhile (x !== SENTINEL) {\n\t\t\tconst buffer = this._buffers[x.piece.bufferIndex].buffer;\n\t\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\n\t\t\tif (x === endPosition.node) {\n\t\t\t\tret += buffer.substring(startOffset, startOffset + endPosition.remainder);\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tret += buffer.substr(startOffset, x.piece.length);\n\t\t\t}\n\n\t\t\tx = x.next();\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tpublic getLinesContent(): string[] {\n\t\tconst lines: string[] = [];\n\t\tlet linesLength = 0;\n\t\tlet currentLine = '';\n\t\tlet danglingCR = false;\n\n\t\tthis.iterate(this.root, node => {\n\t\t\tif (node === SENTINEL) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst piece = node.piece;\n\t\t\tlet pieceLength = piece.length;\n\t\t\tif (pieceLength === 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst buffer = this._buffers[piece.bufferIndex].buffer;\n\t\t\tconst lineStarts = this._buffers[piece.bufferIndex].lineStarts;\n\n\t\t\tconst pieceStartLine = piece.start.line;\n\t\t\tconst pieceEndLine = piece.end.line;\n\t\t\tlet pieceStartOffset = lineStarts[pieceStartLine] + piece.start.column;\n\n\t\t\tif (danglingCR) {\n\t\t\t\tif (buffer.charCodeAt(pieceStartOffset) === CharCode.LineFeed) {\n\t\t\t\t\t// pretend the \\n was in the previous piece..\n\t\t\t\t\tpieceStartOffset++;\n\t\t\t\t\tpieceLength--;\n\t\t\t\t}\n\t\t\t\tlines[linesLength++] = currentLine;\n\t\t\t\tcurrentLine = '';\n\t\t\t\tdanglingCR = false;\n\t\t\t\tif (pieceLength === 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (pieceStartLine === pieceEndLine) {\n\t\t\t\t// this piece has no new lines\n\t\t\t\tif (!this._EOLNormalized && buffer.charCodeAt(pieceStartOffset + pieceLength - 1) === CharCode.CarriageReturn) {\n\t\t\t\t\tdanglingCR = true;\n\t\t\t\t\tcurrentLine += buffer.substr(pieceStartOffset, pieceLength - 1);\n\t\t\t\t} else {\n\t\t\t\t\tcurrentLine += buffer.substr(pieceStartOffset, pieceLength);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// add the text before the first line start in this piece\n\t\t\tcurrentLine += (\n\t\t\t\tthis._EOLNormalized\n\t\t\t\t\t? buffer.substring(pieceStartOffset, Math.max(pieceStartOffset, lineStarts[pieceStartLine + 1] - this._EOLLength))\n\t\t\t\t\t: buffer.substring(pieceStartOffset, lineStarts[pieceStartLine + 1]).replace(/(\\r\\n|\\r|\\n)$/, '')\n\t\t\t);\n\t\t\tlines[linesLength++] = currentLine;\n\n\t\t\tfor (let line = pieceStartLine + 1; line < pieceEndLine; line++) {\n\t\t\t\tcurrentLine = (\n\t\t\t\t\tthis._EOLNormalized\n\t\t\t\t\t\t? buffer.substring(lineStarts[line], lineStarts[line + 1] - this._EOLLength)\n\t\t\t\t\t\t: buffer.substring(lineStarts[line], lineStarts[line + 1]).replace(/(\\r\\n|\\r|\\n)$/, '')\n\t\t\t\t);\n\t\t\t\tlines[linesLength++] = currentLine;\n\t\t\t}\n\n\t\t\tif (!this._EOLNormalized && buffer.charCodeAt(lineStarts[pieceEndLine] + piece.end.column - 1) === CharCode.CarriageReturn) {\n\t\t\t\tdanglingCR = true;\n\t\t\t\tif (piece.end.column === 0) {\n\t\t\t\t\t// The last line ended with a \\r, let's undo the push, it will be pushed by next iteration\n\t\t\t\t\tlinesLength--;\n\t\t\t\t} else {\n\t\t\t\t\tcurrentLine = buffer.substr(lineStarts[pieceEndLine], piece.end.column - 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcurrentLine = buffer.substr(lineStarts[pieceEndLine], piece.end.column);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t\tif (danglingCR) {\n\t\t\tlines[linesLength++] = currentLine;\n\t\t\tcurrentLine = '';\n\t\t}\n\n\t\tlines[linesLength++] = currentLine;\n\t\treturn lines;\n\t}\n\n\tpublic getLength(): number {\n\t\treturn this._length;\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this._lineCnt;\n\t}\n\n\tpublic getLineContent(lineNumber: number): string {\n\t\tif (this._lastVisitedLine.lineNumber === lineNumber) {\n\t\t\treturn this._lastVisitedLine.value;\n\t\t}\n\n\t\tthis._lastVisitedLine.lineNumber = lineNumber;\n\n\t\tif (lineNumber === this._lineCnt) {\n\t\t\tthis._lastVisitedLine.value = this.getLineRawContent(lineNumber);\n\t\t} else if (this._EOLNormalized) {\n\t\t\tthis._lastVisitedLine.value = this.getLineRawContent(lineNumber, this._EOLLength);\n\t\t} else {\n\t\t\tthis._lastVisitedLine.value = this.getLineRawContent(lineNumber).replace(/(\\r\\n|\\r|\\n)$/, '');\n\t\t}\n\n\t\treturn this._lastVisitedLine.value;\n\t}\n\n\tprivate _getCharCode(nodePos: NodePosition): number {\n\t\tif (nodePos.remainder === nodePos.node.piece.length) {\n\t\t\t// the char we want to fetch is at the head of next node.\n\t\t\tconst matchingNode = nodePos.node.next();\n\t\t\tif (!matchingNode) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tconst buffer = this._buffers[matchingNode.piece.bufferIndex];\n\t\t\tconst startOffset = this.offsetInBuffer(matchingNode.piece.bufferIndex, matchingNode.piece.start);\n\t\t\treturn buffer.buffer.charCodeAt(startOffset);\n\t\t} else {\n\t\t\tconst buffer = this._buffers[nodePos.node.piece.bufferIndex];\n\t\t\tconst startOffset = this.offsetInBuffer(nodePos.node.piece.bufferIndex, nodePos.node.piece.start);\n\t\t\tconst targetOffset = startOffset + nodePos.remainder;\n\n\t\t\treturn buffer.buffer.charCodeAt(targetOffset);\n\t\t}\n\t}\n\n\tpublic getLineCharCode(lineNumber: number, index: number): number {\n\t\tconst nodePos = this.nodeAt2(lineNumber, index + 1);\n\t\treturn this._getCharCode(nodePos);\n\t}\n\n\tpublic getLineLength(lineNumber: number): number {\n\t\tif (lineNumber === this.getLineCount()) {\n\t\t\tconst startOffset = this.getOffsetAt(lineNumber, 1);\n\t\t\treturn this.getLength() - startOffset;\n\t\t}\n\t\treturn this.getOffsetAt(lineNumber + 1, 1) - this.getOffsetAt(lineNumber, 1) - this._EOLLength;\n\t}\n\n\tpublic getCharCode(offset: number): number {\n\t\tconst nodePos = this.nodeAt(offset);\n\t\treturn this._getCharCode(nodePos);\n\t}\n\n\tpublic findMatchesInNode(node: TreeNode, searcher: Searcher, startLineNumber: number, startColumn: number, startCursor: BufferCursor, endCursor: BufferCursor, searchData: SearchData, captureMatches: boolean, limitResultCount: number, resultLen: number, result: FindMatch[]) {\n\t\tconst buffer = this._buffers[node.piece.bufferIndex];\n\t\tconst startOffsetInBuffer = this.offsetInBuffer(node.piece.bufferIndex, node.piece.start);\n\t\tconst start = this.offsetInBuffer(node.piece.bufferIndex, startCursor);\n\t\tconst end = this.offsetInBuffer(node.piece.bufferIndex, endCursor);\n\n\t\tlet m: RegExpExecArray | null;\n\t\t// Reset regex to search from the beginning\n\t\tconst ret: BufferCursor = { line: 0, column: 0 };\n\t\tlet searchText: string;\n\t\tlet offsetInBuffer: (offset: number) => number;\n\n\t\tif (searcher._wordSeparators) {\n\t\t\tsearchText = buffer.buffer.substring(start, end);\n\t\t\toffsetInBuffer = (offset: number) => offset + start;\n\t\t\tsearcher.reset(0);\n\t\t} else {\n\t\t\tsearchText = buffer.buffer;\n\t\t\toffsetInBuffer = (offset: number) => offset;\n\t\t\tsearcher.reset(start);\n\t\t}\n\n\t\tdo {\n\t\t\tm = searcher.next(searchText);\n\n\t\t\tif (m) {\n\t\t\t\tif (offsetInBuffer(m.index) >= end) {\n\t\t\t\t\treturn resultLen;\n\t\t\t\t}\n\t\t\t\tthis.positionInBuffer(node, offsetInBuffer(m.index) - startOffsetInBuffer, ret);\n\t\t\t\tconst lineFeedCnt = this.getLineFeedCnt(node.piece.bufferIndex, startCursor, ret);\n\t\t\t\tconst retStartColumn = ret.line === startCursor.line ? ret.column - startCursor.column + startColumn : ret.column + 1;\n\t\t\t\tconst retEndColumn = retStartColumn + m[0].length;\n\t\t\t\tresult[resultLen++] = createFindMatch(new Range(startLineNumber + lineFeedCnt, retStartColumn, startLineNumber + lineFeedCnt, retEndColumn), m, captureMatches);\n\n\t\t\t\tif (offsetInBuffer(m.index) + m[0].length >= end) {\n\t\t\t\t\treturn resultLen;\n\t\t\t\t}\n\t\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\t\treturn resultLen;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} while (m);\n\n\t\treturn resultLen;\n\t}\n\n\tpublic findMatchesLineByLine(searchRange: Range, searchData: SearchData, captureMatches: boolean, limitResultCount: number): FindMatch[] {\n\t\tconst result: FindMatch[] = [];\n\t\tlet resultLen = 0;\n\t\tconst searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n\n\t\tlet startPosition = this.nodeAt2(searchRange.startLineNumber, searchRange.startColumn);\n\t\tif (startPosition === null) {\n\t\t\treturn [];\n\t\t}\n\t\tconst endPosition = this.nodeAt2(searchRange.endLineNumber, searchRange.endColumn);\n\t\tif (endPosition === null) {\n\t\t\treturn [];\n\t\t}\n\t\tlet start = this.positionInBuffer(startPosition.node, startPosition.remainder);\n\t\tconst end = this.positionInBuffer(endPosition.node, endPosition.remainder);\n\n\t\tif (startPosition.node === endPosition.node) {\n\t\t\tthis.findMatchesInNode(startPosition.node, searcher, searchRange.startLineNumber, searchRange.startColumn, start, end, searchData, captureMatches, limitResultCount, resultLen, result);\n\t\t\treturn result;\n\t\t}\n\n\t\tlet startLineNumber = searchRange.startLineNumber;\n\n\t\tlet currentNode = startPosition.node;\n\t\twhile (currentNode !== endPosition.node) {\n\t\t\tconst lineBreakCnt = this.getLineFeedCnt(currentNode.piece.bufferIndex, start, currentNode.piece.end);\n\n\t\t\tif (lineBreakCnt >= 1) {\n\t\t\t\t// last line break position\n\t\t\t\tconst lineStarts = this._buffers[currentNode.piece.bufferIndex].lineStarts;\n\t\t\t\tconst startOffsetInBuffer = this.offsetInBuffer(currentNode.piece.bufferIndex, currentNode.piece.start);\n\t\t\t\tconst nextLineStartOffset = lineStarts[start.line + lineBreakCnt];\n\t\t\t\tconst startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn : 1;\n\t\t\t\tresultLen = this.findMatchesInNode(currentNode, searcher, startLineNumber, startColumn, start, this.positionInBuffer(currentNode, nextLineStartOffset - startOffsetInBuffer), searchData, captureMatches, limitResultCount, resultLen, result);\n\n\t\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tstartLineNumber += lineBreakCnt;\n\t\t\t}\n\n\t\t\tconst startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn - 1 : 0;\n\t\t\t// search for the remaining content\n\t\t\tif (startLineNumber === searchRange.endLineNumber) {\n\t\t\t\tconst text = this.getLineContent(startLineNumber).substring(startColumn, searchRange.endColumn - 1);\n\t\t\t\tresultLen = this._findMatchesInLine(searchData, searcher, text, searchRange.endLineNumber, startColumn, resultLen, result, captureMatches, limitResultCount);\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tresultLen = this._findMatchesInLine(searchData, searcher, this.getLineContent(startLineNumber).substr(startColumn), startLineNumber, startColumn, resultLen, result, captureMatches, limitResultCount);\n\n\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tstartLineNumber++;\n\t\t\tstartPosition = this.nodeAt2(startLineNumber, 1);\n\t\t\tcurrentNode = startPosition.node;\n\t\t\tstart = this.positionInBuffer(startPosition.node, startPosition.remainder);\n\t\t}\n\n\t\tif (startLineNumber === searchRange.endLineNumber) {\n\t\t\tconst startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn - 1 : 0;\n\t\t\tconst text = this.getLineContent(startLineNumber).substring(startColumn, searchRange.endColumn - 1);\n\t\t\tresultLen = this._findMatchesInLine(searchData, searcher, text, searchRange.endLineNumber, startColumn, resultLen, result, captureMatches, limitResultCount);\n\t\t\treturn result;\n\t\t}\n\n\t\tconst startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn : 1;\n\t\tresultLen = this.findMatchesInNode(endPosition.node, searcher, startLineNumber, startColumn, start, end, searchData, captureMatches, limitResultCount, resultLen, result);\n\t\treturn result;\n\t}\n\n\tprivate _findMatchesInLine(searchData: SearchData, searcher: Searcher, text: string, lineNumber: number, deltaOffset: number, resultLen: number, result: FindMatch[], captureMatches: boolean, limitResultCount: number): number {\n\t\tconst wordSeparators = searchData.wordSeparators;\n\t\tif (!captureMatches && searchData.simpleSearch) {\n\t\t\tconst searchString = searchData.simpleSearch;\n\t\t\tconst searchStringLen = searchString.length;\n\t\t\tconst textLength = text.length;\n\n\t\t\tlet lastMatchIndex = -searchStringLen;\n\t\t\twhile ((lastMatchIndex = text.indexOf(searchString, lastMatchIndex + searchStringLen)) !== -1) {\n\t\t\t\tif (!wordSeparators || isValidMatch(wordSeparators, text, textLength, lastMatchIndex, searchStringLen)) {\n\t\t\t\t\tresult[resultLen++] = new FindMatch(new Range(lineNumber, lastMatchIndex + 1 + deltaOffset, lineNumber, lastMatchIndex + 1 + searchStringLen + deltaOffset), null);\n\t\t\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\t\t\treturn resultLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn resultLen;\n\t\t}\n\n\t\tlet m: RegExpExecArray | null;\n\t\t// Reset regex to search from the beginning\n\t\tsearcher.reset(0);\n\t\tdo {\n\t\t\tm = searcher.next(text);\n\t\t\tif (m) {\n\t\t\t\tresult[resultLen++] = createFindMatch(new Range(lineNumber, m.index + 1 + deltaOffset, lineNumber, m.index + 1 + m[0].length + deltaOffset), m, captureMatches);\n\t\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\t\treturn resultLen;\n\t\t\t\t}\n\t\t\t}\n\t\t} while (m);\n\t\treturn resultLen;\n\t}\n\n\t// #endregion\n\n\t// #region Piece Table\n\tpublic insert(offset: number, value: string, eolNormalized: boolean = false): void {\n\t\tthis._EOLNormalized = this._EOLNormalized && eolNormalized;\n\t\tthis._lastVisitedLine.lineNumber = 0;\n\t\tthis._lastVisitedLine.value = '';\n\n\t\tif (this.root !== SENTINEL) {\n\t\t\tconst { node, remainder, nodeStartOffset } = this.nodeAt(offset);\n\t\t\tconst piece = node.piece;\n\t\t\tconst bufferIndex = piece.bufferIndex;\n\t\t\tconst insertPosInBuffer = this.positionInBuffer(node, remainder);\n\t\t\tif (node.piece.bufferIndex === 0 &&\n\t\t\t\tpiece.end.line === this._lastChangeBufferPos.line &&\n\t\t\t\tpiece.end.column === this._lastChangeBufferPos.column &&\n\t\t\t\t(nodeStartOffset + piece.length === offset) &&\n\t\t\t\tvalue.length < AverageBufferSize\n\t\t\t) {\n\t\t\t\t// changed buffer\n\t\t\t\tthis.appendToNode(node, value);\n\t\t\t\tthis.computeBufferMetadata();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (nodeStartOffset === offset) {\n\t\t\t\tthis.insertContentToNodeLeft(value, node);\n\t\t\t\tthis._searchCache.validate(offset);\n\t\t\t} else if (nodeStartOffset + node.piece.length > offset) {\n\t\t\t\t// we are inserting into the middle of a node.\n\t\t\t\tconst nodesToDel: TreeNode[] = [];\n\t\t\t\tlet newRightPiece = new Piece(\n\t\t\t\t\tpiece.bufferIndex,\n\t\t\t\t\tinsertPosInBuffer,\n\t\t\t\t\tpiece.end,\n\t\t\t\t\tthis.getLineFeedCnt(piece.bufferIndex, insertPosInBuffer, piece.end),\n\t\t\t\t\tthis.offsetInBuffer(bufferIndex, piece.end) - this.offsetInBuffer(bufferIndex, insertPosInBuffer)\n\t\t\t\t);\n\n\t\t\t\tif (this.shouldCheckCRLF() && this.endWithCR(value)) {\n\t\t\t\t\tconst headOfRight = this.nodeCharCodeAt(node, remainder);\n\n\t\t\t\t\tif (headOfRight === 10 /** \\n */) {\n\t\t\t\t\t\tconst newStart: BufferCursor = { line: newRightPiece.start.line + 1, column: 0 };\n\t\t\t\t\t\tnewRightPiece = new Piece(\n\t\t\t\t\t\t\tnewRightPiece.bufferIndex,\n\t\t\t\t\t\t\tnewStart,\n\t\t\t\t\t\t\tnewRightPiece.end,\n\t\t\t\t\t\t\tthis.getLineFeedCnt(newRightPiece.bufferIndex, newStart, newRightPiece.end),\n\t\t\t\t\t\t\tnewRightPiece.length - 1\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tvalue += '\\n';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// reuse node for content before insertion point.\n\t\t\t\tif (this.shouldCheckCRLF() && this.startWithLF(value)) {\n\t\t\t\t\tconst tailOfLeft = this.nodeCharCodeAt(node, remainder - 1);\n\t\t\t\t\tif (tailOfLeft === 13 /** \\r */) {\n\t\t\t\t\t\tconst previousPos = this.positionInBuffer(node, remainder - 1);\n\t\t\t\t\t\tthis.deleteNodeTail(node, previousPos);\n\t\t\t\t\t\tvalue = '\\r' + value;\n\n\t\t\t\t\t\tif (node.piece.length === 0) {\n\t\t\t\t\t\t\tnodesToDel.push(node);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.deleteNodeTail(node, insertPosInBuffer);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.deleteNodeTail(node, insertPosInBuffer);\n\t\t\t\t}\n\n\t\t\t\tconst newPieces = this.createNewPieces(value);\n\t\t\t\tif (newRightPiece.length > 0) {\n\t\t\t\t\tthis.rbInsertRight(node, newRightPiece);\n\t\t\t\t}\n\n\t\t\t\tlet tmpNode = node;\n\t\t\t\tfor (let k = 0; k < newPieces.length; k++) {\n\t\t\t\t\ttmpNode = this.rbInsertRight(tmpNode, newPieces[k]);\n\t\t\t\t}\n\t\t\t\tthis.deleteNodes(nodesToDel);\n\t\t\t} else {\n\t\t\t\tthis.insertContentToNodeRight(value, node);\n\t\t\t}\n\t\t} else {\n\t\t\t// insert new node\n\t\t\tconst pieces = this.createNewPieces(value);\n\t\t\tlet node = this.rbInsertLeft(null, pieces[0]);\n\n\t\t\tfor (let k = 1; k < pieces.length; k++) {\n\t\t\t\tnode = this.rbInsertRight(node, pieces[k]);\n\t\t\t}\n\t\t}\n\n\t\t// todo, this is too brutal. Total line feed count should be updated the same way as lf_left.\n\t\tthis.computeBufferMetadata();\n\t}\n\n\tpublic delete(offset: number, cnt: number): void {\n\t\tthis._lastVisitedLine.lineNumber = 0;\n\t\tthis._lastVisitedLine.value = '';\n\n\t\tif (cnt <= 0 || this.root === SENTINEL) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst startPosition = this.nodeAt(offset);\n\t\tconst endPosition = this.nodeAt(offset + cnt);\n\t\tconst startNode = startPosition.node;\n\t\tconst endNode = endPosition.node;\n\n\t\tif (startNode === endNode) {\n\t\t\tconst startSplitPosInBuffer = this.positionInBuffer(startNode, startPosition.remainder);\n\t\t\tconst endSplitPosInBuffer = this.positionInBuffer(startNode, endPosition.remainder);\n\n\t\t\tif (startPosition.nodeStartOffset === offset) {\n\t\t\t\tif (cnt === startNode.piece.length) { // delete node\n\t\t\t\t\tconst next = startNode.next();\n\t\t\t\t\trbDelete(this, startNode);\n\t\t\t\t\tthis.validateCRLFWithPrevNode(next);\n\t\t\t\t\tthis.computeBufferMetadata();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.deleteNodeHead(startNode, endSplitPosInBuffer);\n\t\t\t\tthis._searchCache.validate(offset);\n\t\t\t\tthis.validateCRLFWithPrevNode(startNode);\n\t\t\t\tthis.computeBufferMetadata();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (startPosition.nodeStartOffset + startNode.piece.length === offset + cnt) {\n\t\t\t\tthis.deleteNodeTail(startNode, startSplitPosInBuffer);\n\t\t\t\tthis.validateCRLFWithNextNode(startNode);\n\t\t\t\tthis.computeBufferMetadata();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// delete content in the middle, this node will be splitted to nodes\n\t\t\tthis.shrinkNode(startNode, startSplitPosInBuffer, endSplitPosInBuffer);\n\t\t\tthis.computeBufferMetadata();\n\t\t\treturn;\n\t\t}\n\n\t\tconst nodesToDel: TreeNode[] = [];\n\n\t\tconst startSplitPosInBuffer = this.positionInBuffer(startNode, startPosition.remainder);\n\t\tthis.deleteNodeTail(startNode, startSplitPosInBuffer);\n\t\tthis._searchCache.validate(offset);\n\t\tif (startNode.piece.length === 0) {\n\t\t\tnodesToDel.push(startNode);\n\t\t}\n\n\t\t// update last touched node\n\t\tconst endSplitPosInBuffer = this.positionInBuffer(endNode, endPosition.remainder);\n\t\tthis.deleteNodeHead(endNode, endSplitPosInBuffer);\n\t\tif (endNode.piece.length === 0) {\n\t\t\tnodesToDel.push(endNode);\n\t\t}\n\n\t\t// delete nodes in between\n\t\tconst secondNode = startNode.next();\n\t\tfor (let node = secondNode; node !== SENTINEL && node !== endNode; node = node.next()) {\n\t\t\tnodesToDel.push(node);\n\t\t}\n\n\t\tconst prev = startNode.piece.length === 0 ? startNode.prev() : startNode;\n\t\tthis.deleteNodes(nodesToDel);\n\t\tthis.validateCRLFWithNextNode(prev);\n\t\tthis.computeBufferMetadata();\n\t}\n\n\tprivate insertContentToNodeLeft(value: string, node: TreeNode) {\n\t\t// we are inserting content to the beginning of node\n\t\tconst nodesToDel: TreeNode[] = [];\n\t\tif (this.shouldCheckCRLF() && this.endWithCR(value) && this.startWithLF(node)) {\n\t\t\t// move `\\n` to new node.\n\n\t\t\tconst piece = node.piece;\n\t\t\tconst newStart: BufferCursor = { line: piece.start.line + 1, column: 0 };\n\t\t\tconst nPiece = new Piece(\n\t\t\t\tpiece.bufferIndex,\n\t\t\t\tnewStart,\n\t\t\t\tpiece.end,\n\t\t\t\tthis.getLineFeedCnt(piece.bufferIndex, newStart, piece.end),\n\t\t\t\tpiece.length - 1\n\t\t\t);\n\n\t\t\tnode.piece = nPiece;\n\n\t\t\tvalue += '\\n';\n\t\t\tupdateTreeMetadata(this, node, -1, -1);\n\n\t\t\tif (node.piece.length === 0) {\n\t\t\t\tnodesToDel.push(node);\n\t\t\t}\n\t\t}\n\n\t\tconst newPieces = this.createNewPieces(value);\n\t\tlet newNode = this.rbInsertLeft(node, newPieces[newPieces.length - 1]);\n\t\tfor (let k = newPieces.length - 2; k >= 0; k--) {\n\t\t\tnewNode = this.rbInsertLeft(newNode, newPieces[k]);\n\t\t}\n\t\tthis.validateCRLFWithPrevNode(newNode);\n\t\tthis.deleteNodes(nodesToDel);\n\t}\n\n\tprivate insertContentToNodeRight(value: string, node: TreeNode) {\n\t\t// we are inserting to the right of this node.\n\t\tif (this.adjustCarriageReturnFromNext(value, node)) {\n\t\t\t// move \\n to the new node.\n\t\t\tvalue += '\\n';\n\t\t}\n\n\t\tconst newPieces = this.createNewPieces(value);\n\t\tconst newNode = this.rbInsertRight(node, newPieces[0]);\n\t\tlet tmpNode = newNode;\n\n\t\tfor (let k = 1; k < newPieces.length; k++) {\n\t\t\ttmpNode = this.rbInsertRight(tmpNode, newPieces[k]);\n\t\t}\n\n\t\tthis.validateCRLFWithPrevNode(newNode);\n\t}\n\n\tprivate positionInBuffer(node: TreeNode, remainder: number): BufferCursor;\n\tprivate positionInBuffer(node: TreeNode, remainder: number, ret: BufferCursor): null;\n\tprivate positionInBuffer(node: TreeNode, remainder: number, ret?: BufferCursor): BufferCursor | null {\n\t\tconst piece = node.piece;\n\t\tconst bufferIndex = node.piece.bufferIndex;\n\t\tconst lineStarts = this._buffers[bufferIndex].lineStarts;\n\n\t\tconst startOffset = lineStarts[piece.start.line] + piece.start.column;\n\n\t\tconst offset = startOffset + remainder;\n\n\t\t// binary search offset between startOffset and endOffset\n\t\tlet low = piece.start.line;\n\t\tlet high = piece.end.line;\n\n\t\tlet mid: number = 0;\n\t\tlet midStop: number = 0;\n\t\tlet midStart: number = 0;\n\n\t\twhile (low <= high) {\n\t\t\tmid = low + ((high - low) / 2) | 0;\n\t\t\tmidStart = lineStarts[mid];\n\n\t\t\tif (mid === high) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tmidStop = lineStarts[mid + 1];\n\n\t\t\tif (offset < midStart) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else if (offset >= midStop) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (ret) {\n\t\t\tret.line = mid;\n\t\t\tret.column = offset - midStart;\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tline: mid,\n\t\t\tcolumn: offset - midStart\n\t\t};\n\t}\n\n\tprivate getLineFeedCnt(bufferIndex: number, start: BufferCursor, end: BufferCursor): number {\n\t\t// we don't need to worry about start: abc\\r|\\n, or abc|\\r, or abc|\\n, or abc|\\r\\n doesn't change the fact that, there is one line break after start.\n\t\t// now let's take care of end: abc\\r|\\n, if end is in between \\r and \\n, we need to add line feed count by 1\n\t\tif (end.column === 0) {\n\t\t\treturn end.line - start.line;\n\t\t}\n\n\t\tconst lineStarts = this._buffers[bufferIndex].lineStarts;\n\t\tif (end.line === lineStarts.length - 1) { // it means, there is no \\n after end, otherwise, there will be one more lineStart.\n\t\t\treturn end.line - start.line;\n\t\t}\n\n\t\tconst nextLineStartOffset = lineStarts[end.line + 1];\n\t\tconst endOffset = lineStarts[end.line] + end.column;\n\t\tif (nextLineStartOffset > endOffset + 1) { // there are more than 1 character after end, which means it can't be \\n\n\t\t\treturn end.line - start.line;\n\t\t}\n\t\t// endOffset + 1 === nextLineStartOffset\n\t\t// character at endOffset is \\n, so we check the character before first\n\t\t// if character at endOffset is \\r, end.column is 0 and we can't get here.\n\t\tconst previousCharOffset = endOffset - 1; // end.column > 0 so it's okay.\n\t\tconst buffer = this._buffers[bufferIndex].buffer;\n\n\t\tif (buffer.charCodeAt(previousCharOffset) === 13) {\n\t\t\treturn end.line - start.line + 1;\n\t\t} else {\n\t\t\treturn end.line - start.line;\n\t\t}\n\t}\n\n\tprivate offsetInBuffer(bufferIndex: number, cursor: BufferCursor): number {\n\t\tconst lineStarts = this._buffers[bufferIndex].lineStarts;\n\t\treturn lineStarts[cursor.line] + cursor.column;\n\t}\n\n\tprivate deleteNodes(nodes: TreeNode[]): void {\n\t\tfor (let i = 0; i < nodes.length; i++) {\n\t\t\trbDelete(this, nodes[i]);\n\t\t}\n\t}\n\n\tprivate createNewPieces(text: string): Piece[] {\n\t\tif (text.length > AverageBufferSize) {\n\t\t\t// the content is large, operations like substring, charCode becomes slow\n\t\t\t// so here we split it into smaller chunks, just like what we did for CR/LF normalization\n\t\t\tconst newPieces: Piece[] = [];\n\t\t\twhile (text.length > AverageBufferSize) {\n\t\t\t\tconst lastChar = text.charCodeAt(AverageBufferSize - 1);\n\t\t\t\tlet splitText;\n\t\t\t\tif (lastChar === CharCode.CarriageReturn || (lastChar >= 0xD800 && lastChar <= 0xDBFF)) {\n\t\t\t\t\t// last character is \\r or a high surrogate => keep it back\n\t\t\t\t\tsplitText = text.substring(0, AverageBufferSize - 1);\n\t\t\t\t\ttext = text.substring(AverageBufferSize - 1);\n\t\t\t\t} else {\n\t\t\t\t\tsplitText = text.substring(0, AverageBufferSize);\n\t\t\t\t\ttext = text.substring(AverageBufferSize);\n\t\t\t\t}\n\n\t\t\t\tconst lineStarts = createLineStartsFast(splitText);\n\t\t\t\tnewPieces.push(new Piece(\n\t\t\t\t\tthis._buffers.length, /* buffer index */\n\t\t\t\t\t{ line: 0, column: 0 },\n\t\t\t\t\t{ line: lineStarts.length - 1, column: splitText.length - lineStarts[lineStarts.length - 1] },\n\t\t\t\t\tlineStarts.length - 1,\n\t\t\t\t\tsplitText.length\n\t\t\t\t));\n\t\t\t\tthis._buffers.push(new StringBuffer(splitText, lineStarts));\n\t\t\t}\n\n\t\t\tconst lineStarts = createLineStartsFast(text);\n\t\t\tnewPieces.push(new Piece(\n\t\t\t\tthis._buffers.length, /* buffer index */\n\t\t\t\t{ line: 0, column: 0 },\n\t\t\t\t{ line: lineStarts.length - 1, column: text.length - lineStarts[lineStarts.length - 1] },\n\t\t\t\tlineStarts.length - 1,\n\t\t\t\ttext.length\n\t\t\t));\n\t\t\tthis._buffers.push(new StringBuffer(text, lineStarts));\n\n\t\t\treturn newPieces;\n\t\t}\n\n\t\tlet startOffset = this._buffers[0].buffer.length;\n\t\tconst lineStarts = createLineStartsFast(text, false);\n\n\t\tlet start = this._lastChangeBufferPos;\n\t\tif (this._buffers[0].lineStarts[this._buffers[0].lineStarts.length - 1] === startOffset\n\t\t\t&& startOffset !== 0\n\t\t\t&& this.startWithLF(text)\n\t\t\t&& this.endWithCR(this._buffers[0].buffer) // todo, we can check this._lastChangeBufferPos's column as it's the last one\n\t\t) {\n\t\t\tthis._lastChangeBufferPos = { line: this._lastChangeBufferPos.line, column: this._lastChangeBufferPos.column + 1 };\n\t\t\tstart = this._lastChangeBufferPos;\n\n\t\t\tfor (let i = 0; i < lineStarts.length; i++) {\n\t\t\t\tlineStarts[i] += startOffset + 1;\n\t\t\t}\n\n\t\t\tthis._buffers[0].lineStarts = (<number[]>this._buffers[0].lineStarts).concat(<number[]>lineStarts.slice(1));\n\t\t\tthis._buffers[0].buffer += '_' + text;\n\t\t\tstartOffset += 1;\n\t\t} else {\n\t\t\tif (startOffset !== 0) {\n\t\t\t\tfor (let i = 0; i < lineStarts.length; i++) {\n\t\t\t\t\tlineStarts[i] += startOffset;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._buffers[0].lineStarts = (<number[]>this._buffers[0].lineStarts).concat(<number[]>lineStarts.slice(1));\n\t\t\tthis._buffers[0].buffer += text;\n\t\t}\n\n\t\tconst endOffset = this._buffers[0].buffer.length;\n\t\tconst endIndex = this._buffers[0].lineStarts.length - 1;\n\t\tconst endColumn = endOffset - this._buffers[0].lineStarts[endIndex];\n\t\tconst endPos = { line: endIndex, column: endColumn };\n\t\tconst newPiece = new Piece(\n\t\t\t0, /** todo@peng */\n\t\t\tstart,\n\t\t\tendPos,\n\t\t\tthis.getLineFeedCnt(0, start, endPos),\n\t\t\tendOffset - startOffset\n\t\t);\n\t\tthis._lastChangeBufferPos = endPos;\n\t\treturn [newPiece];\n\t}\n\n\tpublic getLinesRawContent(): string {\n\t\treturn this.getContentOfSubTree(this.root);\n\t}\n\n\tpublic getLineRawContent(lineNumber: number, endOffset: number = 0): string {\n\t\tlet x = this.root;\n\n\t\tlet ret = '';\n\t\tconst cache = this._searchCache.get2(lineNumber);\n\t\tif (cache) {\n\t\t\tx = cache.node;\n\t\t\tconst prevAccumulatedValue = this.getAccumulatedValue(x, lineNumber - cache.nodeStartLineNumber - 1);\n\t\t\tconst buffer = this._buffers[x.piece.bufferIndex].buffer;\n\t\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\t\t\tif (cache.nodeStartLineNumber + x.piece.lineFeedCnt === lineNumber) {\n\t\t\t\tret = buffer.substring(startOffset + prevAccumulatedValue, startOffset + x.piece.length);\n\t\t\t} else {\n\t\t\t\tconst accumulatedValue = this.getAccumulatedValue(x, lineNumber - cache.nodeStartLineNumber);\n\t\t\t\treturn buffer.substring(startOffset + prevAccumulatedValue, startOffset + accumulatedValue - endOffset);\n\t\t\t}\n\t\t} else {\n\t\t\tlet nodeStartOffset = 0;\n\t\t\tconst originalLineNumber = lineNumber;\n\t\t\twhile (x !== SENTINEL) {\n\t\t\t\tif (x.left !== SENTINEL && x.lf_left >= lineNumber - 1) {\n\t\t\t\t\tx = x.left;\n\t\t\t\t} else if (x.lf_left + x.piece.lineFeedCnt > lineNumber - 1) {\n\t\t\t\t\tconst prevAccumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n\t\t\t\t\tconst accumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 1);\n\t\t\t\t\tconst buffer = this._buffers[x.piece.bufferIndex].buffer;\n\t\t\t\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\t\t\t\t\tnodeStartOffset += x.size_left;\n\t\t\t\t\tthis._searchCache.set({\n\t\t\t\t\t\tnode: x,\n\t\t\t\t\t\tnodeStartOffset,\n\t\t\t\t\t\tnodeStartLineNumber: originalLineNumber - (lineNumber - 1 - x.lf_left)\n\t\t\t\t\t});\n\n\t\t\t\t\treturn buffer.substring(startOffset + prevAccumulatedValue, startOffset + accumulatedValue - endOffset);\n\t\t\t\t} else if (x.lf_left + x.piece.lineFeedCnt === lineNumber - 1) {\n\t\t\t\t\tconst prevAccumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n\t\t\t\t\tconst buffer = this._buffers[x.piece.bufferIndex].buffer;\n\t\t\t\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\n\t\t\t\t\tret = buffer.substring(startOffset + prevAccumulatedValue, startOffset + x.piece.length);\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tlineNumber -= x.lf_left + x.piece.lineFeedCnt;\n\t\t\t\t\tnodeStartOffset += x.size_left + x.piece.length;\n\t\t\t\t\tx = x.right;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// search in order, to find the node contains end column\n\t\tx = x.next();\n\t\twhile (x !== SENTINEL) {\n\t\t\tconst buffer = this._buffers[x.piece.bufferIndex].buffer;\n\n\t\t\tif (x.piece.lineFeedCnt > 0) {\n\t\t\t\tconst accumulatedValue = this.getAccumulatedValue(x, 0);\n\t\t\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\n\t\t\t\tret += buffer.substring(startOffset, startOffset + accumulatedValue - endOffset);\n\t\t\t\treturn ret;\n\t\t\t} else {\n\t\t\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\t\t\t\tret += buffer.substr(startOffset, x.piece.length);\n\t\t\t}\n\n\t\t\tx = x.next();\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tprivate computeBufferMetadata() {\n\t\tlet x = this.root;\n\n\t\tlet lfCnt = 1;\n\t\tlet len = 0;\n\n\t\twhile (x !== SENTINEL) {\n\t\t\tlfCnt += x.lf_left + x.piece.lineFeedCnt;\n\t\t\tlen += x.size_left + x.piece.length;\n\t\t\tx = x.right;\n\t\t}\n\n\t\tthis._lineCnt = lfCnt;\n\t\tthis._length = len;\n\t\tthis._searchCache.validate(this._length);\n\t}\n\n\t// #region node operations\n\tprivate getIndexOf(node: TreeNode, accumulatedValue: number): { index: number; remainder: number } {\n\t\tconst piece = node.piece;\n\t\tconst pos = this.positionInBuffer(node, accumulatedValue);\n\t\tconst lineCnt = pos.line - piece.start.line;\n\n\t\tif (this.offsetInBuffer(piece.bufferIndex, piece.end) - this.offsetInBuffer(piece.bufferIndex, piece.start) === accumulatedValue) {\n\t\t\t// we are checking the end of this node, so a CRLF check is necessary.\n\t\t\tconst realLineCnt = this.getLineFeedCnt(node.piece.bufferIndex, piece.start, pos);\n\t\t\tif (realLineCnt !== lineCnt) {\n\t\t\t\t// aha yes, CRLF\n\t\t\t\treturn { index: realLineCnt, remainder: 0 };\n\t\t\t}\n\t\t}\n\n\t\treturn { index: lineCnt, remainder: pos.column };\n\t}\n\n\tprivate getAccumulatedValue(node: TreeNode, index: number) {\n\t\tif (index < 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst piece = node.piece;\n\t\tconst lineStarts = this._buffers[piece.bufferIndex].lineStarts;\n\t\tconst expectedLineStartIndex = piece.start.line + index + 1;\n\t\tif (expectedLineStartIndex > piece.end.line) {\n\t\t\treturn lineStarts[piece.end.line] + piece.end.column - lineStarts[piece.start.line] - piece.start.column;\n\t\t} else {\n\t\t\treturn lineStarts[expectedLineStartIndex] - lineStarts[piece.start.line] - piece.start.column;\n\t\t}\n\t}\n\n\tprivate deleteNodeTail(node: TreeNode, pos: BufferCursor) {\n\t\tconst piece = node.piece;\n\t\tconst originalLFCnt = piece.lineFeedCnt;\n\t\tconst originalEndOffset = this.offsetInBuffer(piece.bufferIndex, piece.end);\n\n\t\tconst newEnd = pos;\n\t\tconst newEndOffset = this.offsetInBuffer(piece.bufferIndex, newEnd);\n\t\tconst newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, piece.start, newEnd);\n\n\t\tconst lf_delta = newLineFeedCnt - originalLFCnt;\n\t\tconst size_delta = newEndOffset - originalEndOffset;\n\t\tconst newLength = piece.length + size_delta;\n\n\t\tnode.piece = new Piece(\n\t\t\tpiece.bufferIndex,\n\t\t\tpiece.start,\n\t\t\tnewEnd,\n\t\t\tnewLineFeedCnt,\n\t\t\tnewLength\n\t\t);\n\n\t\tupdateTreeMetadata(this, node, size_delta, lf_delta);\n\t}\n\n\tprivate deleteNodeHead(node: TreeNode, pos: BufferCursor) {\n\t\tconst piece = node.piece;\n\t\tconst originalLFCnt = piece.lineFeedCnt;\n\t\tconst originalStartOffset = this.offsetInBuffer(piece.bufferIndex, piece.start);\n\n\t\tconst newStart = pos;\n\t\tconst newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, newStart, piece.end);\n\t\tconst newStartOffset = this.offsetInBuffer(piece.bufferIndex, newStart);\n\t\tconst lf_delta = newLineFeedCnt - originalLFCnt;\n\t\tconst size_delta = originalStartOffset - newStartOffset;\n\t\tconst newLength = piece.length + size_delta;\n\t\tnode.piece = new Piece(\n\t\t\tpiece.bufferIndex,\n\t\t\tnewStart,\n\t\t\tpiece.end,\n\t\t\tnewLineFeedCnt,\n\t\t\tnewLength\n\t\t);\n\n\t\tupdateTreeMetadata(this, node, size_delta, lf_delta);\n\t}\n\n\tprivate shrinkNode(node: TreeNode, start: BufferCursor, end: BufferCursor) {\n\t\tconst piece = node.piece;\n\t\tconst originalStartPos = piece.start;\n\t\tconst originalEndPos = piece.end;\n\n\t\t// old piece, originalStartPos, start\n\t\tconst oldLength = piece.length;\n\t\tconst oldLFCnt = piece.lineFeedCnt;\n\t\tconst newEnd = start;\n\t\tconst newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, piece.start, newEnd);\n\t\tconst newLength = this.offsetInBuffer(piece.bufferIndex, start) - this.offsetInBuffer(piece.bufferIndex, originalStartPos);\n\n\t\tnode.piece = new Piece(\n\t\t\tpiece.bufferIndex,\n\t\t\tpiece.start,\n\t\t\tnewEnd,\n\t\t\tnewLineFeedCnt,\n\t\t\tnewLength\n\t\t);\n\n\t\tupdateTreeMetadata(this, node, newLength - oldLength, newLineFeedCnt - oldLFCnt);\n\n\t\t// new right piece, end, originalEndPos\n\t\tconst newPiece = new Piece(\n\t\t\tpiece.bufferIndex,\n\t\t\tend,\n\t\t\toriginalEndPos,\n\t\t\tthis.getLineFeedCnt(piece.bufferIndex, end, originalEndPos),\n\t\t\tthis.offsetInBuffer(piece.bufferIndex, originalEndPos) - this.offsetInBuffer(piece.bufferIndex, end)\n\t\t);\n\n\t\tconst newNode = this.rbInsertRight(node, newPiece);\n\t\tthis.validateCRLFWithPrevNode(newNode);\n\t}\n\n\tprivate appendToNode(node: TreeNode, value: string): void {\n\t\tif (this.adjustCarriageReturnFromNext(value, node)) {\n\t\t\tvalue += '\\n';\n\t\t}\n\n\t\tconst hitCRLF = this.shouldCheckCRLF() && this.startWithLF(value) && this.endWithCR(node);\n\t\tconst startOffset = this._buffers[0].buffer.length;\n\t\tthis._buffers[0].buffer += value;\n\t\tconst lineStarts = createLineStartsFast(value, false);\n\t\tfor (let i = 0; i < lineStarts.length; i++) {\n\t\t\tlineStarts[i] += startOffset;\n\t\t}\n\t\tif (hitCRLF) {\n\t\t\tconst prevStartOffset = this._buffers[0].lineStarts[this._buffers[0].lineStarts.length - 2];\n\t\t\t(<number[]>this._buffers[0].lineStarts).pop();\n\t\t\t// _lastChangeBufferPos is already wrong\n\t\t\tthis._lastChangeBufferPos = { line: this._lastChangeBufferPos.line - 1, column: startOffset - prevStartOffset };\n\t\t}\n\n\t\tthis._buffers[0].lineStarts = (<number[]>this._buffers[0].lineStarts).concat(<number[]>lineStarts.slice(1));\n\t\tconst endIndex = this._buffers[0].lineStarts.length - 1;\n\t\tconst endColumn = this._buffers[0].buffer.length - this._buffers[0].lineStarts[endIndex];\n\t\tconst newEnd = { line: endIndex, column: endColumn };\n\t\tconst newLength = node.piece.length + value.length;\n\t\tconst oldLineFeedCnt = node.piece.lineFeedCnt;\n\t\tconst newLineFeedCnt = this.getLineFeedCnt(0, node.piece.start, newEnd);\n\t\tconst lf_delta = newLineFeedCnt - oldLineFeedCnt;\n\n\t\tnode.piece = new Piece(\n\t\t\tnode.piece.bufferIndex,\n\t\t\tnode.piece.start,\n\t\t\tnewEnd,\n\t\t\tnewLineFeedCnt,\n\t\t\tnewLength\n\t\t);\n\n\t\tthis._lastChangeBufferPos = newEnd;\n\t\tupdateTreeMetadata(this, node, value.length, lf_delta);\n\t}\n\n\tprivate nodeAt(offset: number): NodePosition {\n\t\tlet x = this.root;\n\t\tconst cache = this._searchCache.get(offset);\n\t\tif (cache) {\n\t\t\treturn {\n\t\t\t\tnode: cache.node,\n\t\t\t\tnodeStartOffset: cache.nodeStartOffset,\n\t\t\t\tremainder: offset - cache.nodeStartOffset\n\t\t\t};\n\t\t}\n\n\t\tlet nodeStartOffset = 0;\n\n\t\twhile (x !== SENTINEL) {\n\t\t\tif (x.size_left > offset) {\n\t\t\t\tx = x.left;\n\t\t\t} else if (x.size_left + x.piece.length >= offset) {\n\t\t\t\tnodeStartOffset += x.size_left;\n\t\t\t\tconst ret = {\n\t\t\t\t\tnode: x,\n\t\t\t\t\tremainder: offset - x.size_left,\n\t\t\t\t\tnodeStartOffset\n\t\t\t\t};\n\t\t\t\tthis._searchCache.set(ret);\n\t\t\t\treturn ret;\n\t\t\t} else {\n\t\t\t\toffset -= x.size_left + x.piece.length;\n\t\t\t\tnodeStartOffset += x.size_left + x.piece.length;\n\t\t\t\tx = x.right;\n\t\t\t}\n\t\t}\n\n\t\treturn null!;\n\t}\n\n\tprivate nodeAt2(lineNumber: number, column: number): NodePosition {\n\t\tlet x = this.root;\n\t\tlet nodeStartOffset = 0;\n\n\t\twhile (x !== SENTINEL) {\n\t\t\tif (x.left !== SENTINEL && x.lf_left >= lineNumber - 1) {\n\t\t\t\tx = x.left;\n\t\t\t} else if (x.lf_left + x.piece.lineFeedCnt > lineNumber - 1) {\n\t\t\t\tconst prevAccumualtedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n\t\t\t\tconst accumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 1);\n\t\t\t\tnodeStartOffset += x.size_left;\n\n\t\t\t\treturn {\n\t\t\t\t\tnode: x,\n\t\t\t\t\tremainder: Math.min(prevAccumualtedValue + column - 1, accumulatedValue),\n\t\t\t\t\tnodeStartOffset\n\t\t\t\t};\n\t\t\t} else if (x.lf_left + x.piece.lineFeedCnt === lineNumber - 1) {\n\t\t\t\tconst prevAccumualtedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n\t\t\t\tif (prevAccumualtedValue + column - 1 <= x.piece.length) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tnode: x,\n\t\t\t\t\t\tremainder: prevAccumualtedValue + column - 1,\n\t\t\t\t\t\tnodeStartOffset\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tcolumn -= x.piece.length - prevAccumualtedValue;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlineNumber -= x.lf_left + x.piece.lineFeedCnt;\n\t\t\t\tnodeStartOffset += x.size_left + x.piece.length;\n\t\t\t\tx = x.right;\n\t\t\t}\n\t\t}\n\n\t\t// search in order, to find the node contains position.column\n\t\tx = x.next();\n\t\twhile (x !== SENTINEL) {\n\n\t\t\tif (x.piece.lineFeedCnt > 0) {\n\t\t\t\tconst accumulatedValue = this.getAccumulatedValue(x, 0);\n\t\t\t\tconst nodeStartOffset = this.offsetOfNode(x);\n\t\t\t\treturn {\n\t\t\t\t\tnode: x,\n\t\t\t\t\tremainder: Math.min(column - 1, accumulatedValue),\n\t\t\t\t\tnodeStartOffset\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tif (x.piece.length >= column - 1) {\n\t\t\t\t\tconst nodeStartOffset = this.offsetOfNode(x);\n\t\t\t\t\treturn {\n\t\t\t\t\t\tnode: x,\n\t\t\t\t\t\tremainder: column - 1,\n\t\t\t\t\t\tnodeStartOffset\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tcolumn -= x.piece.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tx = x.next();\n\t\t}\n\n\t\treturn null!;\n\t}\n\n\tprivate nodeCharCodeAt(node: TreeNode, offset: number): number {\n\t\tif (node.piece.lineFeedCnt < 1) {\n\t\t\treturn -1;\n\t\t}\n\t\tconst buffer = this._buffers[node.piece.bufferIndex];\n\t\tconst newOffset = this.offsetInBuffer(node.piece.bufferIndex, node.piece.start) + offset;\n\t\treturn buffer.buffer.charCodeAt(newOffset);\n\t}\n\n\tprivate offsetOfNode(node: TreeNode): number {\n\t\tif (!node) {\n\t\t\treturn 0;\n\t\t}\n\t\tlet pos = node.size_left;\n\t\twhile (node !== this.root) {\n\t\t\tif (node.parent.right === node) {\n\t\t\t\tpos += node.parent.size_left + node.parent.piece.length;\n\t\t\t}\n\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\t// #endregion\n\n\t// #region CRLF\n\tprivate shouldCheckCRLF() {\n\t\treturn !(this._EOLNormalized && this._EOL === '\\n');\n\t}\n\n\tprivate startWithLF(val: string | TreeNode): boolean {\n\t\tif (typeof val === 'string') {\n\t\t\treturn val.charCodeAt(0) === 10;\n\t\t}\n\n\t\tif (val === SENTINEL || val.piece.lineFeedCnt === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst piece = val.piece;\n\t\tconst lineStarts = this._buffers[piece.bufferIndex].lineStarts;\n\t\tconst line = piece.start.line;\n\t\tconst startOffset = lineStarts[line] + piece.start.column;\n\t\tif (line === lineStarts.length - 1) {\n\t\t\t// last line, so there is no line feed at the end of this line\n\t\t\treturn false;\n\t\t}\n\t\tconst nextLineOffset = lineStarts[line + 1];\n\t\tif (nextLineOffset > startOffset + 1) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._buffers[piece.bufferIndex].buffer.charCodeAt(startOffset) === 10;\n\t}\n\n\tprivate endWithCR(val: string | TreeNode): boolean {\n\t\tif (typeof val === 'string') {\n\t\t\treturn val.charCodeAt(val.length - 1) === 13;\n\t\t}\n\n\t\tif (val === SENTINEL || val.piece.lineFeedCnt === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.nodeCharCodeAt(val, val.piece.length - 1) === 13;\n\t}\n\n\tprivate validateCRLFWithPrevNode(nextNode: TreeNode) {\n\t\tif (this.shouldCheckCRLF() && this.startWithLF(nextNode)) {\n\t\t\tconst node = nextNode.prev();\n\t\t\tif (this.endWithCR(node)) {\n\t\t\t\tthis.fixCRLF(node, nextNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate validateCRLFWithNextNode(node: TreeNode) {\n\t\tif (this.shouldCheckCRLF() && this.endWithCR(node)) {\n\t\t\tconst nextNode = node.next();\n\t\t\tif (this.startWithLF(nextNode)) {\n\t\t\t\tthis.fixCRLF(node, nextNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate fixCRLF(prev: TreeNode, next: TreeNode) {\n\t\tconst nodesToDel: TreeNode[] = [];\n\t\t// update node\n\t\tconst lineStarts = this._buffers[prev.piece.bufferIndex].lineStarts;\n\t\tlet newEnd: BufferCursor;\n\t\tif (prev.piece.end.column === 0) {\n\t\t\t// it means, last line ends with \\r, not \\r\\n\n\t\t\tnewEnd = { line: prev.piece.end.line - 1, column: lineStarts[prev.piece.end.line] - lineStarts[prev.piece.end.line - 1] - 1 };\n\t\t} else {\n\t\t\t// \\r\\n\n\t\t\tnewEnd = { line: prev.piece.end.line, column: prev.piece.end.column - 1 };\n\t\t}\n\n\t\tconst prevNewLength = prev.piece.length - 1;\n\t\tconst prevNewLFCnt = prev.piece.lineFeedCnt - 1;\n\t\tprev.piece = new Piece(\n\t\t\tprev.piece.bufferIndex,\n\t\t\tprev.piece.start,\n\t\t\tnewEnd,\n\t\t\tprevNewLFCnt,\n\t\t\tprevNewLength\n\t\t);\n\n\t\tupdateTreeMetadata(this, prev, - 1, -1);\n\t\tif (prev.piece.length === 0) {\n\t\t\tnodesToDel.push(prev);\n\t\t}\n\n\t\t// update nextNode\n\t\tconst newStart: BufferCursor = { line: next.piece.start.line + 1, column: 0 };\n\t\tconst newLength = next.piece.length - 1;\n\t\tconst newLineFeedCnt = this.getLineFeedCnt(next.piece.bufferIndex, newStart, next.piece.end);\n\t\tnext.piece = new Piece(\n\t\t\tnext.piece.bufferIndex,\n\t\t\tnewStart,\n\t\t\tnext.piece.end,\n\t\t\tnewLineFeedCnt,\n\t\t\tnewLength\n\t\t);\n\n\t\tupdateTreeMetadata(this, next, - 1, -1);\n\t\tif (next.piece.length === 0) {\n\t\t\tnodesToDel.push(next);\n\t\t}\n\n\t\t// create new piece which contains \\r\\n\n\t\tconst pieces = this.createNewPieces('\\r\\n');\n\t\tthis.rbInsertRight(prev, pieces[0]);\n\t\t// delete empty nodes\n\n\t\tfor (let i = 0; i < nodesToDel.length; i++) {\n\t\t\trbDelete(this, nodesToDel[i]);\n\t\t}\n\t}\n\n\tprivate adjustCarriageReturnFromNext(value: string, node: TreeNode): boolean {\n\t\tif (this.shouldCheckCRLF() && this.endWithCR(value)) {\n\t\t\tconst nextNode = node.next();\n\t\t\tif (this.startWithLF(nextNode)) {\n\t\t\t\t// move `\\n` forward\n\t\t\t\tvalue += '\\n';\n\n\t\t\t\tif (nextNode.piece.length === 1) {\n\t\t\t\t\trbDelete(this, nextNode);\n\t\t\t\t} else {\n\n\t\t\t\t\tconst piece = nextNode.piece;\n\t\t\t\t\tconst newStart: BufferCursor = { line: piece.start.line + 1, column: 0 };\n\t\t\t\t\tconst newLength = piece.length - 1;\n\t\t\t\t\tconst newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, newStart, piece.end);\n\t\t\t\t\tnextNode.piece = new Piece(\n\t\t\t\t\t\tpiece.bufferIndex,\n\t\t\t\t\t\tnewStart,\n\t\t\t\t\t\tpiece.end,\n\t\t\t\t\t\tnewLineFeedCnt,\n\t\t\t\t\t\tnewLength\n\t\t\t\t\t);\n\n\t\t\t\t\tupdateTreeMetadata(this, nextNode, -1, -1);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// #endregion\n\n\t// #endregion\n\n\t// #region Tree operations\n\titerate(node: TreeNode, callback: (node: TreeNode) => boolean): boolean {\n\t\tif (node === SENTINEL) {\n\t\t\treturn callback(SENTINEL);\n\t\t}\n\n\t\tconst leftRet = this.iterate(node.left, callback);\n\t\tif (!leftRet) {\n\t\t\treturn leftRet;\n\t\t}\n\n\t\treturn callback(node) && this.iterate(node.right, callback);\n\t}\n\n\tprivate getNodeContent(node: TreeNode) {\n\t\tif (node === SENTINEL) {\n\t\t\treturn '';\n\t\t}\n\t\tconst buffer = this._buffers[node.piece.bufferIndex];\n\t\tconst piece = node.piece;\n\t\tconst startOffset = this.offsetInBuffer(piece.bufferIndex, piece.start);\n\t\tconst endOffset = this.offsetInBuffer(piece.bufferIndex, piece.end);\n\t\tconst currentContent = buffer.buffer.substring(startOffset, endOffset);\n\t\treturn currentContent;\n\t}\n\n\tgetPieceContent(piece: Piece) {\n\t\tconst buffer = this._buffers[piece.bufferIndex];\n\t\tconst startOffset = this.offsetInBuffer(piece.bufferIndex, piece.start);\n\t\tconst endOffset = this.offsetInBuffer(piece.bufferIndex, piece.end);\n\t\tconst currentContent = buffer.buffer.substring(startOffset, endOffset);\n\t\treturn currentContent;\n\t}\n\n\t/**\n\t *      node              node\n\t *     /  \\              /  \\\n\t *    a   b    <----   a    b\n\t *                         /\n\t *                        z\n\t */\n\tprivate rbInsertRight(node: TreeNode | null, p: Piece): TreeNode {\n\t\tconst z = new TreeNode(p, NodeColor.Red);\n\t\tz.left = SENTINEL;\n\t\tz.right = SENTINEL;\n\t\tz.parent = SENTINEL;\n\t\tz.size_left = 0;\n\t\tz.lf_left = 0;\n\n\t\tconst x = this.root;\n\t\tif (x === SENTINEL) {\n\t\t\tthis.root = z;\n\t\t\tz.color = NodeColor.Black;\n\t\t} else if (node!.right === SENTINEL) {\n\t\t\tnode!.right = z;\n\t\t\tz.parent = node!;\n\t\t} else {\n\t\t\tconst nextNode = leftest(node!.right);\n\t\t\tnextNode.left = z;\n\t\t\tz.parent = nextNode;\n\t\t}\n\n\t\tfixInsert(this, z);\n\t\treturn z;\n\t}\n\n\t/**\n\t *      node              node\n\t *     /  \\              /  \\\n\t *    a   b     ---->   a    b\n\t *                       \\\n\t *                        z\n\t */\n\tprivate rbInsertLeft(node: TreeNode | null, p: Piece): TreeNode {\n\t\tconst z = new TreeNode(p, NodeColor.Red);\n\t\tz.left = SENTINEL;\n\t\tz.right = SENTINEL;\n\t\tz.parent = SENTINEL;\n\t\tz.size_left = 0;\n\t\tz.lf_left = 0;\n\n\t\tif (this.root === SENTINEL) {\n\t\t\tthis.root = z;\n\t\t\tz.color = NodeColor.Black;\n\t\t} else if (node!.left === SENTINEL) {\n\t\t\tnode!.left = z;\n\t\t\tz.parent = node!;\n\t\t} else {\n\t\t\tconst prevNode = righttest(node!.left); // a\n\t\t\tprevNode.right = z;\n\t\t\tz.parent = prevNode;\n\t\t}\n\n\t\tfixInsert(this, z);\n\t\treturn z;\n\t}\n\n\tprivate getContentOfSubTree(node: TreeNode): string {\n\t\tlet str = '';\n\n\t\tthis.iterate(node, node => {\n\t\t\tstr += this.getNodeContent(node);\n\t\t\treturn true;\n\t\t});\n\n\t\treturn str;\n\t}\n\t// #endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport * as strings from 'vs/base/common/strings';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { ApplyEditsResult, EndOfLinePreference, FindMatch, IInternalModelContentChange, ISingleEditOperationIdentifier, ITextBuffer, ITextSnapshot, ValidAnnotatedEditOperation, IValidEditOperation, SearchData } from 'vs/editor/common/model';\nimport { PieceTreeBase, StringBuffer } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeBase';\nimport { countEOL, StringEOL } from 'vs/editor/common/core/eolCounter';\nimport { TextChange } from 'vs/editor/common/core/textChange';\nimport { Disposable } from 'vs/base/common/lifecycle';\n\nexport interface IValidatedEditOperation {\n\tsortIndex: number;\n\tidentifier: ISingleEditOperationIdentifier | null;\n\trange: Range;\n\trangeOffset: number;\n\trangeLength: number;\n\ttext: string;\n\teolCount: number;\n\tfirstLineLength: number;\n\tlastLineLength: number;\n\tforceMoveMarkers: boolean;\n\tisAutoWhitespaceEdit: boolean;\n}\n\ninterface IReverseSingleEditOperation extends IValidEditOperation {\n\tsortIndex: number;\n}\n\nexport class PieceTreeTextBuffer extends Disposable implements ITextBuffer {\n\tprivate _pieceTree: PieceTreeBase;\n\tprivate readonly _BOM: string;\n\tprivate _mightContainRTL: boolean;\n\tprivate _mightContainUnusualLineTerminators: boolean;\n\tprivate _mightContainNonBasicASCII: boolean;\n\n\tprivate readonly _onDidChangeContent: Emitter<void> = this._register(new Emitter<void>());\n\tpublic readonly onDidChangeContent: Event<void> = this._onDidChangeContent.event;\n\n\tconstructor(chunks: StringBuffer[], BOM: string, eol: '\\r\\n' | '\\n', containsRTL: boolean, containsUnusualLineTerminators: boolean, isBasicASCII: boolean, eolNormalized: boolean) {\n\t\tsuper();\n\t\tthis._BOM = BOM;\n\t\tthis._mightContainNonBasicASCII = !isBasicASCII;\n\t\tthis._mightContainRTL = containsRTL;\n\t\tthis._mightContainUnusualLineTerminators = containsUnusualLineTerminators;\n\t\tthis._pieceTree = new PieceTreeBase(chunks, eol, eolNormalized);\n\t}\n\n\t// #region TextBuffer\n\tpublic equals(other: ITextBuffer): boolean {\n\t\tif (!(other instanceof PieceTreeTextBuffer)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._BOM !== other._BOM) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.getEOL() !== other.getEOL()) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._pieceTree.equal(other._pieceTree);\n\t}\n\tpublic mightContainRTL(): boolean {\n\t\treturn this._mightContainRTL;\n\t}\n\tpublic mightContainUnusualLineTerminators(): boolean {\n\t\treturn this._mightContainUnusualLineTerminators;\n\t}\n\tpublic resetMightContainUnusualLineTerminators(): void {\n\t\tthis._mightContainUnusualLineTerminators = false;\n\t}\n\tpublic mightContainNonBasicASCII(): boolean {\n\t\treturn this._mightContainNonBasicASCII;\n\t}\n\tpublic getBOM(): string {\n\t\treturn this._BOM;\n\t}\n\tpublic getEOL(): '\\r\\n' | '\\n' {\n\t\treturn this._pieceTree.getEOL();\n\t}\n\n\tpublic createSnapshot(preserveBOM: boolean): ITextSnapshot {\n\t\treturn this._pieceTree.createSnapshot(preserveBOM ? this._BOM : '');\n\t}\n\n\tpublic getOffsetAt(lineNumber: number, column: number): number {\n\t\treturn this._pieceTree.getOffsetAt(lineNumber, column);\n\t}\n\n\tpublic getPositionAt(offset: number): Position {\n\t\treturn this._pieceTree.getPositionAt(offset);\n\t}\n\n\tpublic getRangeAt(start: number, length: number): Range {\n\t\tconst end = start + length;\n\t\tconst startPosition = this.getPositionAt(start);\n\t\tconst endPosition = this.getPositionAt(end);\n\t\treturn new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column);\n\t}\n\n\tpublic getValueInRange(range: Range, eol: EndOfLinePreference = EndOfLinePreference.TextDefined): string {\n\t\tif (range.isEmpty()) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst lineEnding = this._getEndOfLine(eol);\n\t\treturn this._pieceTree.getValueInRange(range, lineEnding);\n\t}\n\n\tpublic getValueLengthInRange(range: Range, eol: EndOfLinePreference = EndOfLinePreference.TextDefined): number {\n\t\tif (range.isEmpty()) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\treturn (range.endColumn - range.startColumn);\n\t\t}\n\n\t\tconst startOffset = this.getOffsetAt(range.startLineNumber, range.startColumn);\n\t\tconst endOffset = this.getOffsetAt(range.endLineNumber, range.endColumn);\n\n\t\t// offsets use the text EOL, so we need to compensate for length differences\n\t\t// if the requested EOL doesn't match the text EOL\n\t\tlet eolOffsetCompensation = 0;\n\t\tconst desiredEOL = this._getEndOfLine(eol);\n\t\tconst actualEOL = this.getEOL();\n\t\tif (desiredEOL.length !== actualEOL.length) {\n\t\t\tconst delta = desiredEOL.length - actualEOL.length;\n\t\t\tconst eolCount = range.endLineNumber - range.startLineNumber;\n\t\t\teolOffsetCompensation = delta * eolCount;\n\t\t}\n\n\t\treturn endOffset - startOffset + eolOffsetCompensation;\n\t}\n\n\tpublic getCharacterCountInRange(range: Range, eol: EndOfLinePreference = EndOfLinePreference.TextDefined): number {\n\t\tif (this._mightContainNonBasicASCII) {\n\t\t\t// we must count by iterating\n\n\t\t\tlet result = 0;\n\n\t\t\tconst fromLineNumber = range.startLineNumber;\n\t\t\tconst toLineNumber = range.endLineNumber;\n\t\t\tfor (let lineNumber = fromLineNumber; lineNumber <= toLineNumber; lineNumber++) {\n\t\t\t\tconst lineContent = this.getLineContent(lineNumber);\n\t\t\t\tconst fromOffset = (lineNumber === fromLineNumber ? range.startColumn - 1 : 0);\n\t\t\t\tconst toOffset = (lineNumber === toLineNumber ? range.endColumn - 1 : lineContent.length);\n\n\t\t\t\tfor (let offset = fromOffset; offset < toOffset; offset++) {\n\t\t\t\t\tif (strings.isHighSurrogate(lineContent.charCodeAt(offset))) {\n\t\t\t\t\t\tresult = result + 1;\n\t\t\t\t\t\toffset = offset + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = result + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult += this._getEndOfLine(eol).length * (toLineNumber - fromLineNumber);\n\n\t\t\treturn result;\n\t\t}\n\n\t\treturn this.getValueLengthInRange(range, eol);\n\t}\n\n\tpublic getLength(): number {\n\t\treturn this._pieceTree.getLength();\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this._pieceTree.getLineCount();\n\t}\n\n\tpublic getLinesContent(): string[] {\n\t\treturn this._pieceTree.getLinesContent();\n\t}\n\n\tpublic getLineContent(lineNumber: number): string {\n\t\treturn this._pieceTree.getLineContent(lineNumber);\n\t}\n\n\tpublic getLineCharCode(lineNumber: number, index: number): number {\n\t\treturn this._pieceTree.getLineCharCode(lineNumber, index);\n\t}\n\n\tpublic getCharCode(offset: number): number {\n\t\treturn this._pieceTree.getCharCode(offset);\n\t}\n\n\tpublic getLineLength(lineNumber: number): number {\n\t\treturn this._pieceTree.getLineLength(lineNumber);\n\t}\n\n\tpublic getLineMinColumn(lineNumber: number): number {\n\t\treturn 1;\n\t}\n\n\tpublic getLineMaxColumn(lineNumber: number): number {\n\t\treturn this.getLineLength(lineNumber) + 1;\n\t}\n\n\tpublic getLineFirstNonWhitespaceColumn(lineNumber: number): number {\n\t\tconst result = strings.firstNonWhitespaceIndex(this.getLineContent(lineNumber));\n\t\tif (result === -1) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn result + 1;\n\t}\n\n\tpublic getLineLastNonWhitespaceColumn(lineNumber: number): number {\n\t\tconst result = strings.lastNonWhitespaceIndex(this.getLineContent(lineNumber));\n\t\tif (result === -1) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn result + 2;\n\t}\n\n\tprivate _getEndOfLine(eol: EndOfLinePreference): string {\n\t\tswitch (eol) {\n\t\t\tcase EndOfLinePreference.LF:\n\t\t\t\treturn '\\n';\n\t\t\tcase EndOfLinePreference.CRLF:\n\t\t\t\treturn '\\r\\n';\n\t\t\tcase EndOfLinePreference.TextDefined:\n\t\t\t\treturn this.getEOL();\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unknown EOL preference');\n\t\t}\n\t}\n\n\tpublic setEOL(newEOL: '\\r\\n' | '\\n'): void {\n\t\tthis._pieceTree.setEOL(newEOL);\n\t}\n\n\tpublic applyEdits(rawOperations: ValidAnnotatedEditOperation[], recordTrimAutoWhitespace: boolean, computeUndoEdits: boolean): ApplyEditsResult {\n\t\tlet mightContainRTL = this._mightContainRTL;\n\t\tlet mightContainUnusualLineTerminators = this._mightContainUnusualLineTerminators;\n\t\tlet mightContainNonBasicASCII = this._mightContainNonBasicASCII;\n\t\tlet canReduceOperations = true;\n\n\t\tlet operations: IValidatedEditOperation[] = [];\n\t\tfor (let i = 0; i < rawOperations.length; i++) {\n\t\t\tconst op = rawOperations[i];\n\t\t\tif (canReduceOperations && op._isTracked) {\n\t\t\t\tcanReduceOperations = false;\n\t\t\t}\n\t\t\tconst validatedRange = op.range;\n\t\t\tif (op.text) {\n\t\t\t\tlet textMightContainNonBasicASCII = true;\n\t\t\t\tif (!mightContainNonBasicASCII) {\n\t\t\t\t\ttextMightContainNonBasicASCII = !strings.isBasicASCII(op.text);\n\t\t\t\t\tmightContainNonBasicASCII = textMightContainNonBasicASCII;\n\t\t\t\t}\n\t\t\t\tif (!mightContainRTL && textMightContainNonBasicASCII) {\n\t\t\t\t\t// check if the new inserted text contains RTL\n\t\t\t\t\tmightContainRTL = strings.containsRTL(op.text);\n\t\t\t\t}\n\t\t\t\tif (!mightContainUnusualLineTerminators && textMightContainNonBasicASCII) {\n\t\t\t\t\t// check if the new inserted text contains unusual line terminators\n\t\t\t\t\tmightContainUnusualLineTerminators = strings.containsUnusualLineTerminators(op.text);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet validText = '';\n\t\t\tlet eolCount = 0;\n\t\t\tlet firstLineLength = 0;\n\t\t\tlet lastLineLength = 0;\n\t\t\tif (op.text) {\n\t\t\t\tlet strEOL: StringEOL;\n\t\t\t\t[eolCount, firstLineLength, lastLineLength, strEOL] = countEOL(op.text);\n\n\t\t\t\tconst bufferEOL = this.getEOL();\n\t\t\t\tconst expectedStrEOL = (bufferEOL === '\\r\\n' ? StringEOL.CRLF : StringEOL.LF);\n\t\t\t\tif (strEOL === StringEOL.Unknown || strEOL === expectedStrEOL) {\n\t\t\t\t\tvalidText = op.text;\n\t\t\t\t} else {\n\t\t\t\t\tvalidText = op.text.replace(/\\r\\n|\\r|\\n/g, bufferEOL);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toperations[i] = {\n\t\t\t\tsortIndex: i,\n\t\t\t\tidentifier: op.identifier || null,\n\t\t\t\trange: validatedRange,\n\t\t\t\trangeOffset: this.getOffsetAt(validatedRange.startLineNumber, validatedRange.startColumn),\n\t\t\t\trangeLength: this.getValueLengthInRange(validatedRange),\n\t\t\t\ttext: validText,\n\t\t\t\teolCount: eolCount,\n\t\t\t\tfirstLineLength: firstLineLength,\n\t\t\t\tlastLineLength: lastLineLength,\n\t\t\t\tforceMoveMarkers: Boolean(op.forceMoveMarkers),\n\t\t\t\tisAutoWhitespaceEdit: op.isAutoWhitespaceEdit || false\n\t\t\t};\n\t\t}\n\n\t\t// Sort operations ascending\n\t\toperations.sort(PieceTreeTextBuffer._sortOpsAscending);\n\n\t\tlet hasTouchingRanges = false;\n\t\tfor (let i = 0, count = operations.length - 1; i < count; i++) {\n\t\t\tconst rangeEnd = operations[i].range.getEndPosition();\n\t\t\tconst nextRangeStart = operations[i + 1].range.getStartPosition();\n\n\t\t\tif (nextRangeStart.isBeforeOrEqual(rangeEnd)) {\n\t\t\t\tif (nextRangeStart.isBefore(rangeEnd)) {\n\t\t\t\t\t// overlapping ranges\n\t\t\t\t\tthrow new Error('Overlapping ranges are not allowed!');\n\t\t\t\t}\n\t\t\t\thasTouchingRanges = true;\n\t\t\t}\n\t\t}\n\n\t\tif (canReduceOperations) {\n\t\t\toperations = this._reduceOperations(operations);\n\t\t}\n\n\t\t// Delta encode operations\n\t\tconst reverseRanges = (computeUndoEdits || recordTrimAutoWhitespace ? PieceTreeTextBuffer._getInverseEditRanges(operations) : []);\n\t\tconst newTrimAutoWhitespaceCandidates: { lineNumber: number; oldContent: string }[] = [];\n\t\tif (recordTrimAutoWhitespace) {\n\t\t\tfor (let i = 0; i < operations.length; i++) {\n\t\t\t\tconst op = operations[i];\n\t\t\t\tconst reverseRange = reverseRanges[i];\n\n\t\t\t\tif (op.isAutoWhitespaceEdit && op.range.isEmpty()) {\n\t\t\t\t\t// Record already the future line numbers that might be auto whitespace removal candidates on next edit\n\t\t\t\t\tfor (let lineNumber = reverseRange.startLineNumber; lineNumber <= reverseRange.endLineNumber; lineNumber++) {\n\t\t\t\t\t\tlet currentLineContent = '';\n\t\t\t\t\t\tif (lineNumber === reverseRange.startLineNumber) {\n\t\t\t\t\t\t\tcurrentLineContent = this.getLineContent(op.range.startLineNumber);\n\t\t\t\t\t\t\tif (strings.firstNonWhitespaceIndex(currentLineContent) !== -1) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewTrimAutoWhitespaceCandidates.push({ lineNumber: lineNumber, oldContent: currentLineContent });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet reverseOperations: IReverseSingleEditOperation[] | null = null;\n\t\tif (computeUndoEdits) {\n\n\t\t\tlet reverseRangeDeltaOffset = 0;\n\t\t\treverseOperations = [];\n\t\t\tfor (let i = 0; i < operations.length; i++) {\n\t\t\t\tconst op = operations[i];\n\t\t\t\tconst reverseRange = reverseRanges[i];\n\t\t\t\tconst bufferText = this.getValueInRange(op.range);\n\t\t\t\tconst reverseRangeOffset = op.rangeOffset + reverseRangeDeltaOffset;\n\t\t\t\treverseRangeDeltaOffset += (op.text.length - bufferText.length);\n\n\t\t\t\treverseOperations[i] = {\n\t\t\t\t\tsortIndex: op.sortIndex,\n\t\t\t\t\tidentifier: op.identifier,\n\t\t\t\t\trange: reverseRange,\n\t\t\t\t\ttext: bufferText,\n\t\t\t\t\ttextChange: new TextChange(op.rangeOffset, bufferText, reverseRangeOffset, op.text)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Can only sort reverse operations when the order is not significant\n\t\t\tif (!hasTouchingRanges) {\n\t\t\t\treverseOperations.sort((a, b) => a.sortIndex - b.sortIndex);\n\t\t\t}\n\t\t}\n\n\n\t\tthis._mightContainRTL = mightContainRTL;\n\t\tthis._mightContainUnusualLineTerminators = mightContainUnusualLineTerminators;\n\t\tthis._mightContainNonBasicASCII = mightContainNonBasicASCII;\n\n\t\tconst contentChanges = this._doApplyEdits(operations);\n\n\t\tlet trimAutoWhitespaceLineNumbers: number[] | null = null;\n\t\tif (recordTrimAutoWhitespace && newTrimAutoWhitespaceCandidates.length > 0) {\n\t\t\t// sort line numbers auto whitespace removal candidates for next edit descending\n\t\t\tnewTrimAutoWhitespaceCandidates.sort((a, b) => b.lineNumber - a.lineNumber);\n\n\t\t\ttrimAutoWhitespaceLineNumbers = [];\n\t\t\tfor (let i = 0, len = newTrimAutoWhitespaceCandidates.length; i < len; i++) {\n\t\t\t\tconst lineNumber = newTrimAutoWhitespaceCandidates[i].lineNumber;\n\t\t\t\tif (i > 0 && newTrimAutoWhitespaceCandidates[i - 1].lineNumber === lineNumber) {\n\t\t\t\t\t// Do not have the same line number twice\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst prevContent = newTrimAutoWhitespaceCandidates[i].oldContent;\n\t\t\t\tconst lineContent = this.getLineContent(lineNumber);\n\n\t\t\t\tif (lineContent.length === 0 || lineContent === prevContent || strings.firstNonWhitespaceIndex(lineContent) !== -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\ttrimAutoWhitespaceLineNumbers.push(lineNumber);\n\t\t\t}\n\t\t}\n\n\t\tthis._onDidChangeContent.fire();\n\n\t\treturn new ApplyEditsResult(\n\t\t\treverseOperations,\n\t\t\tcontentChanges,\n\t\t\ttrimAutoWhitespaceLineNumbers\n\t\t);\n\t}\n\n\t/**\n\t * Transform operations such that they represent the same logic edit,\n\t * but that they also do not cause OOM crashes.\n\t */\n\tprivate _reduceOperations(operations: IValidatedEditOperation[]): IValidatedEditOperation[] {\n\t\tif (operations.length < 1000) {\n\t\t\t// We know from empirical testing that a thousand edits work fine regardless of their shape.\n\t\t\treturn operations;\n\t\t}\n\n\t\t// At one point, due to how events are emitted and how each operation is handled,\n\t\t// some operations can trigger a high amount of temporary string allocations,\n\t\t// that will immediately get edited again.\n\t\t// e.g. a formatter inserting ridiculous ammounts of \\n on a model with a single line\n\t\t// Therefore, the strategy is to collapse all the operations into a huge single edit operation\n\t\treturn [this._toSingleEditOperation(operations)];\n\t}\n\n\t_toSingleEditOperation(operations: IValidatedEditOperation[]): IValidatedEditOperation {\n\t\tlet forceMoveMarkers = false;\n\t\tconst firstEditRange = operations[0].range;\n\t\tconst lastEditRange = operations[operations.length - 1].range;\n\t\tconst entireEditRange = new Range(firstEditRange.startLineNumber, firstEditRange.startColumn, lastEditRange.endLineNumber, lastEditRange.endColumn);\n\t\tlet lastEndLineNumber = firstEditRange.startLineNumber;\n\t\tlet lastEndColumn = firstEditRange.startColumn;\n\t\tconst result: string[] = [];\n\n\t\tfor (let i = 0, len = operations.length; i < len; i++) {\n\t\t\tconst operation = operations[i];\n\t\t\tconst range = operation.range;\n\n\t\t\tforceMoveMarkers = forceMoveMarkers || operation.forceMoveMarkers;\n\n\t\t\t// (1) -- Push old text\n\t\t\tresult.push(this.getValueInRange(new Range(lastEndLineNumber, lastEndColumn, range.startLineNumber, range.startColumn)));\n\n\t\t\t// (2) -- Push new text\n\t\t\tif (operation.text.length > 0) {\n\t\t\t\tresult.push(operation.text);\n\t\t\t}\n\n\t\t\tlastEndLineNumber = range.endLineNumber;\n\t\t\tlastEndColumn = range.endColumn;\n\t\t}\n\n\t\tconst text = result.join('');\n\t\tconst [eolCount, firstLineLength, lastLineLength] = countEOL(text);\n\n\t\treturn {\n\t\t\tsortIndex: 0,\n\t\t\tidentifier: operations[0].identifier,\n\t\t\trange: entireEditRange,\n\t\t\trangeOffset: this.getOffsetAt(entireEditRange.startLineNumber, entireEditRange.startColumn),\n\t\t\trangeLength: this.getValueLengthInRange(entireEditRange, EndOfLinePreference.TextDefined),\n\t\t\ttext: text,\n\t\t\teolCount: eolCount,\n\t\t\tfirstLineLength: firstLineLength,\n\t\t\tlastLineLength: lastLineLength,\n\t\t\tforceMoveMarkers: forceMoveMarkers,\n\t\t\tisAutoWhitespaceEdit: false\n\t\t};\n\t}\n\n\tprivate _doApplyEdits(operations: IValidatedEditOperation[]): IInternalModelContentChange[] {\n\t\toperations.sort(PieceTreeTextBuffer._sortOpsDescending);\n\n\t\tconst contentChanges: IInternalModelContentChange[] = [];\n\n\t\t// operations are from bottom to top\n\t\tfor (let i = 0; i < operations.length; i++) {\n\t\t\tconst op = operations[i];\n\n\t\t\tconst startLineNumber = op.range.startLineNumber;\n\t\t\tconst startColumn = op.range.startColumn;\n\t\t\tconst endLineNumber = op.range.endLineNumber;\n\t\t\tconst endColumn = op.range.endColumn;\n\n\t\t\tif (startLineNumber === endLineNumber && startColumn === endColumn && op.text.length === 0) {\n\t\t\t\t// no-op\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (op.text) {\n\t\t\t\t// replacement\n\t\t\t\tthis._pieceTree.delete(op.rangeOffset, op.rangeLength);\n\t\t\t\tthis._pieceTree.insert(op.rangeOffset, op.text, true);\n\n\t\t\t} else {\n\t\t\t\t// deletion\n\t\t\t\tthis._pieceTree.delete(op.rangeOffset, op.rangeLength);\n\t\t\t}\n\n\t\t\tconst contentChangeRange = new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t\t\tcontentChanges.push({\n\t\t\t\trange: contentChangeRange,\n\t\t\t\trangeLength: op.rangeLength,\n\t\t\t\ttext: op.text,\n\t\t\t\trangeOffset: op.rangeOffset,\n\t\t\t\tforceMoveMarkers: op.forceMoveMarkers\n\t\t\t});\n\t\t}\n\t\treturn contentChanges;\n\t}\n\n\tfindMatchesLineByLine(searchRange: Range, searchData: SearchData, captureMatches: boolean, limitResultCount: number): FindMatch[] {\n\t\treturn this._pieceTree.findMatchesLineByLine(searchRange, searchData, captureMatches, limitResultCount);\n\t}\n\n\t// #endregion\n\n\t// #region helper\n\t// testing purpose.\n\tpublic getPieceTree(): PieceTreeBase {\n\t\treturn this._pieceTree;\n\t}\n\n\tpublic static _getInverseEditRange(range: Range, text: string) {\n\t\tconst startLineNumber = range.startLineNumber;\n\t\tconst startColumn = range.startColumn;\n\t\tconst [eolCount, firstLineLength, lastLineLength] = countEOL(text);\n\t\tlet resultRange: Range;\n\n\t\tif (text.length > 0) {\n\t\t\t// the operation inserts something\n\t\t\tconst lineCount = eolCount + 1;\n\n\t\t\tif (lineCount === 1) {\n\t\t\t\t// single line insert\n\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber, startColumn + firstLineLength);\n\t\t\t} else {\n\t\t\t\t// multi line insert\n\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber + lineCount - 1, lastLineLength + 1);\n\t\t\t}\n\t\t} else {\n\t\t\t// There is nothing to insert\n\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber, startColumn);\n\t\t}\n\n\t\treturn resultRange;\n\t}\n\n\t/**\n\t * Assumes `operations` are validated and sorted ascending\n\t */\n\tpublic static _getInverseEditRanges(operations: IValidatedEditOperation[]): Range[] {\n\t\tconst result: Range[] = [];\n\n\t\tlet prevOpEndLineNumber: number = 0;\n\t\tlet prevOpEndColumn: number = 0;\n\t\tlet prevOp: IValidatedEditOperation | null = null;\n\t\tfor (let i = 0, len = operations.length; i < len; i++) {\n\t\t\tconst op = operations[i];\n\n\t\t\tlet startLineNumber: number;\n\t\t\tlet startColumn: number;\n\n\t\t\tif (prevOp) {\n\t\t\t\tif (prevOp.range.endLineNumber === op.range.startLineNumber) {\n\t\t\t\t\tstartLineNumber = prevOpEndLineNumber;\n\t\t\t\t\tstartColumn = prevOpEndColumn + (op.range.startColumn - prevOp.range.endColumn);\n\t\t\t\t} else {\n\t\t\t\t\tstartLineNumber = prevOpEndLineNumber + (op.range.startLineNumber - prevOp.range.endLineNumber);\n\t\t\t\t\tstartColumn = op.range.startColumn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstartLineNumber = op.range.startLineNumber;\n\t\t\t\tstartColumn = op.range.startColumn;\n\t\t\t}\n\n\t\t\tlet resultRange: Range;\n\n\t\t\tif (op.text.length > 0) {\n\t\t\t\t// the operation inserts something\n\t\t\t\tconst lineCount = op.eolCount + 1;\n\n\t\t\t\tif (lineCount === 1) {\n\t\t\t\t\t// single line insert\n\t\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber, startColumn + op.firstLineLength);\n\t\t\t\t} else {\n\t\t\t\t\t// multi line insert\n\t\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber + lineCount - 1, op.lastLineLength + 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// There is nothing to insert\n\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber, startColumn);\n\t\t\t}\n\n\t\t\tprevOpEndLineNumber = resultRange.endLineNumber;\n\t\t\tprevOpEndColumn = resultRange.endColumn;\n\n\t\t\tresult.push(resultRange);\n\t\t\tprevOp = op;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate static _sortOpsAscending(a: IValidatedEditOperation, b: IValidatedEditOperation): number {\n\t\tconst r = Range.compareRangesUsingEnds(a.range, b.range);\n\t\tif (r === 0) {\n\t\t\treturn a.sortIndex - b.sortIndex;\n\t\t}\n\t\treturn r;\n\t}\n\n\tprivate static _sortOpsDescending(a: IValidatedEditOperation, b: IValidatedEditOperation): number {\n\t\tconst r = Range.compareRangesUsingEnds(a.range, b.range);\n\t\tif (r === 0) {\n\t\t\treturn b.sortIndex - a.sortIndex;\n\t\t}\n\t\treturn -r;\n\t}\n\t// #endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport * as strings from 'vs/base/common/strings';\nimport { DefaultEndOfLine, ITextBuffer, ITextBufferBuilder, ITextBufferFactory } from 'vs/editor/common/model';\nimport { StringBuffer, createLineStarts, createLineStartsFast } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeBase';\nimport { PieceTreeTextBuffer } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBuffer';\n\nclass PieceTreeTextBufferFactory implements ITextBufferFactory {\n\n\tconstructor(\n\t\tprivate readonly _chunks: StringBuffer[],\n\t\tprivate readonly _bom: string,\n\t\tprivate readonly _cr: number,\n\t\tprivate readonly _lf: number,\n\t\tprivate readonly _crlf: number,\n\t\tprivate readonly _containsRTL: boolean,\n\t\tprivate readonly _containsUnusualLineTerminators: boolean,\n\t\tprivate readonly _isBasicASCII: boolean,\n\t\tprivate readonly _normalizeEOL: boolean\n\t) { }\n\n\tprivate _getEOL(defaultEOL: DefaultEndOfLine): '\\r\\n' | '\\n' {\n\t\tconst totalEOLCount = this._cr + this._lf + this._crlf;\n\t\tconst totalCRCount = this._cr + this._crlf;\n\t\tif (totalEOLCount === 0) {\n\t\t\t// This is an empty file or a file with precisely one line\n\t\t\treturn (defaultEOL === DefaultEndOfLine.LF ? '\\n' : '\\r\\n');\n\t\t}\n\t\tif (totalCRCount > totalEOLCount / 2) {\n\t\t\t// More than half of the file contains \\r\\n ending lines\n\t\t\treturn '\\r\\n';\n\t\t}\n\t\t// At least one line more ends in \\n\n\t\treturn '\\n';\n\t}\n\n\tpublic create(defaultEOL: DefaultEndOfLine): { textBuffer: ITextBuffer; disposable: IDisposable } {\n\t\tconst eol = this._getEOL(defaultEOL);\n\t\tconst chunks = this._chunks;\n\n\t\tif (this._normalizeEOL &&\n\t\t\t((eol === '\\r\\n' && (this._cr > 0 || this._lf > 0))\n\t\t\t\t|| (eol === '\\n' && (this._cr > 0 || this._crlf > 0)))\n\t\t) {\n\t\t\t// Normalize pieces\n\t\t\tfor (let i = 0, len = chunks.length; i < len; i++) {\n\t\t\t\tconst str = chunks[i].buffer.replace(/\\r\\n|\\r|\\n/g, eol);\n\t\t\t\tconst newLineStart = createLineStartsFast(str);\n\t\t\t\tchunks[i] = new StringBuffer(str, newLineStart);\n\t\t\t}\n\t\t}\n\n\t\tconst textBuffer = new PieceTreeTextBuffer(chunks, this._bom, eol, this._containsRTL, this._containsUnusualLineTerminators, this._isBasicASCII, this._normalizeEOL);\n\t\treturn { textBuffer: textBuffer, disposable: textBuffer };\n\t}\n\n\tpublic getFirstLineText(lengthLimit: number): string {\n\t\treturn this._chunks[0].buffer.substr(0, lengthLimit).split(/\\r\\n|\\r|\\n/)[0];\n\t}\n}\n\nexport class PieceTreeTextBufferBuilder implements ITextBufferBuilder {\n\tprivate readonly chunks: StringBuffer[];\n\tprivate BOM: string;\n\n\tprivate _hasPreviousChar: boolean;\n\tprivate _previousChar: number;\n\tprivate readonly _tmpLineStarts: number[];\n\n\tprivate cr: number;\n\tprivate lf: number;\n\tprivate crlf: number;\n\tprivate containsRTL: boolean;\n\tprivate containsUnusualLineTerminators: boolean;\n\tprivate isBasicASCII: boolean;\n\n\tconstructor() {\n\t\tthis.chunks = [];\n\t\tthis.BOM = '';\n\n\t\tthis._hasPreviousChar = false;\n\t\tthis._previousChar = 0;\n\t\tthis._tmpLineStarts = [];\n\n\t\tthis.cr = 0;\n\t\tthis.lf = 0;\n\t\tthis.crlf = 0;\n\t\tthis.containsRTL = false;\n\t\tthis.containsUnusualLineTerminators = false;\n\t\tthis.isBasicASCII = true;\n\t}\n\n\tpublic acceptChunk(chunk: string): void {\n\t\tif (chunk.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.chunks.length === 0) {\n\t\t\tif (strings.startsWithUTF8BOM(chunk)) {\n\t\t\t\tthis.BOM = strings.UTF8_BOM_CHARACTER;\n\t\t\t\tchunk = chunk.substr(1);\n\t\t\t}\n\t\t}\n\n\t\tconst lastChar = chunk.charCodeAt(chunk.length - 1);\n\t\tif (lastChar === CharCode.CarriageReturn || (lastChar >= 0xD800 && lastChar <= 0xDBFF)) {\n\t\t\t// last character is \\r or a high surrogate => keep it back\n\t\t\tthis._acceptChunk1(chunk.substr(0, chunk.length - 1), false);\n\t\t\tthis._hasPreviousChar = true;\n\t\t\tthis._previousChar = lastChar;\n\t\t} else {\n\t\t\tthis._acceptChunk1(chunk, false);\n\t\t\tthis._hasPreviousChar = false;\n\t\t\tthis._previousChar = lastChar;\n\t\t}\n\t}\n\n\tprivate _acceptChunk1(chunk: string, allowEmptyStrings: boolean): void {\n\t\tif (!allowEmptyStrings && chunk.length === 0) {\n\t\t\t// Nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._hasPreviousChar) {\n\t\t\tthis._acceptChunk2(String.fromCharCode(this._previousChar) + chunk);\n\t\t} else {\n\t\t\tthis._acceptChunk2(chunk);\n\t\t}\n\t}\n\n\tprivate _acceptChunk2(chunk: string): void {\n\t\tconst lineStarts = createLineStarts(this._tmpLineStarts, chunk);\n\n\t\tthis.chunks.push(new StringBuffer(chunk, lineStarts.lineStarts));\n\t\tthis.cr += lineStarts.cr;\n\t\tthis.lf += lineStarts.lf;\n\t\tthis.crlf += lineStarts.crlf;\n\n\t\tif (this.isBasicASCII) {\n\t\t\tthis.isBasicASCII = lineStarts.isBasicASCII;\n\t\t}\n\t\tif (!this.isBasicASCII && !this.containsRTL) {\n\t\t\t// No need to check if it is basic ASCII\n\t\t\tthis.containsRTL = strings.containsRTL(chunk);\n\t\t}\n\t\tif (!this.isBasicASCII && !this.containsUnusualLineTerminators) {\n\t\t\t// No need to check if it is basic ASCII\n\t\t\tthis.containsUnusualLineTerminators = strings.containsUnusualLineTerminators(chunk);\n\t\t}\n\t}\n\n\tpublic finish(normalizeEOL: boolean = true): PieceTreeTextBufferFactory {\n\t\tthis._finish();\n\t\treturn new PieceTreeTextBufferFactory(\n\t\t\tthis.chunks,\n\t\t\tthis.BOM,\n\t\t\tthis.cr,\n\t\t\tthis.lf,\n\t\t\tthis.crlf,\n\t\t\tthis.containsRTL,\n\t\t\tthis.containsUnusualLineTerminators,\n\t\t\tthis.isBasicASCII,\n\t\t\tnormalizeEOL\n\t\t);\n\t}\n\n\tprivate _finish(): void {\n\t\tif (this.chunks.length === 0) {\n\t\t\tthis._acceptChunk1('', true);\n\t\t}\n\n\t\tif (this._hasPreviousChar) {\n\t\t\tthis._hasPreviousChar = false;\n\t\t\t// recreate last chunk\n\t\t\tconst lastChunk = this.chunks[this.chunks.length - 1];\n\t\t\tlastChunk.buffer += String.fromCharCode(this._previousChar);\n\t\t\tconst newLineStarts = createLineStartsFast(lastChunk.buffer);\n\t\t\tlastChunk.lineStarts = newLineStarts;\n\t\t\tif (this._previousChar === CharCode.CarriageReturn) {\n\t\t\t\tthis.cr++;\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as descriptors from './descriptors';\nimport { ServiceCollection } from './serviceCollection';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>; index: number }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature<T, Args extends any[] = []> {\n\tnew <Services extends BrandedService[]>(...args: [...Args, ...Services]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\nexport type GetLeadingNonServiceArgs<Args> =\n\tArgs extends [...BrandedService[]] ? []\n\t: Args extends [infer A, ...BrandedService[]] ? [A]\n\t: Args extends [infer A, ...infer R] ? [A, ...GetLeadingNonServiceArgs<R>]\n\t: never;\n\nexport interface IInstantiationService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(ctor: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\n\t/**\n\t * Calls a function with a service accessor.\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherits all current services\n\t * and adds/overwrites the given services.\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type `T`.\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\nexport function refineServiceDecorator<T1, T extends T1>(serviceIdentifier: ServiceIdentifier<T1>): ServiceIdentifier<T> {\n\treturn <ServiceIdentifier<T>>serviceIdentifier;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { isChrome, isEdge, isFirefox, isLinux, isMacintosh, isSafari, isWeb, isWindows } from 'vs/base/common/platform';\nimport { isFalsyOrWhitespace } from 'vs/base/common/strings';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nconst CONSTANT_VALUES = new Map<string, boolean>();\nCONSTANT_VALUES.set('false', false);\nCONSTANT_VALUES.set('true', true);\nCONSTANT_VALUES.set('isMac', isMacintosh);\nCONSTANT_VALUES.set('isLinux', isLinux);\nCONSTANT_VALUES.set('isWindows', isWindows);\nCONSTANT_VALUES.set('isWeb', isWeb);\nCONSTANT_VALUES.set('isMacNative', isMacintosh && !isWeb);\nCONSTANT_VALUES.set('isEdge', isEdge);\nCONSTANT_VALUES.set('isFirefox', isFirefox);\nCONSTANT_VALUES.set('isChrome', isChrome);\nCONSTANT_VALUES.set('isSafari', isSafari);\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport const enum ContextKeyExprType {\n\tFalse = 0,\n\tTrue = 1,\n\tDefined = 2,\n\tNot = 3,\n\tEquals = 4,\n\tNotEquals = 5,\n\tAnd = 6,\n\tRegex = 7,\n\tNotRegex = 8,\n\tOr = 9,\n\tIn = 10,\n\tNotIn = 11,\n\tGreater = 12,\n\tGreaterEquals = 13,\n\tSmaller = 14,\n\tSmallerEquals = 15,\n}\n\nexport interface IContextKeyExprMapper {\n\tmapDefined(key: string): ContextKeyExpression;\n\tmapNot(key: string): ContextKeyExpression;\n\tmapEquals(key: string, value: any): ContextKeyExpression;\n\tmapNotEquals(key: string, value: any): ContextKeyExpression;\n\tmapGreater(key: string, value: any): ContextKeyExpression;\n\tmapGreaterEquals(key: string, value: any): ContextKeyExpression;\n\tmapSmaller(key: string, value: any): ContextKeyExpression;\n\tmapSmallerEquals(key: string, value: any): ContextKeyExpression;\n\tmapRegex(key: string, regexp: RegExp | null): ContextKeyRegexExpr;\n\tmapIn(key: string, valueKey: string): ContextKeyInExpr;\n\tmapNotIn(key: string, valueKey: string): ContextKeyNotInExpr;\n}\n\nexport interface IContextKeyExpression {\n\tcmp(other: ContextKeyExpression): number;\n\tequals(other: ContextKeyExpression): boolean;\n\tsubstituteConstants(): ContextKeyExpression | undefined;\n\tevaluate(context: IContext): boolean;\n\tserialize(): string;\n\tkeys(): string[];\n\tmap(mapFnc: IContextKeyExprMapper): ContextKeyExpression;\n\tnegate(): ContextKeyExpression;\n\n}\n\nexport type ContextKeyExpression = (\n\tContextKeyFalseExpr | ContextKeyTrueExpr | ContextKeyDefinedExpr | ContextKeyNotExpr\n\t| ContextKeyEqualsExpr | ContextKeyNotEqualsExpr | ContextKeyRegexExpr\n\t| ContextKeyNotRegexExpr | ContextKeyAndExpr | ContextKeyOrExpr | ContextKeyInExpr\n\t| ContextKeyNotInExpr | ContextKeyGreaterExpr | ContextKeyGreaterEqualsExpr\n\t| ContextKeySmallerExpr | ContextKeySmallerEqualsExpr\n);\n\nexport abstract class ContextKeyExpr {\n\n\tpublic static false(): ContextKeyExpression {\n\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t}\n\tpublic static true(): ContextKeyExpression {\n\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t}\n\tpublic static has(key: string): ContextKeyExpression {\n\t\treturn ContextKeyDefinedExpr.create(key);\n\t}\n\tpublic static equals(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeyEqualsExpr.create(key, value);\n\t}\n\tpublic static notEquals(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeyNotEqualsExpr.create(key, value);\n\t}\n\tpublic static regex(key: string, value: RegExp): ContextKeyExpression {\n\t\treturn ContextKeyRegexExpr.create(key, value);\n\t}\n\tpublic static in(key: string, value: string): ContextKeyExpression {\n\t\treturn ContextKeyInExpr.create(key, value);\n\t}\n\tpublic static notIn(key: string, value: string): ContextKeyExpression {\n\t\treturn ContextKeyNotInExpr.create(key, value);\n\t}\n\tpublic static not(key: string): ContextKeyExpression {\n\t\treturn ContextKeyNotExpr.create(key);\n\t}\n\tpublic static and(...expr: Array<ContextKeyExpression | undefined | null>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyAndExpr.create(expr, null, true);\n\t}\n\tpublic static or(...expr: Array<ContextKeyExpression | undefined | null>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyOrExpr.create(expr, null, true);\n\t}\n\tpublic static greater(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeyGreaterExpr.create(key, value);\n\t}\n\tpublic static greaterEquals(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeyGreaterEqualsExpr.create(key, value);\n\t}\n\tpublic static smaller(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeySmallerExpr.create(key, value);\n\t}\n\tpublic static smallerEquals(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeySmallerEqualsExpr.create(key, value);\n\t}\n\n\tpublic static deserialize(serialized: string | null | undefined, strict: boolean = false): ContextKeyExpression | undefined {\n\t\tif (!serialized) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this._deserializeOrExpression(serialized, strict);\n\t}\n\n\tprivate static _deserializeOrExpression(serialized: string, strict: boolean): ContextKeyExpression | undefined {\n\t\tconst pieces = serialized.split('||');\n\t\treturn ContextKeyOrExpr.create(pieces.map(p => this._deserializeAndExpression(p, strict)), null, true);\n\t}\n\n\tprivate static _deserializeAndExpression(serialized: string, strict: boolean): ContextKeyExpression | undefined {\n\t\tconst pieces = serialized.split('&&');\n\t\treturn ContextKeyAndExpr.create(pieces.map(p => this._deserializeOne(p, strict)), null, true);\n\t}\n\n\tprivate static _deserializeOne(serializedOne: string, strict: boolean): ContextKeyExpression {\n\t\tserializedOne = serializedOne.trim();\n\n\t\tif (serializedOne.indexOf('!=') >= 0) {\n\t\t\tconst pieces = serializedOne.split('!=');\n\t\t\treturn ContextKeyNotEqualsExpr.create(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\n\t\t}\n\n\t\tif (serializedOne.indexOf('==') >= 0) {\n\t\t\tconst pieces = serializedOne.split('==');\n\t\t\treturn ContextKeyEqualsExpr.create(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\n\t\t}\n\n\t\tif (serializedOne.indexOf('=~') >= 0) {\n\t\t\tconst pieces = serializedOne.split('=~');\n\t\t\treturn ContextKeyRegexExpr.create(pieces[0].trim(), this._deserializeRegexValue(pieces[1], strict));\n\t\t}\n\n\t\tif (serializedOne.indexOf(' not in ') >= 0) {\n\t\t\tconst pieces = serializedOne.split(' not in ');\n\t\t\treturn ContextKeyNotInExpr.create(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\n\t\t}\n\n\t\tif (serializedOne.indexOf(' in ') >= 0) {\n\t\t\tconst pieces = serializedOne.split(' in ');\n\t\t\treturn ContextKeyInExpr.create(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\n\t\t}\n\n\t\tif (/^[^<=>]+>=[^<=>]+$/.test(serializedOne)) {\n\t\t\tconst pieces = serializedOne.split('>=');\n\t\t\treturn ContextKeyGreaterEqualsExpr.create(pieces[0].trim(), pieces[1].trim());\n\t\t}\n\n\t\tif (/^[^<=>]+>[^<=>]+$/.test(serializedOne)) {\n\t\t\tconst pieces = serializedOne.split('>');\n\t\t\treturn ContextKeyGreaterExpr.create(pieces[0].trim(), pieces[1].trim());\n\t\t}\n\n\t\tif (/^[^<=>]+<=[^<=>]+$/.test(serializedOne)) {\n\t\t\tconst pieces = serializedOne.split('<=');\n\t\t\treturn ContextKeySmallerEqualsExpr.create(pieces[0].trim(), pieces[1].trim());\n\t\t}\n\n\t\tif (/^[^<=>]+<[^<=>]+$/.test(serializedOne)) {\n\t\t\tconst pieces = serializedOne.split('<');\n\t\t\treturn ContextKeySmallerExpr.create(pieces[0].trim(), pieces[1].trim());\n\t\t}\n\n\t\tif (/^\\!\\s*/.test(serializedOne)) {\n\t\t\treturn ContextKeyNotExpr.create(serializedOne.substr(1).trim());\n\t\t}\n\n\t\treturn ContextKeyDefinedExpr.create(serializedOne);\n\t}\n\n\tprivate static _deserializeValue(serializedValue: string, strict: boolean): any {\n\t\tserializedValue = serializedValue.trim();\n\n\t\tif (serializedValue === 'true') {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (serializedValue === 'false') {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst m = /^'([^']*)'$/.exec(serializedValue);\n\t\tif (m) {\n\t\t\treturn m[1].trim();\n\t\t}\n\n\t\treturn serializedValue;\n\t}\n\n\tprivate static _deserializeRegexValue(serializedValue: string, strict: boolean): RegExp | null {\n\n\t\tif (isFalsyOrWhitespace(serializedValue)) {\n\t\t\tif (strict) {\n\t\t\t\tthrow new Error('missing regexp-value for =~-expression');\n\t\t\t} else {\n\t\t\t\tconsole.warn('missing regexp-value for =~-expression');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tconst start = serializedValue.indexOf('/');\n\t\tconst end = serializedValue.lastIndexOf('/');\n\t\tif (start === end || start < 0 /* || to < 0 */) {\n\t\t\tif (strict) {\n\t\t\t\tthrow new Error(`bad regexp-value '${serializedValue}', missing /-enclosure`);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`bad regexp-value '${serializedValue}', missing /-enclosure`);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tconst value = serializedValue.slice(start + 1, end);\n\t\tconst caseIgnoreFlag = serializedValue[end + 1] === 'i' ? 'i' : '';\n\t\ttry {\n\t\t\treturn new RegExp(value, caseIgnoreFlag);\n\t\t} catch (e) {\n\t\t\tif (strict) {\n\t\t\t\tthrow new Error(`bad regexp-value '${serializedValue}', parse error: ${e}`);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`bad regexp-value '${serializedValue}', parse error: ${e}`);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nexport function expressionsAreEqualWithConstantSubstitution(a: ContextKeyExpression | null | undefined, b: ContextKeyExpression | null | undefined): boolean {\n\tconst aExpr = a ? a.substituteConstants() : undefined;\n\tconst bExpr = b ? b.substituteConstants() : undefined;\n\tif (!aExpr && !bExpr) {\n\t\treturn true;\n\t}\n\tif (!aExpr || !bExpr) {\n\t\treturn false;\n\t}\n\treturn aExpr.equals(bExpr);\n}\n\nfunction cmp(a: ContextKeyExpression, b: ContextKeyExpression): number {\n\treturn a.cmp(b);\n}\n\nexport class ContextKeyFalseExpr implements IContextKeyExpression {\n\tpublic static INSTANCE = new ContextKeyFalseExpr();\n\n\tpublic readonly type = ContextKeyExprType.False;\n\n\tprotected constructor() {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\treturn this.type - other.type;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\treturn (other.type === this.type);\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn false;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn 'false';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn this;\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t}\n}\n\nexport class ContextKeyTrueExpr implements IContextKeyExpression {\n\tpublic static INSTANCE = new ContextKeyTrueExpr();\n\n\tpublic readonly type = ContextKeyExprType.True;\n\n\tprotected constructor() {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\treturn this.type - other.type;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\treturn (other.type === this.type);\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn true;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn 'true';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn this;\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t}\n}\n\nexport class ContextKeyDefinedExpr implements IContextKeyExpression {\n\tpublic static create(key: string, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n\t\t}\n\t\treturn new ContextKeyDefinedExpr(key, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Defined;\n\n\tprotected constructor(\n\t\treadonly key: string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp1(this.key, other.key);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (!!context.getValue(this.key));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.key;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapDefined(this.key);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotExpr.create(this.key, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tif (typeof value === 'boolean') {\n\t\t\treturn (value ? ContextKeyDefinedExpr.create(key, negated) : ContextKeyNotExpr.create(key, negated));\n\t\t}\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst trueValue = constantValue ? 'true' : 'false';\n\t\t\treturn (value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyEqualsExpr(key, value, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Equals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: any,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst trueValue = constantValue ? 'true' : 'false';\n\t\t\treturn (this.value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\t// Intentional ==\n\t\t// eslint-disable-next-line eqeqeq\n\t\treturn (context.getValue(this.key) == this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} == '${this.value}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyInExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, valueKey: string): ContextKeyInExpr {\n\t\treturn new ContextKeyInExpr(key, valueKey);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.In;\n\tprivate negated: ContextKeyExpression | null = null;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly valueKey: string,\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.valueKey, other.key, other.valueKey);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.valueKey === other.valueKey);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tconst source = context.getValue(this.valueKey);\n\n\t\tconst item = context.getValue(this.key);\n\n\t\tif (Array.isArray(source)) {\n\t\t\treturn source.includes(item as any);\n\t\t}\n\n\t\tif (typeof item === 'string' && typeof source === 'object' && source !== null) {\n\t\t\treturn hasOwnProperty.call(source, item);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} in '${this.valueKey}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key, this.valueKey];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyInExpr {\n\t\treturn mapFnc.mapIn(this.key, this.valueKey);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotInExpr.create(this.key, this.valueKey);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyNotInExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, valueKey: string): ContextKeyNotInExpr {\n\t\treturn new ContextKeyNotInExpr(key, valueKey);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotIn;\n\n\tprivate readonly _negated: ContextKeyInExpr;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly valueKey: string,\n\t) {\n\t\tthis._negated = ContextKeyInExpr.create(key, valueKey);\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn this._negated.cmp(other._negated);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn this._negated.equals(other._negated);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn !this._negated.evaluate(context);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} not in '${this.valueKey}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn this._negated.keys();\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNotIn(this.key, this.valueKey);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn this._negated;\n\t}\n}\n\nexport class ContextKeyNotEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tif (typeof value === 'boolean') {\n\t\t\tif (value) {\n\t\t\t\treturn ContextKeyNotExpr.create(key, negated);\n\t\t\t}\n\t\t\treturn ContextKeyDefinedExpr.create(key, negated);\n\t\t}\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst falseValue = constantValue ? 'true' : 'false';\n\t\t\treturn (value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyNotEqualsExpr(key, value, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotEquals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: any,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst falseValue = constantValue ? 'true' : 'false';\n\t\t\treturn (this.value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\t// Intentional !=\n\t\t// eslint-disable-next-line eqeqeq\n\t\treturn (context.getValue(this.key) != this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} != '${this.value}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNotEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyNotExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyNotExpr(key, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Not;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp1(this.key, other.key);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (!context.getValue(this.key));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `!${this.key}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNot(this.key);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyDefinedExpr.create(this.key, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nfunction withFloatOrStr<T extends ContextKeyExpression>(value: any, callback: (value: number | string) => T): T | ContextKeyFalseExpr {\n\tif (typeof value === 'string') {\n\t\tconst n = parseFloat(value);\n\t\tif (!isNaN(n)) {\n\t\t\tvalue = n;\n\t\t}\n\t}\n\tif (typeof value === 'string' || typeof value === 'number') {\n\t\treturn callback(value);\n\t}\n\treturn ContextKeyFalseExpr.INSTANCE;\n}\n\nexport class ContextKeyGreaterExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeyGreaterExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Greater;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) { }\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) > this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} > ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapGreater(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeySmallerEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyGreaterEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeyGreaterEqualsExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.GreaterEquals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) { }\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) >= this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} >= ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapGreaterEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeySmallerExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeySmallerExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeySmallerExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Smaller;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) < this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} < ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapSmaller(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyGreaterEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeySmallerEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeySmallerEqualsExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.SmallerEquals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) <= this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} <= ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapSmallerEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyGreaterExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyRegexExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, regexp: RegExp | null): ContextKeyRegexExpr {\n\t\treturn new ContextKeyRegexExpr(key, regexp);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Regex;\n\tprivate negated: ContextKeyExpression | null = null;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly regexp: RegExp | null\n\t) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\tconst thisSource = this.regexp ? this.regexp.source : '';\n\t\tconst otherSource = other.regexp ? other.regexp.source : '';\n\t\tif (thisSource < otherSource) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (thisSource > otherSource) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tconst thisSource = this.regexp ? this.regexp.source : '';\n\t\t\tconst otherSource = other.regexp ? other.regexp.source : '';\n\t\t\treturn (this.key === other.key && thisSource === otherSource);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tconst value = context.getValue<any>(this.key);\n\t\treturn this.regexp ? this.regexp.test(value) : false;\n\t}\n\n\tpublic serialize(): string {\n\t\tconst value = this.regexp\n\t\t\t? `/${this.regexp.source}/${this.regexp.ignoreCase ? 'i' : ''}`\n\t\t\t: '/invalid/';\n\t\treturn `${this.key} =~ ${value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyRegexExpr {\n\t\treturn mapFnc.mapRegex(this.key, this.regexp);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotRegexExpr.create(this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyNotRegexExpr implements IContextKeyExpression {\n\n\tpublic static create(actual: ContextKeyRegexExpr): ContextKeyExpression {\n\t\treturn new ContextKeyNotRegexExpr(actual);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotRegex;\n\n\tprivate constructor(private readonly _actual: ContextKeyRegexExpr) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn this._actual.cmp(other._actual);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn this._actual.equals(other._actual);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn !this._actual.evaluate(context);\n\t}\n\n\tpublic serialize(): string {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn this._actual.keys();\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyNotRegexExpr(this._actual.map(mapFnc));\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn this._actual;\n\t}\n}\n\n/**\n * @returns the same instance if nothing changed.\n */\nfunction eliminateConstantsInArray(arr: ContextKeyExpression[]): (ContextKeyExpression | undefined)[] {\n\t// Allocate array only if there is a difference\n\tlet newArr: (ContextKeyExpression | undefined)[] | null = null;\n\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\tconst newExpr = arr[i].substituteConstants();\n\n\t\tif (arr[i] !== newExpr) {\n\t\t\t// something has changed!\n\n\t\t\t// allocate array on first difference\n\t\t\tif (newArr === null) {\n\t\t\t\tnewArr = [];\n\t\t\t\tfor (let j = 0; j < i; j++) {\n\t\t\t\t\tnewArr[j] = arr[j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (newArr !== null) {\n\t\t\tnewArr[i] = newExpr;\n\t\t}\n\t}\n\n\tif (newArr === null) {\n\t\treturn arr;\n\t}\n\treturn newArr;\n}\n\nclass ContextKeyAndExpr implements IContextKeyExpression {\n\n\tpublic static create(_expr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null, extraRedundantCheck: boolean): ContextKeyExpression | undefined {\n\t\treturn ContextKeyAndExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.And;\n\n\tprivate constructor(\n\t\tpublic readonly expr: ContextKeyExpression[],\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.expr.length < other.expr.length) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.expr.length > other.expr.length) {\n\t\t\treturn 1;\n\t\t}\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tconst r = cmp(this.expr[i], other.expr[i]);\n\t\t\tif (r !== 0) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tif (this.expr.length !== other.expr.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\t\tif (!this.expr[i].equals(other.expr[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst exprArr = eliminateConstantsInArray(this.expr);\n\t\tif (exprArr === this.expr) {\n\t\t\t// no change\n\t\t\treturn this;\n\t\t}\n\t\treturn ContextKeyAndExpr.create(exprArr, this.negated, false);\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tif (!this.expr[i].evaluate(context)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate static _normalizeArr(arr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null, extraRedundantCheck: boolean): ContextKeyExpression | undefined {\n\t\tconst expr: ContextKeyExpression[] = [];\n\t\tlet hasTrue = false;\n\n\t\tfor (const e of arr) {\n\t\t\tif (!e) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.True) {\n\t\t\t\t// anything && true ==> anything\n\t\t\t\thasTrue = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.False) {\n\t\t\t\t// anything && false ==> false\n\t\t\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.And) {\n\t\t\t\texpr.push(...e.expr);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\texpr.push(e);\n\t\t}\n\n\t\tif (expr.length === 0 && hasTrue) {\n\t\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t\t}\n\n\t\tif (expr.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\texpr.sort(cmp);\n\n\t\t// eliminate duplicate terms\n\t\tfor (let i = 1; i < expr.length; i++) {\n\t\t\tif (expr[i - 1].equals(expr[i])) {\n\t\t\t\texpr.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\t// We must distribute any OR expression because we don't support parens\n\t\t// OR extensions will be at the end (due to sorting rules)\n\t\twhile (expr.length > 1) {\n\t\t\tconst lastElement = expr[expr.length - 1];\n\t\t\tif (lastElement.type !== ContextKeyExprType.Or) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// pop the last element\n\t\t\texpr.pop();\n\n\t\t\t// pop the second to last element\n\t\t\tconst secondToLastElement = expr.pop()!;\n\n\t\t\tconst isFinished = (expr.length === 0);\n\n\t\t\t// distribute `lastElement` over `secondToLastElement`\n\t\t\tconst resultElement = ContextKeyOrExpr.create(\n\t\t\t\tlastElement.expr.map(el => ContextKeyAndExpr.create([el, secondToLastElement], null, extraRedundantCheck)),\n\t\t\t\tnull,\n\t\t\t\tisFinished\n\t\t\t);\n\n\t\t\tif (resultElement) {\n\t\t\t\texpr.push(resultElement);\n\t\t\t\texpr.sort(cmp);\n\t\t\t}\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\t// resolve false AND expressions\n\t\tif (extraRedundantCheck) {\n\t\t\tfor (let i = 0; i < expr.length; i++) {\n\t\t\t\tfor (let j = i + 1; j < expr.length; j++) {\n\t\t\t\t\tif (expr[i].negate().equals(expr[j])) {\n\t\t\t\t\t\t// A && !A case\n\t\t\t\t\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (expr.length === 1) {\n\t\t\t\treturn expr[0];\n\t\t\t}\n\t\t}\n\n\t\treturn new ContextKeyAndExpr(expr, negated);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.expr.map(e => e.serialize()).join(' && ');\n\t}\n\n\tpublic keys(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (const expr of this.expr) {\n\t\t\tresult.push(...expr.keys());\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyAndExpr(this.expr.map(expr => expr.map(mapFnc)), null);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tconst result: ContextKeyExpression[] = [];\n\t\t\tfor (const expr of this.expr) {\n\t\t\t\tresult.push(expr.negate());\n\t\t\t}\n\t\t\tthis.negated = ContextKeyOrExpr.create(result, this, true)!;\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nclass ContextKeyOrExpr implements IContextKeyExpression {\n\n\tpublic static create(_expr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null, extraRedundantCheck: boolean): ContextKeyExpression | undefined {\n\t\treturn ContextKeyOrExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Or;\n\n\tprivate constructor(\n\t\tpublic readonly expr: ContextKeyExpression[],\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.expr.length < other.expr.length) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.expr.length > other.expr.length) {\n\t\t\treturn 1;\n\t\t}\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tconst r = cmp(this.expr[i], other.expr[i]);\n\t\t\tif (r !== 0) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tif (this.expr.length !== other.expr.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\t\tif (!this.expr[i].equals(other.expr[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst exprArr = eliminateConstantsInArray(this.expr);\n\t\tif (exprArr === this.expr) {\n\t\t\t// no change\n\t\t\treturn this;\n\t\t}\n\t\treturn ContextKeyOrExpr.create(exprArr, this.negated, false);\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tif (this.expr[i].evaluate(context)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate static _normalizeArr(arr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null, extraRedundantCheck: boolean): ContextKeyExpression | undefined {\n\t\tlet expr: ContextKeyExpression[] = [];\n\t\tlet hasFalse = false;\n\n\t\tif (arr) {\n\t\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\t\tconst e = arr[i];\n\t\t\t\tif (!e) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.False) {\n\t\t\t\t\t// anything || false ==> anything\n\t\t\t\t\thasFalse = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.True) {\n\t\t\t\t\t// anything || true ==> true\n\t\t\t\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.Or) {\n\t\t\t\t\texpr = expr.concat(e.expr);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\texpr.push(e);\n\t\t\t}\n\n\t\t\tif (expr.length === 0 && hasFalse) {\n\t\t\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t\t\t}\n\n\t\t\texpr.sort(cmp);\n\t\t}\n\n\t\tif (expr.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\t// eliminate duplicate terms\n\t\tfor (let i = 1; i < expr.length; i++) {\n\t\t\tif (expr[i - 1].equals(expr[i])) {\n\t\t\t\texpr.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\t// resolve true OR expressions\n\t\tif (extraRedundantCheck) {\n\t\t\tfor (let i = 0; i < expr.length; i++) {\n\t\t\t\tfor (let j = i + 1; j < expr.length; j++) {\n\t\t\t\t\tif (expr[i].negate().equals(expr[j])) {\n\t\t\t\t\t\t// A || !A case\n\t\t\t\t\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (expr.length === 1) {\n\t\t\t\treturn expr[0];\n\t\t\t}\n\t\t}\n\n\t\treturn new ContextKeyOrExpr(expr, negated);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.expr.map(e => e.serialize()).join(' || ');\n\t}\n\n\tpublic keys(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (const expr of this.expr) {\n\t\t\tresult.push(...expr.keys());\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyOrExpr(this.expr.map(expr => expr.map(mapFnc)), null);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tconst result: ContextKeyExpression[] = [];\n\t\t\tfor (const expr of this.expr) {\n\t\t\t\tresult.push(expr.negate());\n\t\t\t}\n\n\t\t\t// We don't support parens, so here we distribute the AND over the OR terminals\n\t\t\t// We always take the first 2 AND pairs and distribute them\n\t\t\twhile (result.length > 1) {\n\t\t\t\tconst LEFT = result.shift()!;\n\t\t\t\tconst RIGHT = result.shift()!;\n\n\t\t\t\tconst all: ContextKeyExpression[] = [];\n\t\t\t\tfor (const left of getTerminals(LEFT)) {\n\t\t\t\t\tfor (const right of getTerminals(RIGHT)) {\n\t\t\t\t\t\tall.push(ContextKeyAndExpr.create([left, right], null, false)!);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresult.unshift(ContextKeyOrExpr.create(all, null, false)!);\n\t\t\t}\n\n\t\t\tthis.negated = ContextKeyOrExpr.create(result, this, true)!;\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport interface ContextKeyInfo {\n\treadonly key: string;\n\treadonly type?: string;\n\treadonly description?: string;\n}\n\nexport class RawContextKey<T extends ContextKeyValue> extends ContextKeyDefinedExpr {\n\n\tprivate static _info: ContextKeyInfo[] = [];\n\n\tstatic all(): IterableIterator<ContextKeyInfo> {\n\t\treturn RawContextKey._info.values();\n\t}\n\n\tprivate readonly _defaultValue: T | undefined;\n\n\tconstructor(key: string, defaultValue: T | undefined, metaOrHide?: string | true | { type: string; description: string }) {\n\t\tsuper(key, null);\n\t\tthis._defaultValue = defaultValue;\n\n\t\t// collect all context keys into a central place\n\t\tif (typeof metaOrHide === 'object') {\n\t\t\tRawContextKey._info.push({ ...metaOrHide, key });\n\t\t} else if (metaOrHide !== true) {\n\t\t\tRawContextKey._info.push({ key, description: metaOrHide, type: defaultValue !== null && defaultValue !== undefined ? typeof defaultValue : undefined });\n\t\t}\n\t}\n\n\tpublic bindTo(target: IContextKeyService): IContextKey<T> {\n\t\treturn target.createKey(this.key, this._defaultValue);\n\t}\n\n\tpublic getValue(target: IContextKeyService): T | undefined {\n\t\treturn target.getContextKeyValue<T>(this.key);\n\t}\n\n\tpublic toNegated(): ContextKeyExpression {\n\t\treturn this.negate();\n\t}\n\n\tpublic isEqualTo(value: any): ContextKeyExpression {\n\t\treturn ContextKeyEqualsExpr.create(this.key, value);\n\t}\n\n\tpublic notEqualsTo(value: any): ContextKeyExpression {\n\t\treturn ContextKeyNotEqualsExpr.create(this.key, value);\n\t}\n}\n\nexport type ContextKeyValue = null | undefined | boolean | number | string\n\t| Array<null | undefined | boolean | number | string>\n\t| Record<string, null | undefined | boolean | number | string>;\n\nexport interface IContext {\n\tgetValue<T extends ContextKeyValue = ContextKeyValue>(key: string): T | undefined;\n}\n\nexport interface IContextKey<T extends ContextKeyValue = ContextKeyValue> {\n\tset(value: T): void;\n\treset(): void;\n\tget(): T | undefined;\n}\n\nexport interface IContextKeyServiceTarget {\n\tparentElement: IContextKeyServiceTarget | null;\n\tsetAttribute(attr: string, value: string): void;\n\tremoveAttribute(attr: string): void;\n\thasAttribute(attr: string): boolean;\n\tgetAttribute(attr: string): string | null;\n}\n\nexport const IContextKeyService = createDecorator<IContextKeyService>('contextKeyService');\n\nexport interface IReadableSet<T> {\n\thas(value: T): boolean;\n}\n\nexport interface IContextKeyChangeEvent {\n\taffectsSome(keys: IReadableSet<string>): boolean;\n\tallKeysContainedIn(keys: IReadableSet<string>): boolean;\n}\n\nexport interface IContextKeyService {\n\treadonly _serviceBrand: undefined;\n\tdispose(): void;\n\n\tonDidChangeContext: Event<IContextKeyChangeEvent>;\n\tbufferChangeEvents(callback: Function): void;\n\n\tcreateKey<T extends ContextKeyValue>(key: string, defaultValue: T | undefined): IContextKey<T>;\n\tcontextMatchesRules(rules: ContextKeyExpression | undefined): boolean;\n\tgetContextKeyValue<T>(key: string): T | undefined;\n\n\tcreateScoped(target: IContextKeyServiceTarget): IContextKeyService;\n\tcreateOverlay(overlay: Iterable<[string, any]>): IContextKeyService;\n\tgetContext(target: IContextKeyServiceTarget | null): IContext;\n\n\tupdateParent(parentContextKeyService: IContextKeyService): void;\n}\n\nfunction cmp1(key1: string, key2: string): number {\n\tif (key1 < key2) {\n\t\treturn -1;\n\t}\n\tif (key1 > key2) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nfunction cmp2(key1: string, value1: any, key2: string, value2: any): number {\n\tif (key1 < key2) {\n\t\treturn -1;\n\t}\n\tif (key1 > key2) {\n\t\treturn 1;\n\t}\n\tif (value1 < value2) {\n\t\treturn -1;\n\t}\n\tif (value1 > value2) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\n/**\n * Returns true if it is provable `p` implies `q`.\n */\nexport function implies(p: ContextKeyExpression, q: ContextKeyExpression): boolean {\n\n\tif (p.type === ContextKeyExprType.False || q.type === ContextKeyExprType.True) {\n\t\t// false implies anything\n\t\t// anything implies true\n\t\treturn true;\n\t}\n\n\tif (p.type === ContextKeyExprType.Or) {\n\t\tif (q.type === ContextKeyExprType.Or) {\n\t\t\t// `a || b || c` can only imply something like `a || b || c || d`\n\t\t\treturn allElementsIncluded(p.expr, q.expr);\n\t\t}\n\t\treturn false;\n\t}\n\n\tif (q.type === ContextKeyExprType.Or) {\n\t\tfor (const element of q.expr) {\n\t\t\tif (implies(p, element)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tif (p.type === ContextKeyExprType.And) {\n\t\tif (q.type === ContextKeyExprType.And) {\n\t\t\t// `a && b && c` implies `a && c`\n\t\t\treturn allElementsIncluded(q.expr, p.expr);\n\t\t}\n\t\tfor (const element of p.expr) {\n\t\t\tif (implies(element, q)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\treturn p.equals(q);\n}\n\n/**\n * Returns true if all elements in `p` are also present in `q`.\n * The two arrays are assumed to be sorted\n */\nfunction allElementsIncluded(p: ContextKeyExpression[], q: ContextKeyExpression[]): boolean {\n\tlet pIndex = 0;\n\tlet qIndex = 0;\n\twhile (pIndex < p.length && qIndex < q.length) {\n\t\tconst cmp = p[pIndex].cmp(q[qIndex]);\n\n\t\tif (cmp < 0) {\n\t\t\t// an element from `p` is missing from `q`\n\t\t\treturn false;\n\t\t} else if (cmp === 0) {\n\t\t\tpIndex++;\n\t\t\tqIndex++;\n\t\t} else {\n\t\t\tqIndex++;\n\t\t}\n\t}\n\treturn (pIndex === p.length);\n}\n\nfunction getTerminals(node: ContextKeyExpression) {\n\tif (node.type === ContextKeyExprType.Or) {\n\t\treturn node.expr;\n\t}\n\treturn [node];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { decodeBase64, encodeBase64, VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IDiffResult } from 'vs/base/common/diff/diff';\nimport { Event } from 'vs/base/common/event';\nimport * as glob from 'vs/base/common/glob';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { Mimes } from 'vs/base/common/mime';\nimport { Schemas } from 'vs/base/common/network';\nimport { basename } from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\nimport { ISplice } from 'vs/base/common/sequence';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { ILineChange } from 'vs/editor/common/diff/smartLinesDiffComputer';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport { Command, WorkspaceEditMetadata } from 'vs/editor/common/languages';\nimport { IReadonlyTextBuffer } from 'vs/editor/common/model';\nimport { IAccessibilityInformation } from 'vs/platform/accessibility/common/accessibility';\nimport { RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IEditorModel } from 'vs/platform/editor/common/editor';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { ThemeColor } from 'vs/base/common/themables';\nimport { UndoRedoGroup } from 'vs/platform/undoRedo/common/undoRedo';\nimport { IRevertOptions, ISaveOptions, IUntypedEditorInput } from 'vs/workbench/common/editor';\nimport { NotebookTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookTextModel';\nimport { ICellRange } from 'vs/workbench/contrib/notebook/common/notebookRange';\nimport { IWorkingCopyBackupMeta, IWorkingCopySaveEvent } from 'vs/workbench/services/workingCopy/common/workingCopy';\n\nexport const NOTEBOOK_EDITOR_ID = 'workbench.editor.notebook';\nexport const NOTEBOOK_DIFF_EDITOR_ID = 'workbench.editor.notebookTextDiffEditor';\nexport const INTERACTIVE_WINDOW_EDITOR_ID = 'workbench.editor.interactive';\n\n\nexport enum CellKind {\n\tMarkup = 1,\n\tCode = 2\n}\n\nexport const NOTEBOOK_DISPLAY_ORDER: readonly string[] = [\n\t'application/json',\n\t'application/javascript',\n\t'text/html',\n\t'image/svg+xml',\n\tMimes.latex,\n\tMimes.markdown,\n\t'image/png',\n\t'image/jpeg',\n\tMimes.text\n];\n\nexport const ACCESSIBLE_NOTEBOOK_DISPLAY_ORDER: readonly string[] = [\n\tMimes.latex,\n\tMimes.markdown,\n\t'application/json',\n\tMimes.text,\n\t'text/html',\n\t'image/svg+xml',\n\t'image/png',\n\t'image/jpeg',\n];\n\n/**\n * A mapping of extension IDs who contain renderers, to notebook ids who they\n * should be treated as the same in the renderer selection logic. This is used\n * to prefer the 1st party Jupyter renderers even though they're in a separate\n * extension, for instance. See #136247.\n */\nexport const RENDERER_EQUIVALENT_EXTENSIONS: ReadonlyMap<string, ReadonlySet<string>> = new Map([\n\t['ms-toolsai.jupyter', new Set(['jupyter-notebook', 'interactive'])],\n\t['ms-toolsai.jupyter-renderers', new Set(['jupyter-notebook', 'interactive'])],\n]);\n\nexport const RENDERER_NOT_AVAILABLE = '_notAvailable';\n\nexport type ContributedNotebookRendererEntrypoint = string | { readonly extends: string; readonly path: string };\n\nexport enum NotebookRunState {\n\tRunning = 1,\n\tIdle = 2\n}\n\nexport type NotebookDocumentMetadata = Record<string, unknown>;\n\nexport enum NotebookCellExecutionState {\n\tUnconfirmed = 1,\n\tPending = 2,\n\tExecuting = 3\n}\n\nexport interface INotebookCellPreviousExecutionResult {\n\texecutionOrder?: number;\n\tsuccess?: boolean;\n\tduration?: number;\n}\n\nexport interface NotebookCellMetadata {\n\t/**\n\t * custom metadata\n\t */\n\t[key: string]: unknown;\n}\n\nexport interface NotebookCellInternalMetadata {\n\texecutionOrder?: number;\n\tlastRunSuccess?: boolean;\n\trunStartTime?: number;\n\trunStartTimeAdjustment?: number;\n\trunEndTime?: number;\n}\n\nexport interface NotebookCellCollapseState {\n\tinputCollapsed?: boolean;\n\toutputCollapsed?: boolean;\n}\n\nexport interface NotebookCellDefaultCollapseConfig {\n\tcodeCell?: NotebookCellCollapseState;\n\tmarkupCell?: NotebookCellCollapseState;\n}\n\nexport type InteractiveWindowCollapseCodeCells = 'always' | 'never' | 'fromEditor';\n\nexport type TransientCellMetadata = { readonly [K in keyof NotebookCellMetadata]?: boolean };\nexport type CellContentMetadata = { readonly [K in keyof NotebookCellMetadata]?: boolean };\nexport type TransientDocumentMetadata = { readonly [K in keyof NotebookDocumentMetadata]?: boolean };\n\nexport interface TransientOptions {\n\treadonly transientOutputs: boolean;\n\treadonly transientCellMetadata: TransientCellMetadata;\n\treadonly transientDocumentMetadata: TransientDocumentMetadata;\n\treadonly cellContentMetadata: CellContentMetadata;\n}\n\n/** Note: enum values are used for sorting */\nexport const enum NotebookRendererMatch {\n\t/** Renderer has a hard dependency on an available kernel */\n\tWithHardKernelDependency = 0,\n\t/** Renderer works better with an available kernel */\n\tWithOptionalKernelDependency = 1,\n\t/** Renderer is kernel-agnostic */\n\tPure = 2,\n\t/** Renderer is for a different mimeType or has a hard dependency which is unsatisfied */\n\tNever = 3,\n}\n\n/**\n * Renderer messaging requirement. While this allows for 'optional' messaging,\n * VS Code effectively treats it the same as true right now. \"Partial\n * activation\" of extensions is a very tricky problem, which could allow\n * solving this. But for now, optional is mostly only honored for aznb.\n */\nexport const enum RendererMessagingSpec {\n\tAlways = 'always',\n\tNever = 'never',\n\tOptional = 'optional',\n}\n\nexport type NotebookRendererEntrypoint = { readonly extends: string | undefined; readonly path: URI };\n\nexport interface INotebookRendererInfo {\n\treadonly id: string;\n\treadonly displayName: string;\n\treadonly entrypoint: NotebookRendererEntrypoint;\n\treadonly extensionLocation: URI;\n\treadonly extensionId: ExtensionIdentifier;\n\treadonly messaging: RendererMessagingSpec;\n\n\treadonly mimeTypes: readonly string[];\n\n\treadonly isBuiltin: boolean;\n\n\tmatchesWithoutKernel(mimeType: string): NotebookRendererMatch;\n\tmatches(mimeType: string, kernelProvides: ReadonlyArray<string>): NotebookRendererMatch;\n}\n\nexport interface INotebookStaticPreloadInfo {\n\treadonly type: string;\n\treadonly entrypoint: URI;\n\treadonly extensionLocation: URI;\n}\n\nexport interface IOrderedMimeType {\n\tmimeType: string;\n\trendererId: string;\n\tisTrusted: boolean;\n}\n\nexport interface IOutputItemDto {\n\treadonly mime: string;\n\treadonly data: VSBuffer;\n}\n\nexport interface IOutputDto {\n\toutputs: IOutputItemDto[];\n\toutputId: string;\n\tmetadata?: Record<string, any>;\n}\n\nexport interface ICellOutput {\n\toutputs: IOutputItemDto[];\n\tmetadata?: Record<string, any>;\n\toutputId: string;\n\tonDidChangeData: Event<void>;\n\treplaceData(items: IOutputDto): void;\n\tappendData(items: IOutputItemDto[]): void;\n}\n\nexport interface CellInternalMetadataChangedEvent {\n\treadonly lastRunSuccessChanged?: boolean;\n}\n\nexport interface ICell {\n\treadonly uri: URI;\n\thandle: number;\n\tlanguage: string;\n\tcellKind: CellKind;\n\toutputs: ICellOutput[];\n\tmetadata: NotebookCellMetadata;\n\tinternalMetadata: NotebookCellInternalMetadata;\n\tgetHashValue(): number;\n\ttextBuffer: IReadonlyTextBuffer;\n\tonDidChangeOutputs?: Event<NotebookCellOutputsSplice>;\n\tonDidChangeOutputItems?: Event<void>;\n\tonDidChangeLanguage: Event<string>;\n\tonDidChangeMetadata: Event<void>;\n\tonDidChangeInternalMetadata: Event<CellInternalMetadataChangedEvent>;\n}\n\nexport interface INotebookTextModel {\n\treadonly viewType: string;\n\tmetadata: NotebookDocumentMetadata;\n\treadonly transientOptions: TransientOptions;\n\treadonly uri: URI;\n\treadonly versionId: number;\n\treadonly length: number;\n\treadonly cells: readonly ICell[];\n\treset(cells: ICellDto2[], metadata: NotebookDocumentMetadata, transientOptions: TransientOptions): void;\n\tapplyEdits(rawEdits: ICellEditOperation[], synchronous: boolean, beginSelectionState: ISelectionState | undefined, endSelectionsComputer: () => ISelectionState | undefined, undoRedoGroup: UndoRedoGroup | undefined, computeUndoRedo?: boolean): boolean;\n\tonDidChangeContent: Event<NotebookTextModelChangedEvent>;\n\tonWillDispose: Event<void>;\n}\n\nexport type NotebookCellTextModelSplice<T> = [\n\tstart: number,\n\tdeleteCount: number,\n\tnewItems: T[]\n];\n\nexport type NotebookCellOutputsSplice = {\n\tstart: number /* start */;\n\tdeleteCount: number /* delete count */;\n\tnewOutputs: ICellOutput[];\n};\n\nexport interface IMainCellDto {\n\thandle: number;\n\turi: UriComponents;\n\tsource: string[];\n\teol: string;\n\tlanguage: string;\n\tcellKind: CellKind;\n\toutputs: IOutputDto[];\n\tmetadata?: NotebookCellMetadata;\n\tinternalMetadata?: NotebookCellInternalMetadata;\n}\n\nexport enum NotebookCellsChangeType {\n\tModelChange = 1,\n\tMove = 2,\n\tChangeCellLanguage = 5,\n\tInitialize = 6,\n\tChangeCellMetadata = 7,\n\tOutput = 8,\n\tOutputItem = 9,\n\tChangeCellContent = 10,\n\tChangeDocumentMetadata = 11,\n\tChangeCellInternalMetadata = 12,\n\tChangeCellMime = 13,\n\tUnknown = 100\n}\n\nexport interface NotebookCellsInitializeEvent<T> {\n\treadonly kind: NotebookCellsChangeType.Initialize;\n\treadonly changes: NotebookCellTextModelSplice<T>[];\n}\n\nexport interface NotebookCellContentChangeEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellContent;\n\treadonly index: number;\n}\n\nexport interface NotebookCellsModelChangedEvent<T> {\n\treadonly kind: NotebookCellsChangeType.ModelChange;\n\treadonly changes: NotebookCellTextModelSplice<T>[];\n}\n\nexport interface NotebookCellsModelMoveEvent<T> {\n\treadonly kind: NotebookCellsChangeType.Move;\n\treadonly index: number;\n\treadonly length: number;\n\treadonly newIdx: number;\n\treadonly cells: T[];\n}\n\nexport interface NotebookOutputChangedEvent {\n\treadonly kind: NotebookCellsChangeType.Output;\n\treadonly index: number;\n\treadonly outputs: IOutputDto[];\n\treadonly append: boolean;\n}\n\nexport interface NotebookOutputItemChangedEvent {\n\treadonly kind: NotebookCellsChangeType.OutputItem;\n\treadonly index: number;\n\treadonly outputId: string;\n\treadonly outputItems: IOutputItemDto[];\n\treadonly append: boolean;\n}\n\nexport interface NotebookCellsChangeLanguageEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellLanguage;\n\treadonly index: number;\n\treadonly language: string;\n}\n\nexport interface NotebookCellsChangeMimeEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellMime;\n\treadonly index: number;\n\treadonly mime: string | undefined;\n}\n\nexport interface NotebookCellsChangeMetadataEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellMetadata;\n\treadonly index: number;\n\treadonly metadata: NotebookCellMetadata;\n}\n\nexport interface NotebookCellsChangeInternalMetadataEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellInternalMetadata;\n\treadonly index: number;\n\treadonly internalMetadata: NotebookCellInternalMetadata;\n}\n\nexport interface NotebookDocumentChangeMetadataEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeDocumentMetadata;\n\treadonly metadata: NotebookDocumentMetadata;\n}\n\nexport interface NotebookDocumentUnknownChangeEvent {\n\treadonly kind: NotebookCellsChangeType.Unknown;\n}\n\nexport type NotebookRawContentEventDto = NotebookCellsInitializeEvent<IMainCellDto> | NotebookDocumentChangeMetadataEvent | NotebookCellContentChangeEvent | NotebookCellsModelChangedEvent<IMainCellDto> | NotebookCellsModelMoveEvent<IMainCellDto> | NotebookOutputChangedEvent | NotebookOutputItemChangedEvent | NotebookCellsChangeLanguageEvent | NotebookCellsChangeMimeEvent | NotebookCellsChangeMetadataEvent | NotebookCellsChangeInternalMetadataEvent | NotebookDocumentUnknownChangeEvent;\n\nexport type NotebookCellsChangedEventDto = {\n\treadonly rawEvents: NotebookRawContentEventDto[];\n\treadonly versionId: number;\n};\n\nexport type NotebookRawContentEvent = (NotebookCellsInitializeEvent<ICell> | NotebookDocumentChangeMetadataEvent | NotebookCellContentChangeEvent | NotebookCellsModelChangedEvent<ICell> | NotebookCellsModelMoveEvent<ICell> | NotebookOutputChangedEvent | NotebookOutputItemChangedEvent | NotebookCellsChangeLanguageEvent | NotebookCellsChangeMimeEvent | NotebookCellsChangeMetadataEvent | NotebookCellsChangeInternalMetadataEvent | NotebookDocumentUnknownChangeEvent) & { transient: boolean };\n\nexport enum SelectionStateType {\n\tHandle = 0,\n\tIndex = 1\n}\n\nexport interface ISelectionHandleState {\n\tkind: SelectionStateType.Handle;\n\tprimary: number | null;\n\tselections: number[];\n}\n\nexport interface ISelectionIndexState {\n\tkind: SelectionStateType.Index;\n\tfocus: ICellRange;\n\tselections: ICellRange[];\n}\n\nexport type ISelectionState = ISelectionHandleState | ISelectionIndexState;\n\nexport type NotebookTextModelChangedEvent = {\n\treadonly rawEvents: NotebookRawContentEvent[];\n\treadonly versionId: number;\n\treadonly synchronous: boolean | undefined;\n\treadonly endSelectionState: ISelectionState | undefined;\n};\n\nexport type NotebookTextModelWillAddRemoveEvent = {\n\treadonly rawEvent: NotebookCellsModelChangedEvent<ICell>;\n};\n\nexport const enum CellEditType {\n\tReplace = 1,\n\tOutput = 2,\n\tMetadata = 3,\n\tCellLanguage = 4,\n\tDocumentMetadata = 5,\n\tMove = 6,\n\tOutputItems = 7,\n\tPartialMetadata = 8,\n\tPartialInternalMetadata = 9,\n}\n\nexport interface ICellDto2 {\n\tsource: string;\n\tlanguage: string;\n\tmime: string | undefined;\n\tcellKind: CellKind;\n\toutputs: IOutputDto[];\n\tmetadata?: NotebookCellMetadata;\n\tinternalMetadata?: NotebookCellInternalMetadata;\n\tcollapseState?: NotebookCellCollapseState;\n}\n\nexport interface ICellReplaceEdit {\n\teditType: CellEditType.Replace;\n\tindex: number;\n\tcount: number;\n\tcells: ICellDto2[];\n}\n\nexport interface ICellOutputEdit {\n\teditType: CellEditType.Output;\n\tindex: number;\n\toutputs: IOutputDto[];\n\tappend?: boolean;\n}\n\nexport interface ICellOutputEditByHandle {\n\teditType: CellEditType.Output;\n\thandle: number;\n\toutputs: IOutputDto[];\n\tappend?: boolean;\n}\n\nexport interface ICellOutputItemEdit {\n\teditType: CellEditType.OutputItems;\n\toutputId: string;\n\titems: IOutputItemDto[];\n\tappend?: boolean;\n}\n\nexport interface ICellMetadataEdit {\n\teditType: CellEditType.Metadata;\n\tindex: number;\n\tmetadata: NotebookCellMetadata;\n}\n\n// These types are nullable because we need to use 'null' on the EH side so it is JSON-stringified\nexport type NullablePartialNotebookCellMetadata = {\n\t[Key in keyof Partial<NotebookCellMetadata>]: NotebookCellMetadata[Key] | null\n};\n\nexport interface ICellPartialMetadataEdit {\n\teditType: CellEditType.PartialMetadata;\n\tindex: number;\n\tmetadata: NullablePartialNotebookCellMetadata;\n}\n\nexport interface ICellPartialMetadataEditByHandle {\n\teditType: CellEditType.PartialMetadata;\n\thandle: number;\n\tmetadata: NullablePartialNotebookCellMetadata;\n}\n\nexport type NullablePartialNotebookCellInternalMetadata = {\n\t[Key in keyof Partial<NotebookCellInternalMetadata>]: NotebookCellInternalMetadata[Key] | null\n};\nexport interface ICellPartialInternalMetadataEdit {\n\teditType: CellEditType.PartialInternalMetadata;\n\tindex: number;\n\tinternalMetadata: NullablePartialNotebookCellInternalMetadata;\n}\n\nexport interface ICellPartialInternalMetadataEditByHandle {\n\teditType: CellEditType.PartialInternalMetadata;\n\thandle: number;\n\tinternalMetadata: NullablePartialNotebookCellInternalMetadata;\n}\n\nexport interface ICellLanguageEdit {\n\teditType: CellEditType.CellLanguage;\n\tindex: number;\n\tlanguage: string;\n}\n\nexport interface IDocumentMetadataEdit {\n\teditType: CellEditType.DocumentMetadata;\n\tmetadata: NotebookDocumentMetadata;\n}\n\nexport interface ICellMoveEdit {\n\teditType: CellEditType.Move;\n\tindex: number;\n\tlength: number;\n\tnewIdx: number;\n}\n\nexport type IImmediateCellEditOperation = ICellOutputEditByHandle | ICellPartialMetadataEditByHandle | ICellOutputItemEdit | ICellPartialInternalMetadataEdit | ICellPartialInternalMetadataEditByHandle | ICellPartialMetadataEdit;\nexport type ICellEditOperation = IImmediateCellEditOperation | ICellReplaceEdit | ICellOutputEdit | ICellMetadataEdit | ICellPartialMetadataEdit | ICellPartialInternalMetadataEdit | IDocumentMetadataEdit | ICellMoveEdit | ICellOutputItemEdit | ICellLanguageEdit;\n\n\nexport interface IWorkspaceNotebookCellEdit {\n\tmetadata?: WorkspaceEditMetadata;\n\tresource: URI;\n\tnotebookVersionId: number | undefined;\n\tcellEdit: ICellPartialMetadataEdit | IDocumentMetadataEdit | ICellReplaceEdit;\n}\n\nexport interface NotebookData {\n\treadonly cells: ICellDto2[];\n\treadonly metadata: NotebookDocumentMetadata;\n}\n\n\nexport interface INotebookContributionData {\n\textension?: ExtensionIdentifier;\n\tproviderDisplayName: string;\n\tdisplayName: string;\n\tfilenamePattern: (string | glob.IRelativePattern | INotebookExclusiveDocumentFilter)[];\n\texclusive: boolean;\n}\n\n\nexport namespace CellUri {\n\n\texport const scheme = Schemas.vscodeNotebookCell;\n\n\n\tconst _lengths = ['W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f'];\n\tconst _padRegexp = new RegExp(`^[${_lengths.join('')}]+`);\n\tconst _radix = 7;\n\n\texport function generate(notebook: URI, handle: number): URI {\n\n\t\tconst s = handle.toString(_radix);\n\t\tconst p = s.length < _lengths.length ? _lengths[s.length - 1] : 'z';\n\n\t\tconst fragment = `${p}${s}s${encodeBase64(VSBuffer.fromString(notebook.scheme), true, true)}`;\n\t\treturn notebook.with({ scheme, fragment });\n\t}\n\n\texport function parse(cell: URI): { notebook: URI; handle: number } | undefined {\n\t\tif (cell.scheme !== scheme) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst idx = cell.fragment.indexOf('s');\n\t\tif (idx < 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst handle = parseInt(cell.fragment.substring(0, idx).replace(_padRegexp, ''), _radix);\n\t\tconst _scheme = decodeBase64(cell.fragment.substring(idx + 1)).toString();\n\n\t\tif (isNaN(handle)) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn {\n\t\t\thandle,\n\t\t\tnotebook: cell.with({ scheme: _scheme, fragment: null })\n\t\t};\n\t}\n\n\texport function generateCellOutputUri(notebook: URI, outputId?: string) {\n\t\treturn notebook.with({\n\t\t\tscheme: Schemas.vscodeNotebookCellOutput,\n\t\t\tfragment: `op${outputId ?? ''},${notebook.scheme !== Schemas.file ? notebook.scheme : ''}`\n\t\t});\n\t}\n\n\texport function parseCellOutputUri(uri: URI): { notebook: URI; outputId?: string } | undefined {\n\t\tif (uri.scheme !== Schemas.vscodeNotebookCellOutput) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst match = /^op([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?\\,(.*)$/i.exec(uri.fragment);\n\t\tif (!match) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst outputId = (match[1] && match[1] !== '') ? match[1] : undefined;\n\t\tconst scheme = match[2];\n\t\treturn {\n\t\t\toutputId,\n\t\t\tnotebook: uri.with({\n\t\t\t\tscheme: scheme || Schemas.file,\n\t\t\t\tfragment: null\n\t\t\t})\n\t\t};\n\t}\n\n\texport function generateCellPropertyUri(notebook: URI, handle: number, scheme: string): URI {\n\t\treturn CellUri.generate(notebook, handle).with({ scheme: scheme });\n\t}\n\n\texport function parseCellPropertyUri(uri: URI, propertyScheme: string) {\n\t\tif (uri.scheme !== propertyScheme) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn CellUri.parse(uri.with({ scheme: scheme }));\n\t}\n}\n\nconst normalizeSlashes = (str: string) => isWindows ? str.replace(/\\//g, '\\\\') : str;\n\ninterface IMimeTypeWithMatcher {\n\tpattern: string;\n\tmatches: glob.ParsedPattern;\n}\n\nexport class MimeTypeDisplayOrder {\n\tprivate readonly order: IMimeTypeWithMatcher[];\n\n\tconstructor(\n\t\tinitialValue: readonly string[] = [],\n\t\tprivate readonly defaultOrder = NOTEBOOK_DISPLAY_ORDER,\n\t) {\n\t\tthis.order = [...new Set(initialValue)].map(pattern => ({\n\t\t\tpattern,\n\t\t\tmatches: glob.parse(normalizeSlashes(pattern))\n\t\t}));\n\t}\n\n\t/**\n\t * Returns a sorted array of the input mimetypes.\n\t */\n\tpublic sort(mimetypes: Iterable<string>): string[] {\n\t\tconst remaining = new Map(Iterable.map(mimetypes, m => [m, normalizeSlashes(m)]));\n\t\tlet sorted: string[] = [];\n\n\t\tfor (const { matches } of this.order) {\n\t\t\tfor (const [original, normalized] of remaining) {\n\t\t\t\tif (matches(normalized)) {\n\t\t\t\t\tsorted.push(original);\n\t\t\t\t\tremaining.delete(original);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (remaining.size) {\n\t\t\tsorted = sorted.concat([...remaining.keys()].sort(\n\t\t\t\t(a, b) => this.defaultOrder.indexOf(a) - this.defaultOrder.indexOf(b),\n\t\t\t));\n\t\t}\n\n\t\treturn sorted;\n\t}\n\n\t/**\n\t * Records that the user selected the given mimetype over the other\n\t * possible mimetypes, prioritizing it for future reference.\n\t */\n\tpublic prioritize(chosenMimetype: string, otherMimetypes: readonly string[]) {\n\t\tconst chosenIndex = this.findIndex(chosenMimetype);\n\t\tif (chosenIndex === -1) {\n\t\t\t// always first, nothing more to do\n\t\t\tthis.order.unshift({ pattern: chosenMimetype, matches: glob.parse(normalizeSlashes(chosenMimetype)) });\n\t\t\treturn;\n\t\t}\n\n\t\t// Get the other mimetypes that are before the chosenMimetype. Then, move\n\t\t// them after it, retaining order.\n\t\tconst uniqueIndicies = new Set(otherMimetypes.map(m => this.findIndex(m, chosenIndex)));\n\t\tuniqueIndicies.delete(-1);\n\t\tconst otherIndices = Array.from(uniqueIndicies).sort();\n\t\tthis.order.splice(chosenIndex + 1, 0, ...otherIndices.map(i => this.order[i]));\n\n\t\tfor (let oi = otherIndices.length - 1; oi >= 0; oi--) {\n\t\t\tthis.order.splice(otherIndices[oi], 1);\n\t\t}\n\t}\n\n\t/**\n\t * Gets an array of in-order mimetype preferences.\n\t */\n\tpublic toArray() {\n\t\treturn this.order.map(o => o.pattern);\n\t}\n\n\tprivate findIndex(mimeType: string, maxIndex = this.order.length) {\n\t\tconst normalized = normalizeSlashes(mimeType);\n\t\tfor (let i = 0; i < maxIndex; i++) {\n\t\t\tif (this.order[i].matches(normalized)) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t}\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\treadonly toInsert: T[];\n\tdeleteCount: number;\n}\n\nexport function diff<T>(before: T[], after: T[], contains: (a: T) => boolean, equal: (a: T, b: T) => boolean = (a: T, b: T) => a === b): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\n\t\tif (equal(beforeElement, afterElement)) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (contains(afterElement)) {\n\t\t\t// `afterElement` exists before, which means some elements before `afterElement` are deleted\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else {\n\t\t\t// `afterElement` added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport interface ICellEditorViewState {\n\tselections: editorCommon.ICursorState[];\n}\n\nexport const NOTEBOOK_EDITOR_CURSOR_BOUNDARY = new RawContextKey<'none' | 'top' | 'bottom' | 'both'>('notebookEditorCursorAtBoundary', 'none');\n\n\nexport interface INotebookLoadOptions {\n\t/**\n\t * Go to disk bypassing any cache of the model if any.\n\t */\n\tforceReadFromFile?: boolean;\n}\n\nexport interface IResolvedNotebookEditorModel extends INotebookEditorModel {\n\tnotebook: NotebookTextModel;\n}\n\nexport interface INotebookEditorModel extends IEditorModel {\n\treadonly onDidChangeDirty: Event<void>;\n\treadonly onDidSave: Event<IWorkingCopySaveEvent>;\n\treadonly onDidChangeOrphaned: Event<void>;\n\treadonly onDidChangeReadonly: Event<void>;\n\treadonly resource: URI;\n\treadonly viewType: string;\n\treadonly notebook: INotebookTextModel | undefined;\n\tisResolved(): this is IResolvedNotebookEditorModel;\n\tisDirty(): boolean;\n\tisReadonly(): boolean;\n\tisOrphaned(): boolean;\n\thasAssociatedFilePath(): boolean;\n\tload(options?: INotebookLoadOptions): Promise<IResolvedNotebookEditorModel>;\n\tsave(options?: ISaveOptions): Promise<boolean>;\n\tsaveAs(target: URI): Promise<IUntypedEditorInput | undefined>;\n\trevert(options?: IRevertOptions): Promise<void>;\n}\n\nexport interface INotebookDiffEditorModel extends IEditorModel {\n\toriginal: IResolvedNotebookEditorModel;\n\tmodified: IResolvedNotebookEditorModel;\n}\n\nexport interface NotebookDocumentBackupData extends IWorkingCopyBackupMeta {\n\treadonly viewType: string;\n\treadonly backupId?: string;\n\treadonly mtime?: number;\n}\n\nexport enum NotebookEditorPriority {\n\tdefault = 'default',\n\toption = 'option',\n}\n\nexport interface INotebookSearchOptions {\n\tregex?: boolean;\n\twholeWord?: boolean;\n\tcaseSensitive?: boolean;\n\twordSeparators?: string;\n\tincludeMarkupInput?: boolean;\n\tincludeMarkupPreview?: boolean;\n\tincludeCodeInput?: boolean;\n\tincludeOutput?: boolean;\n}\n\nexport interface INotebookExclusiveDocumentFilter {\n\tinclude?: string | glob.IRelativePattern;\n\texclude?: string | glob.IRelativePattern;\n}\n\nexport interface INotebookDocumentFilter {\n\tviewType?: string | string[];\n\tfilenamePattern?: string | glob.IRelativePattern | INotebookExclusiveDocumentFilter;\n}\n\n//TODO@rebornix test\n\nexport function isDocumentExcludePattern(filenamePattern: string | glob.IRelativePattern | INotebookExclusiveDocumentFilter): filenamePattern is { include: string | glob.IRelativePattern; exclude: string | glob.IRelativePattern } {\n\tconst arg = filenamePattern as INotebookExclusiveDocumentFilter;\n\n\tif ((typeof arg.include === 'string' || glob.isRelativePattern(arg.include))\n\t\t&& (typeof arg.exclude === 'string' || glob.isRelativePattern(arg.exclude))) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\nexport function notebookDocumentFilterMatch(filter: INotebookDocumentFilter, viewType: string, resource: URI): boolean {\n\tif (Array.isArray(filter.viewType) && filter.viewType.indexOf(viewType) >= 0) {\n\t\treturn true;\n\t}\n\n\tif (filter.viewType === viewType) {\n\t\treturn true;\n\t}\n\n\tif (filter.filenamePattern) {\n\t\tconst filenamePattern = isDocumentExcludePattern(filter.filenamePattern) ? filter.filenamePattern.include : (filter.filenamePattern as string | glob.IRelativePattern);\n\t\tconst excludeFilenamePattern = isDocumentExcludePattern(filter.filenamePattern) ? filter.filenamePattern.exclude : undefined;\n\n\t\tif (glob.match(filenamePattern, basename(resource.fsPath).toLowerCase())) {\n\t\t\tif (excludeFilenamePattern) {\n\t\t\t\tif (glob.match(excludeFilenamePattern, basename(resource.fsPath).toLowerCase())) {\n\t\t\t\t\t// should exclude\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport interface INotebookCellStatusBarItemProvider {\n\tviewType: string;\n\tonDidChangeStatusBarItems?: Event<void>;\n\tprovideCellStatusBarItems(uri: URI, index: number, token: CancellationToken): Promise<INotebookCellStatusBarItemList | undefined>;\n}\n\n\nexport interface INotebookDiffResult {\n\tcellsDiff: IDiffResult;\n\tlinesDiff?: { originalCellhandle: number; modifiedCellhandle: number; lineChanges: ILineChange[] }[];\n}\n\nexport interface INotebookCellStatusBarItem {\n\treadonly alignment: CellStatusbarAlignment;\n\treadonly priority?: number;\n\treadonly text: string;\n\treadonly color?: string | ThemeColor;\n\treadonly backgroundColor?: string | ThemeColor;\n\treadonly tooltip?: string;\n\treadonly command?: string | Command;\n\treadonly accessibilityInformation?: IAccessibilityInformation;\n\treadonly opacity?: string;\n\treadonly onlyShowWhenActive?: boolean;\n}\n\nexport interface INotebookCellStatusBarItemList {\n\titems: INotebookCellStatusBarItem[];\n\tdispose?(): void;\n}\n\nexport type ShowCellStatusBarType = 'hidden' | 'visible' | 'visibleAfterExecute';\n\nexport const NotebookSetting = {\n\tdisplayOrder: 'notebook.displayOrder',\n\tcellToolbarLocation: 'notebook.cellToolbarLocation',\n\tcellToolbarVisibility: 'notebook.cellToolbarVisibility',\n\tshowCellStatusBar: 'notebook.showCellStatusBar',\n\ttextDiffEditorPreview: 'notebook.diff.enablePreview',\n\texperimentalInsertToolbarAlignment: 'notebook.experimental.insertToolbarAlignment',\n\tcompactView: 'notebook.compactView',\n\tfocusIndicator: 'notebook.cellFocusIndicator',\n\tinsertToolbarLocation: 'notebook.insertToolbarLocation',\n\tglobalToolbar: 'notebook.globalToolbar',\n\tundoRedoPerCell: 'notebook.undoRedoPerCell',\n\tconsolidatedOutputButton: 'notebook.consolidatedOutputButton',\n\tshowFoldingControls: 'notebook.showFoldingControls',\n\tdragAndDropEnabled: 'notebook.dragAndDropEnabled',\n\tcellEditorOptionsCustomizations: 'notebook.editorOptionsCustomizations',\n\tconsolidatedRunButton: 'notebook.consolidatedRunButton',\n\topenGettingStarted: 'notebook.experimental.openGettingStarted',\n\ttextOutputLineLimit: 'notebook.output.textLineLimit',\n\tglobalToolbarShowLabel: 'notebook.globalToolbarShowLabel',\n\tmarkupFontSize: 'notebook.markup.fontSize',\n\tinteractiveWindowCollapseCodeCells: 'interactiveWindow.collapseCellInputCode',\n\toutputLineHeight: 'notebook.outputLineHeight',\n\toutputFontSize: 'notebook.outputFontSize',\n\toutputFontFamily: 'notebook.outputFontFamily',\n\tkernelPickerType: 'notebook.kernelPicker.type',\n\toutputScrolling: 'notebook.experimental.outputScrolling',\n\tlogging: 'notebook.logging',\n} as const;\n\nexport const enum CellStatusbarAlignment {\n\tLeft = 1,\n\tRight = 2\n}\n\nexport class NotebookWorkingCopyTypeIdentifier {\n\n\tprivate static _prefix = 'notebook/';\n\n\tstatic create(viewType: string): string {\n\t\treturn `${NotebookWorkingCopyTypeIdentifier._prefix}${viewType}`;\n\t}\n\n\tstatic parse(candidate: string): string | undefined {\n\t\tif (candidate.startsWith(NotebookWorkingCopyTypeIdentifier._prefix)) {\n\t\t\treturn candidate.substring(NotebookWorkingCopyTypeIdentifier._prefix.length);\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport interface NotebookExtensionDescription {\n\treadonly id: ExtensionIdentifier;\n\treadonly location: UriComponents | undefined;\n}\n\n/**\n * Whether the provided mime type is a text stream like `stdout`, `stderr`.\n */\nexport function isTextStreamMime(mimeType: string) {\n\treturn ['application/vnd.code.notebook.stdout', 'application/vnd.code.notebook.stderr'].includes(mimeType);\n}\n\n\nconst textDecoder = new TextDecoder();\n\n/**\n * Given a stream of individual stdout outputs, this function will return the compressed lines, escaping some of the common terminal escape codes.\n * E.g. some terminal escape codes would result in the previous line getting cleared, such if we had 3 lines and\n * last line contained such a code, then the result string would be just the first two lines.\n */\nexport function compressOutputItemStreams(outputs: Uint8Array[]) {\n\tconst buffers: Uint8Array[] = [];\n\tlet startAppending = false;\n\n\t// Pick the first set of outputs with the same mime type.\n\tfor (const output of outputs) {\n\t\tif ((buffers.length === 0 || startAppending)) {\n\t\t\tbuffers.push(output);\n\t\t\tstartAppending = true;\n\t\t}\n\t}\n\tcompressStreamBuffer(buffers);\n\treturn formatStreamText(VSBuffer.concat(buffers.map(buffer => VSBuffer.wrap(buffer))));\n}\nconst MOVE_CURSOR_1_LINE_COMMAND = `${String.fromCharCode(27)}[A`;\nconst MOVE_CURSOR_1_LINE_COMMAND_BYTES = MOVE_CURSOR_1_LINE_COMMAND.split('').map(c => c.charCodeAt(0));\nconst LINE_FEED = 10;\nfunction compressStreamBuffer(streams: Uint8Array[]) {\n\tstreams.forEach((stream, index) => {\n\t\tif (index === 0 || stream.length < MOVE_CURSOR_1_LINE_COMMAND.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst previousStream = streams[index - 1];\n\n\t\t// Remove the previous line if required.\n\t\tconst command = stream.subarray(0, MOVE_CURSOR_1_LINE_COMMAND.length);\n\t\tif (command[0] === MOVE_CURSOR_1_LINE_COMMAND_BYTES[0] && command[1] === MOVE_CURSOR_1_LINE_COMMAND_BYTES[1] && command[2] === MOVE_CURSOR_1_LINE_COMMAND_BYTES[2]) {\n\t\t\tconst lastIndexOfLineFeed = previousStream.lastIndexOf(LINE_FEED);\n\t\t\tif (lastIndexOfLineFeed === -1) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tstreams[index - 1] = previousStream.subarray(0, lastIndexOfLineFeed);\n\t\t\tstreams[index] = stream.subarray(MOVE_CURSOR_1_LINE_COMMAND.length);\n\t\t}\n\t});\n}\n\n\n\n/**\n * Took this from jupyter/notebook\n * https://github.com/jupyter/notebook/blob/b8b66332e2023e83d2ee04f83d8814f567e01a4e/notebook/static/base/js/utils.js\n * Remove characters that are overridden by backspace characters\n */\nfunction fixBackspace(txt: string) {\n\tlet tmp = txt;\n\tdo {\n\t\ttxt = tmp;\n\t\t// Cancel out anything-but-newline followed by backspace\n\t\ttmp = txt.replace(/[^\\n]\\x08/gm, '');\n\t} while (tmp.length < txt.length);\n\treturn txt;\n}\n\n/**\n * Remove chunks that should be overridden by the effect of carriage return characters\n * From https://github.com/jupyter/notebook/blob/master/notebook/static/base/js/utils.js\n */\nfunction fixCarriageReturn(txt: string) {\n\ttxt = txt.replace(/\\r+\\n/gm, '\\n'); // \\r followed by \\n --> newline\n\twhile (txt.search(/\\r[^$]/g) > -1) {\n\t\tconst base = txt.match(/^(.*)\\r+/m)![1];\n\t\tlet insert = txt.match(/\\r+(.*)$/m)![1];\n\t\tinsert = insert + base.slice(insert.length, base.length);\n\t\ttxt = txt.replace(/\\r+.*$/m, '\\r').replace(/^.*\\r/m, insert);\n\t}\n\treturn txt;\n}\n\nconst BACKSPACE_CHARACTER = '\\b'.charCodeAt(0);\nconst CARRIAGE_RETURN_CHARACTER = '\\r'.charCodeAt(0);\nfunction formatStreamText(buffer: VSBuffer): VSBuffer {\n\t// We have special handling for backspace and carriage return characters.\n\t// Don't unnecessary decode the bytes if we don't need to perform any processing.\n\tif (!buffer.buffer.includes(BACKSPACE_CHARACTER) && !buffer.buffer.includes(CARRIAGE_RETURN_CHARACTER)) {\n\t\treturn buffer;\n\t}\n\t// Do the same thing jupyter is doing\n\treturn VSBuffer.fromString(fixCarriageReturn(fixBackspace(textDecoder.decode(buffer.buffer))));\n}\n\nexport interface INotebookKernelSourceAction {\n\treadonly label: string;\n\treadonly description?: string;\n\treadonly detail?: string;\n\treadonly command?: string | Command;\n\treadonly documentation?: UriComponents | string;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ISequence, LcsDiff } from 'vs/base/common/diff/diff';\nimport { doHash, hash, numberHash } from 'vs/base/common/hash';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { IRequestHandler } from 'vs/base/common/worker/simpleWorker';\nimport * as model from 'vs/editor/common/model';\nimport { PieceTreeTextBufferBuilder } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBufferBuilder';\nimport { CellKind, ICellDto2, IMainCellDto, INotebookDiffResult, IOutputDto, NotebookCellInternalMetadata, NotebookCellMetadata, NotebookCellsChangedEventDto, NotebookCellsChangeType, NotebookCellTextModelSplice, NotebookData, NotebookDocumentMetadata } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { Range } from 'vs/editor/common/core/range';\nimport { INotebookWorkerHost } from 'vs/workbench/contrib/notebook/common/services/notebookWorkerHost';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\nfunction bufferHash(buffer: VSBuffer): number {\n\tlet initialHashVal = numberHash(104579, 0);\n\tfor (let k = 0; k < buffer.buffer.length; k++) {\n\t\tinitialHashVal = doHash(buffer.buffer[k], initialHashVal);\n\t}\n\n\treturn initialHashVal;\n}\n\nclass MirrorCell {\n\tprivate _textBuffer!: model.IReadonlyTextBuffer;\n\n\tget textBuffer() {\n\t\tif (this._textBuffer) {\n\t\t\treturn this._textBuffer;\n\t\t}\n\n\t\tconst builder = new PieceTreeTextBufferBuilder();\n\t\tbuilder.acceptChunk(Array.isArray(this._source) ? this._source.join('\\n') : this._source);\n\t\tconst bufferFactory = builder.finish(true);\n\t\tthis._textBuffer = bufferFactory.create(model.DefaultEndOfLine.LF).textBuffer;\n\n\t\treturn this._textBuffer;\n\t}\n\n\tprivate _primaryKey?: number | null = null;\n\tprimaryKey(): number | null {\n\t\tif (this._primaryKey === undefined) {\n\t\t\tthis._primaryKey = hash(this.getValue());\n\t\t}\n\n\t\treturn this._primaryKey;\n\t}\n\n\tprivate _hash: number | null = null;\n\n\tconstructor(\n\t\treadonly handle: number,\n\t\tprivate _source: string | string[],\n\t\tpublic language: string,\n\t\tpublic cellKind: CellKind,\n\t\tpublic outputs: IOutputDto[],\n\t\tpublic metadata?: NotebookCellMetadata,\n\t\tpublic internalMetadata?: NotebookCellInternalMetadata,\n\n\t) { }\n\n\tgetFullModelRange() {\n\t\tconst lineCount = this.textBuffer.getLineCount();\n\t\treturn new Range(1, 1, lineCount, this.textBuffer.getLineLength(lineCount) + 1);\n\t}\n\n\tgetValue(): string {\n\t\tconst fullRange = this.getFullModelRange();\n\t\treturn this.textBuffer.getValueInRange(fullRange, model.EndOfLinePreference.LF);\n\t}\n\n\tgetComparisonValue(): number {\n\t\tif (this._primaryKey !== null) {\n\t\t\treturn this._primaryKey!;\n\t\t}\n\n\t\tthis._hash = hash([hash(this.language), hash(this.getValue()), this.metadata, this.internalMetadata, this.outputs.map(op => ({\n\t\t\toutputs: op.outputs.map(output => ({\n\t\t\t\tmime: output.mime,\n\t\t\t\tdata: bufferHash(output.data)\n\t\t\t})),\n\t\t\tmetadata: op.metadata\n\t\t}))]);\n\t\treturn this._hash;\n\t}\n\n\tgetHashValue() {\n\t\tif (this._hash !== null) {\n\t\t\treturn this._hash;\n\t\t}\n\n\t\tthis._hash = hash([hash(this.getValue()), this.language, this.metadata, this.internalMetadata]);\n\t\treturn this._hash;\n\t}\n}\n\nclass MirrorNotebookDocument {\n\tconstructor(\n\t\treadonly uri: URI,\n\t\tpublic cells: MirrorCell[],\n\t\tpublic metadata: NotebookDocumentMetadata,\n\t) {\n\t}\n\n\tacceptModelChanged(event: NotebookCellsChangedEventDto) {\n\t\t// note that the cell content change is not applied to the MirrorCell\n\t\t// but it's fine as if a cell content is modified after the first diff, its position will not change any more\n\t\t// TODO@rebornix, but it might lead to interesting bugs in the future.\n\t\tevent.rawEvents.forEach(e => {\n\t\t\tif (e.kind === NotebookCellsChangeType.ModelChange) {\n\t\t\t\tthis._spliceNotebookCells(e.changes);\n\t\t\t} else if (e.kind === NotebookCellsChangeType.Move) {\n\t\t\t\tconst cells = this.cells.splice(e.index, 1);\n\t\t\t\tthis.cells.splice(e.newIdx, 0, ...cells);\n\t\t\t} else if (e.kind === NotebookCellsChangeType.Output) {\n\t\t\t\tconst cell = this.cells[e.index];\n\t\t\t\tcell.outputs = e.outputs;\n\t\t\t} else if (e.kind === NotebookCellsChangeType.ChangeCellLanguage) {\n\t\t\t\tthis._assertIndex(e.index);\n\t\t\t\tconst cell = this.cells[e.index];\n\t\t\t\tcell.language = e.language;\n\t\t\t} else if (e.kind === NotebookCellsChangeType.ChangeCellMetadata) {\n\t\t\t\tthis._assertIndex(e.index);\n\t\t\t\tconst cell = this.cells[e.index];\n\t\t\t\tcell.metadata = e.metadata;\n\t\t\t} else if (e.kind === NotebookCellsChangeType.ChangeCellInternalMetadata) {\n\t\t\t\tthis._assertIndex(e.index);\n\t\t\t\tconst cell = this.cells[e.index];\n\t\t\t\tcell.internalMetadata = e.internalMetadata;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _assertIndex(index: number): void {\n\t\tif (index < 0 || index >= this.cells.length) {\n\t\t\tthrow new Error(`Illegal index ${index}. Cells length: ${this.cells.length}`);\n\t\t}\n\t}\n\n\t_spliceNotebookCells(splices: NotebookCellTextModelSplice<IMainCellDto>[]) {\n\t\tsplices.reverse().forEach(splice => {\n\t\t\tconst cellDtos = splice[2];\n\t\t\tconst newCells = cellDtos.map(cell => {\n\t\t\t\treturn new MirrorCell(\n\t\t\t\t\t(cell as unknown as IMainCellDto).handle,\n\t\t\t\t\tcell.source,\n\t\t\t\t\tcell.language,\n\t\t\t\t\tcell.cellKind,\n\t\t\t\t\tcell.outputs,\n\t\t\t\t\tcell.metadata\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tthis.cells.splice(splice[0], splice[1], ...newCells);\n\t\t});\n\t}\n}\n\nclass CellSequence implements ISequence {\n\n\tconstructor(readonly textModel: MirrorNotebookDocument) {\n\t}\n\n\tgetElements(): string[] | number[] | Int32Array {\n\t\tconst hashValue = new Int32Array(this.textModel.cells.length);\n\t\tfor (let i = 0; i < this.textModel.cells.length; i++) {\n\t\t\thashValue[i] = this.textModel.cells[i].getComparisonValue();\n\t\t}\n\n\t\treturn hashValue;\n\t}\n\n\tgetCellHash(cell: ICellDto2) {\n\t\tconst source = Array.isArray(cell.source) ? cell.source.join('\\n') : cell.source;\n\t\tconst hashVal = hash([hash(source), cell.metadata]);\n\t\treturn hashVal;\n\t}\n}\n\nexport class NotebookEditorSimpleWorker implements IRequestHandler, IDisposable {\n\t_requestHandlerBrand: any;\n\n\tprivate _models: { [uri: string]: MirrorNotebookDocument };\n\n\tconstructor() {\n\t\tthis._models = Object.create(null);\n\t}\n\tdispose(): void {\n\t}\n\n\tpublic acceptNewModel(uri: string, data: NotebookData): void {\n\t\tthis._models[uri] = new MirrorNotebookDocument(URI.parse(uri), data.cells.map(dto => new MirrorCell(\n\t\t\t(dto as unknown as IMainCellDto).handle,\n\t\t\tdto.source,\n\t\t\tdto.language,\n\t\t\tdto.cellKind,\n\t\t\tdto.outputs,\n\t\t\tdto.metadata\n\t\t)), data.metadata);\n\t}\n\n\tpublic acceptModelChanged(strURL: string, event: NotebookCellsChangedEventDto) {\n\t\tconst model = this._models[strURL];\n\t\tmodel?.acceptModelChanged(event);\n\t}\n\n\tpublic acceptRemovedModel(strURL: string): void {\n\t\tif (!this._models[strURL]) {\n\t\t\treturn;\n\t\t}\n\t\tdelete this._models[strURL];\n\t}\n\n\tcomputeDiff(originalUrl: string, modifiedUrl: string): INotebookDiffResult {\n\t\tconst original = this._getModel(originalUrl);\n\t\tconst modified = this._getModel(modifiedUrl);\n\n\t\tconst diff = new LcsDiff(new CellSequence(original), new CellSequence(modified));\n\t\tconst diffResult = diff.ComputeDiff(false);\n\n\t\t/* let cellLineChanges: { originalCellhandle: number, modifiedCellhandle: number, lineChanges: ILineChange[] }[] = [];\n\n\t\tdiffResult.changes.forEach(change => {\n\t\t\tif (change.modifiedLength === 0) {\n\t\t\t\t// deletion ...\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (change.originalLength === 0) {\n\t\t\t\t// insertion\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (let i = 0, len = Math.min(change.modifiedLength, change.originalLength); i < len; i++) {\n\t\t\t\tlet originalIndex = change.originalStart + i;\n\t\t\t\tlet modifiedIndex = change.modifiedStart + i;\n\n\t\t\t\tconst originalCell = original.cells[originalIndex];\n\t\t\t\tconst modifiedCell = modified.cells[modifiedIndex];\n\n\t\t\t\tif (originalCell.getValue() !== modifiedCell.getValue()) {\n\t\t\t\t\t// console.log(`original cell ${originalIndex} content change`);\n\t\t\t\t\tconst originalLines = originalCell.textBuffer.getLinesContent();\n\t\t\t\t\tconst modifiedLines = modifiedCell.textBuffer.getLinesContent();\n\t\t\t\t\tconst diffComputer = new DiffComputer(originalLines, modifiedLines, {\n\t\t\t\t\t\tshouldComputeCharChanges: true,\n\t\t\t\t\t\tshouldPostProcessCharChanges: true,\n\t\t\t\t\t\tshouldIgnoreTrimWhitespace: false,\n\t\t\t\t\t\tshouldMakePrettyDiff: true,\n\t\t\t\t\t\tmaxComputationTime: 5000\n\t\t\t\t\t});\n\n\t\t\t\t\tconst lineChanges = diffComputer.computeDiff().changes;\n\n\t\t\t\t\tcellLineChanges.push({\n\t\t\t\t\t\toriginalCellhandle: originalCell.handle,\n\t\t\t\t\t\tmodifiedCellhandle: modifiedCell.handle,\n\t\t\t\t\t\tlineChanges\n\t\t\t\t\t});\n\n\t\t\t\t\t// console.log(lineDecorations);\n\n\t\t\t\t} else {\n\t\t\t\t\t// console.log(`original cell ${originalIndex} metadata change`);\n\t\t\t\t}\n\n\t\t\t}\n\t\t});\n */\n\t\treturn {\n\t\t\tcellsDiff: diffResult,\n\t\t\t// linesDiff: cellLineChanges\n\t\t};\n\t}\n\n\tprotected _getModel(uri: string): MirrorNotebookDocument {\n\t\treturn this._models[uri];\n\t}\n}\n\n/**\n * Called on the worker side\n * @internal\n */\nexport function create(host: INotebookWorkerHost): IRequestHandler {\n\treturn new NotebookEditorSimpleWorker();\n}\n"],"mappings":"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","names":["__m","__M","deps","result","i","len","getOrSet","map","key","value","exports","mapToString","entries","setToString","set","ResourceMapEntry","uri","ResourceMap","mapOrKeyFn","toKey","_a","resource","clb","thisArg","_","entry","ResourceSet","entriesOrKey","_b","callbackfn","_value","Touch","LinkedMap","_c","touch","item","state","current","iterator","newSize","currentSize","next","previous","data","LRUCache","limit","ratio","mapExtToTextMimes","mapExtToMediaMimes","getMediaOrTextMime","path","ext","path_1","textMime","getMediaMime","getExtensionForMimeType","mimeType","extension","_simplePattern","normalizeMimeType","strict","match","isReadable","obj","candidate","isReadableStream","fn","isReadableBufferedStream","newWriteableStream","reducer","options","WriteableStreamImpl","e","f","resolve","error","listener","errors_1","event","callback","listeners","index","fullDataBuffer","pendingWritePromises","pendingWritePromise","consumeReadable","readable","chunks","chunk","peekReadable","maxChunks","lastReadChunk","consumeStream","stream","reject","listenStream","destroyed","lifecycle_1","peekStream","streamListeners","buffer","dataListener","errorListener","endListener","toStream","t","emptyStream","toReadable","consumed","transform","transformer","target","prefixedReadable","prefix","prefixHandled","prefixedStream","hasBuffer","textEncoder","textDecoder","VSBuffer","byteLength","actual","source","buffers","totalLength","ret","offset","element","start","end","array","readUInt32BE","writeUInt32BE","readUInt32LE","writeUInt32LE","readUInt8","writeUInt8","readUInt16LE","writeUInt16LE","destination","readableToBuffer","streams","bufferToReadable","streamToBuffer","bufferedStreamToBuffer","bufferedStream","bufferToStream","streamToBufferReadableStream","newWriteableBufferStream","prefixedBufferReadable","prefixedBufferStream","decodeBase64","encoded","building","remainder","bufi","append","code","unpadded","base64Alphabet","base64UrlSafeAlphabet","encodeBase64","padded","urlSafe","dictionary","output","a","b","c","isPathSeparator","toSlashes","osPath","toPosixPath","getRoot","sep","firstLetter","pos","isWindowsDriveLetter","isUNC","platform_1","WINDOWS_INVALID_FILE_CHARS","UNIX_INVALID_FILE_CHARS","WINDOWS_FORBIDDEN_NAMES","isValidBasename","name","isWindowsOS","invalidFileChars","isEqual","pathA","pathB","ignoreCase","identityEquals","strings_1","isEqualOrParent","base","parentCandidate","separator","sepOffset","char0","sanitizeFilePath","cwd","isRootOrDriveLetter","pathNormalized","hasDriveLetter","getDriveLetter","indexOfPath","parseLineAndColumnAware","rawPath","segments","line","column","segment","segmentAsNumber","types_1","pathChars","randomPath","parent","randomLength","suffix","randomFileName","Schemas","RemoteAuthoritiesImpl","schema","delegate","serverRootPath","authority","host","port","connectionToken","err","errors","query","uri_1","platform","FileAccessImpl","resourcePath","require","uriOrModule","moduleIdToUrl","COI","coiHeaders","coiSearchParamName","getHeadersFromQuery","url","params","addSearchParam","urlOrSearch","coop","coep","originalFSPath","ExtUri","uri1","uri2","ignoreFragment","network_1","extpath","pathFragment","paths","dirname","normalizedPath","from","to","relativePath","fromPath","toPath","newURI","a1","a2","fsp","p","isRootSep","distinctParents","items","resourceAccessor","candidateResource","otherItem","DataUri","parseMetaData","dataUri","metadata","property","mime","toLocalResource","localScheme","isThenable","createCancelablePromise","cancellation_1","thenable","promise","subscription","onfinally","raceCancellation","token","defaultValue","ref","raceCancellationError","raceCancellablePromises","cancellablePromises","resolvedPromiseIndex","promises","cancellablePromise","raceTimeout","timeout","onTimeout","promiseResolve","timer","asPromise","Throttler","promiseFactory","onComplete","Sequencer","promiseTask","SequencerByKey","newPromise","timeoutDeferred","scheduled","handle","microtaskDeferred","Delayer","defaultDelay","task","delay","symbols_1","ThrottledDelayer","Barrier","AutoOpenBarrier","autoOpenTimeMs","millis","disposable","disposableTimeout","handler","sequence","promiseFactories","results","thenHandler","n","first","shouldStop","loop","factory","firstParallel","promiseList","todo","finish","Limiter","maxDegreeOfParalellism","event_1","iLimitedTask","Queue","ResourceQueue","DeferredPromise","queue","extUri","resources_1","drainer","TimeoutTimer","runner","IntervalTimer","interval","RunOnceScheduler","ProcessTimeRunOnceScheduler","RunOnceWorker","unit","units","ThrottledWorker","g","h","disposed","IdleValue","executor","retry","retries","lastError","TaskSequentializer","taskId","onCancel","run","promiseReject","IntervalCounter","d","now","Promises","settled","firstError","withAsyncBody","bodyFn","AsyncIterableSourceState","AsyncIterableObject","writer","emitter","iterables","iterable","mapFn","filterFn","values","CancelableAsyncIterableObject","l","createCancelableAsyncIterable","innerIterable","getEmptyExpression","PATH_REGEX","NO_PATH_REGEX","ALL_FORWARD_SLASHES","starsToRegExp","starCount","isLastPattern","splitGlobAware","pattern","splitChar","inBraces","inBrackets","curVal","char","parseRegExp","regEx","previousSegmentWasGlobStar","braceVal","bracketVal","res","choice","T1","T2","T3","T3_2","T4","T5","CACHE","map_1","FALSE","NULL","parsePattern","arg1","patternKey","parsedPattern","wrapRelativePattern","trivia1","trimForExclusions","trivia2","trivia3","trivia4and5","toRegExp","arg2","wrappedPattern","basename","extpath_1","slashBase","backslashBase","basenames","parsedPatterns","aggregateBasenameMatches","patternsLength","withBasenames","allPaths","all","targetPath","matchPathEnds","usingPosixSep","nativePath","nativePathEnd","targetPathEnd","regExp","hasSibling","parse","isRelativePattern","resultPattern","parsedExpression","rp","getBasenameTerms","patternOrExpression","getPathTerms","expression","parseExpressionPattern","resultExpression","resultPromises","async_1","resultPromise","when","clausePattern","matched","basenamePatterns","patterns","aggregate","ch","aggregatedPatterns","patternsEquals","patternsA","patternsB","arrays_1","StringEOL","countEOL","text","eolCount","firstLineLength","lastLineStart","eol","chr","_utf16LE_TextDecoder","getUTF16LE_TextDecoder","_utf16BE_TextDecoder","getUTF16BE_TextDecoder","_platformTextDecoder","getPlatformTextDecoder","decodeUTF16LE","view","compatDecodeUTF16LE","resultLen","charCode","StringBuilder","capacity","bufferString","remainingSpace","strings","str","strLen","escapeNewLine","TextChange","oldPosition","oldText","newPosition","newText","stringBuilder_1","dest","compressConsecutiveTextChanges","prevEdits","currEdits","TextChangeCompressor","prevIndex","currIndex","prevEdit","currEdit","e1","e2","mergePrev","mergeCurr","merged","prevDeltaOffset","currDeltaOffset","edit","preText","postText","edits","prev","curr","TreeNode","piece","color","leftest","node","righttest","NodeColor","calculateSize","calculateLF","resetSentinel","leftRotate","tree","x","y","rightRotate","rbDelete","z","yWasRed","recomputeTreeMetadata","newSizeLeft","newLFLeft","delta","lf_delta","updateTreeMetadata","w","fixInsert","lineFeedCntDelta","AverageBufferSize","createUintArray","arr","r","LineStarts","lineStarts","cr","lf","crlf","isBasicASCII","createLineStartsFast","readonly","rLength","createLineStarts","Piece","bufferIndex","lineFeedCnt","length","StringBuffer","PieceTreeSnapshot","BOM","rbTreeBase_1","PieceTreeSearchCache","nodePos","lineNumber","nodePosition","hasInvalidVal","tmp","newArr","PieceTreeBase","eolNormalized","lastNode","averageBufferSize","min","max","tempChunk","tempChunkLen","newEOL","other","startPosition","endPosition","val","leftLen","lfCnt","originalOffset","out","lineStartOffset","position_1","range","startOffset","lines","linesLength","currentLine","danglingCR","pieceLength","pieceStartLine","pieceEndLine","pieceStartOffset","matchingNode","targetOffset","searcher","startLineNumber","startColumn","startCursor","endCursor","searchData","captureMatches","limitResultCount","startOffsetInBuffer","m","searchText","offsetInBuffer","retStartColumn","retEndColumn","textModelSearch_1","range_1","searchRange","currentNode","lineBreakCnt","nextLineStartOffset","deltaOffset","wordSeparators","searchString","searchStringLen","textLength","lastMatchIndex","model_1","nodeStartOffset","insertPosInBuffer","nodesToDel","newRightPiece","newStart","previousPos","newPieces","tmpNode","k","pieces","cnt","startNode","endNode","startSplitPosInBuffer","endSplitPosInBuffer","secondNode","nPiece","newNode","low","high","mid","midStop","midStart","endOffset","previousCharOffset","cursor","nodes","lastChar","splitText","endIndex","endColumn","endPos","newPiece","cache","prevAccumulatedValue","accumulatedValue","originalLineNumber","lineCnt","realLineCnt","expectedLineStartIndex","originalLFCnt","originalEndOffset","newEnd","newEndOffset","newLineFeedCnt","size_delta","newLength","originalStartOffset","newStartOffset","originalStartPos","originalEndPos","oldLength","oldLFCnt","hitCRLF","prevStartOffset","oldLineFeedCnt","prevAccumualtedValue","newOffset","nextNode","prevNewLength","prevNewLFCnt","leftRet","prevNode","PieceTreeTextBuffer","containsRTL","containsUnusualLineTerminators","pieceTreeBase_1","preserveBOM","lineEnding","eolOffsetCompensation","desiredEOL","actualEOL","fromLineNumber","toLineNumber","lineContent","fromOffset","toOffset","rawOperations","recordTrimAutoWhitespace","computeUndoEdits","mightContainRTL","mightContainUnusualLineTerminators","mightContainNonBasicASCII","canReduceOperations","operations","op","validatedRange","textMightContainNonBasicASCII","validText","lastLineLength","strEOL","eolCounter_1","bufferEOL","hasTouchingRanges","count","rangeEnd","nextRangeStart","reverseRanges","newTrimAutoWhitespaceCandidates","reverseRange","currentLineContent","reverseOperations","reverseRangeDeltaOffset","bufferText","reverseRangeOffset","textChange_1","contentChanges","trimAutoWhitespaceLineNumbers","prevContent","forceMoveMarkers","firstEditRange","lastEditRange","entireEditRange","lastEndLineNumber","lastEndColumn","operation","endLineNumber","contentChangeRange","resultRange","lineCount","prevOpEndLineNumber","prevOpEndColumn","prevOp","PieceTreeTextBufferFactory","j","defaultEOL","totalEOLCount","totalCRCount","newLineStart","textBuffer","pieceTreeTextBuffer_1","lengthLimit","PieceTreeTextBufferBuilder","allowEmptyStrings","normalizeEOL","lastChunk","newLineStarts","_util","getServiceDependencies","ctor","createDecorator","storeServiceDependency","id","serviceId","refineServiceDecorator","serviceIdentifier","CONSTANT_VALUES","hasOwnProperty","ContextKeyExprType","ContextKeyExpr","ContextKeyFalseExpr","ContextKeyTrueExpr","ContextKeyDefinedExpr","ContextKeyEqualsExpr","ContextKeyNotEqualsExpr","ContextKeyRegexExpr","ContextKeyInExpr","ContextKeyNotInExpr","ContextKeyNotExpr","expr","ContextKeyAndExpr","ContextKeyOrExpr","ContextKeyGreaterExpr","ContextKeyGreaterEqualsExpr","ContextKeySmallerExpr","ContextKeySmallerEqualsExpr","serialized","serializedOne","serializedValue","caseIgnoreFlag","expressionsAreEqualWithConstantSubstitution","aExpr","bExpr","cmp","context","mapFnc","negated","constantValue","cmp1","cmp2","trueValue","valueKey","falseValue","withFloatOrStr","regexp","thisSource","otherSource","ContextKeyNotRegexExpr","eliminateConstantsInArray","newExpr","_expr","extraRedundantCheck","exprArr","hasTrue","lastElement","secondToLastElement","isFinished","resultElement","el","hasFalse","LEFT","RIGHT","left","getTerminals","right","RawContextKey","metaOrHide","instantiation_1","key1","key2","value1","value2","implies","q","allElementsIncluded","pIndex","qIndex","CellKind","mime_1","NotebookRunState","NotebookCellExecutionState","NotebookRendererMatch","RendererMessagingSpec","NotebookCellsChangeType","SelectionStateType","CellEditType","CellUri","_lengths","_padRegexp","_radix","generate","notebook","s","fragment","buffer_1","cell","idx","_scheme","generateCellOutputUri","outputId","parseCellOutputUri","scheme","generateCellPropertyUri","parseCellPropertyUri","propertyScheme","normalizeSlashes","MimeTypeDisplayOrder","initialValue","glob","mimetypes","remaining","iterator_1","sorted","matches","original","normalized","chosenMimetype","otherMimetypes","chosenIndex","uniqueIndicies","otherIndices","oi","o","maxIndex","diff","before","after","contains","equal","pushSplice","deleteCount","toInsert","latest","beforeIdx","afterIdx","beforeElement","afterElement","contextkey_1","NotebookEditorPriority","isDocumentExcludePattern","filenamePattern","arg","notebookDocumentFilterMatch","filter","viewType","excludeFilenamePattern","CellStatusbarAlignment","NotebookWorkingCopyTypeIdentifier","isTextStreamMime","compressOutputItemStreams","outputs","startAppending","compressStreamBuffer","formatStreamText","MOVE_CURSOR_1_LINE_COMMAND","MOVE_CURSOR_1_LINE_COMMAND_BYTES","LINE_FEED","previousStream","command","lastIndexOfLineFeed","fixBackspace","txt","fixCarriageReturn","insert","BACKSPACE_CHARACTER","CARRIAGE_RETURN_CHARACTER","bufferHash","initialHashVal","hash_1","MirrorCell","builder","pieceTreeTextBufferBuilder_1","bufferFactory","language","cellKind","internalMetadata","fullRange","MirrorNotebookDocument","cells","notebookCommon_1","splices","splice","newCells","CellSequence","textModel","hashValue","NotebookEditorSimpleWorker","dto","strURL","originalUrl","modifiedUrl","modified","diff_1","create"],"file":"notebookSimpleWorker.js"}