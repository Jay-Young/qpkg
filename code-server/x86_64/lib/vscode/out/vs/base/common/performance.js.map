{"version":3,"sources":["out-vscode-reh-web/vs/base/common/performance.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\n//@ts-check\n\n(function () {\n\n\t/**\n\t * @returns {{mark(name:string):void, getMarks():{name:string, startTime:number}[]}}\n\t */\n\tfunction _definePolyfillMarks(timeOrigin) {\n\n\t\tconst _data = [];\n\t\tif (typeof timeOrigin === 'number') {\n\t\t\t_data.push('code/timeOrigin', timeOrigin);\n\t\t}\n\n\t\tfunction mark(name) {\n\t\t\t_data.push(name, Date.now());\n\t\t}\n\t\tfunction getMarks() {\n\t\t\tconst result = [];\n\t\t\tfor (let i = 0; i < _data.length; i += 2) {\n\t\t\t\tresult.push({\n\t\t\t\t\tname: _data[i],\n\t\t\t\t\tstartTime: _data[i + 1],\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\treturn { mark, getMarks };\n\t}\n\n\t/**\n\t * @returns {{mark(name:string):void, getMarks():{name:string, startTime:number}[]}}\n\t */\n\tfunction _define() {\n\n\t\t// Identify browser environment when following property is not present\n\t\t// https://nodejs.org/dist/latest-v16.x/docs/api/perf_hooks.html#performancenodetiming\n\t\tif (typeof performance === 'object' && typeof performance.mark === 'function' && !performance.nodeTiming) {\n\t\t\t// in a browser context, reuse performance-util\n\n\t\t\tif (typeof performance.timeOrigin !== 'number' && !performance.timing) {\n\t\t\t\t// safari & webworker: because there is no timeOrigin and no workaround\n\t\t\t\t// we use the `Date.now`-based polyfill.\n\t\t\t\treturn _definePolyfillMarks();\n\n\t\t\t} else {\n\t\t\t\t// use \"native\" performance for mark and getMarks\n\t\t\t\treturn {\n\t\t\t\t\tmark(name) {\n\t\t\t\t\t\tperformance.mark(name);\n\t\t\t\t\t},\n\t\t\t\t\tgetMarks() {\n\t\t\t\t\t\tlet timeOrigin = performance.timeOrigin;\n\t\t\t\t\t\tif (typeof timeOrigin !== 'number') {\n\t\t\t\t\t\t\t// safari: there is no timerOrigin but in renderers there is the timing-property\n\t\t\t\t\t\t\t// see https://bugs.webkit.org/show_bug.cgi?id=174862\n\t\t\t\t\t\t\ttimeOrigin = performance.timing.navigationStart || performance.timing.redirectStart || performance.timing.fetchStart;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst result = [{ name: 'code/timeOrigin', startTime: Math.round(timeOrigin) }];\n\t\t\t\t\t\tfor (const entry of performance.getEntriesByType('mark')) {\n\t\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\t\tname: entry.name,\n\t\t\t\t\t\t\t\tstartTime: Math.round(timeOrigin + entry.startTime)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t} else if (typeof process === 'object') {\n\t\t\t// node.js: use the normal polyfill but add the timeOrigin\n\t\t\t// from the node perf_hooks API as very first mark\n\t\t\tconst timeOrigin = performance?.timeOrigin ?? Math.round((require.__$__nodeRequire || require)('perf_hooks').performance.timeOrigin);\n\t\t\treturn _definePolyfillMarks(timeOrigin);\n\n\t\t} else {\n\t\t\t// unknown environment\n\t\t\tconsole.trace('perf-util loaded in UNKNOWN environment');\n\t\t\treturn _definePolyfillMarks();\n\t\t}\n\t}\n\n\tfunction _factory(sharedObj) {\n\t\tif (!sharedObj.MonacoPerformanceMarks) {\n\t\t\tsharedObj.MonacoPerformanceMarks = _define();\n\t\t}\n\t\treturn sharedObj.MonacoPerformanceMarks;\n\t}\n\n\t// This module can be loaded in an amd and commonjs-context.\n\t// Because we want both instances to use the same perf-data\n\t// we store them globally\n\n\t// eslint-disable-next-line no-var\n\tvar sharedObj;\n\tif (typeof global === 'object') {\n\t\t// nodejs\n\t\tsharedObj = global;\n\t} else if (typeof self === 'object') {\n\t\t// browser\n\t\tsharedObj = self;\n\t} else {\n\t\tsharedObj = {};\n\t}\n\n\tif (typeof define === 'function') {\n\t\t// amd\n\t\tdefine([], function () { return _factory(sharedObj); });\n\t} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\t\t// commonjs\n\t\tmodule.exports = _factory(sharedObj);\n\t} else {\n\t\tconsole.trace('perf-util defined in UNKNOWN context (neither requirejs or commonjs)');\n\t\tsharedObj.perf = _factory(sharedObj);\n\t}\n\n})();\n"],"mappings":"cASC,UAAY,CAKZ,SAASA,EAAqBC,EAAY,CAEzC,MAAMC,EAAQ,CAAC,EACX,OAAOD,GAAe,UACzBC,EAAM,KAAK,kBAAmBD,CAAU,EAGzC,SAASE,EAAKC,EAAM,CACnBF,EAAM,KAAKE,EAAM,KAAK,IAAI,CAAC,CAC5B,CACA,SAASC,GAAW,CACnB,MAAMC,EAAS,CAAC,EAChB,QAAS,EAAI,EAAG,EAAIJ,EAAM,OAAQ,GAAK,EACtCI,EAAO,KAAK,CACX,KAAMJ,EAAM,GACZ,UAAWA,EAAM,EAAI,EACtB,CAAC,EAEF,OAAOI,CACR,CACA,MAAO,CAAE,KAAAH,EAAM,SAAAE,CAAS,CACzB,CAKA,SAASE,GAAU,CAIlB,GAAI,OAAO,aAAgB,UAAY,OAAO,YAAY,MAAS,YAAc,CAAC,YAAY,WAG7F,OAAI,OAAO,YAAY,YAAe,UAAY,CAAC,YAAY,OAGvDP,EAAqB,EAIrB,CACN,KAAKI,EAAM,CACV,YAAY,KAAKA,CAAI,CACtB,EACA,UAAW,CACV,IAAIH,EAAa,YAAY,WACzB,OAAOA,GAAe,WAGzBA,EAAa,YAAY,OAAO,iBAAmB,YAAY,OAAO,eAAiB,YAAY,OAAO,YAE3G,MAAMK,EAAS,CAAC,CAAE,KAAM,kBAAmB,UAAW,KAAK,MAAML,CAAU,CAAE,CAAC,EAC9E,UAAWO,KAAS,YAAY,iBAAiB,MAAM,EACtDF,EAAO,KAAK,CACX,KAAME,EAAM,KACZ,UAAW,KAAK,MAAMP,EAAaO,EAAM,SAAS,CACnD,CAAC,EAEF,OAAOF,CACR,CACD,EAGK,GAAI,OAAO,SAAY,SAAU,CAGvC,MAAML,EAAa,aAAa,YAAc,KAAK,OAAO,QAAQ,kBAAoB,SAAS,YAAY,EAAE,YAAY,UAAU,EACnI,OAAOD,EAAqBC,CAAU,CAEvC,KAEC,gBAAQ,MAAM,yCAAyC,EAChDD,EAAqB,CAE9B,CAEA,SAASS,EAASC,EAAW,CAC5B,OAAKA,EAAU,yBACdA,EAAU,uBAAyBH,EAAQ,GAErCG,EAAU,sBAClB,CAOA,IAAIA,EACA,OAAO,QAAW,SAErBA,EAAY,OACF,OAAO,MAAS,SAE1BA,EAAY,KAEZA,EAAY,CAAC,EAGV,OAAO,QAAW,WAErB,OAAO,CAAC,EAAG,UAAY,CAAE,OAAOD,EAASC,CAAS,CAAG,CAAC,EAC5C,OAAO,QAAW,UAAY,OAAO,OAAO,SAAY,SAElE,OAAO,QAAUD,EAASC,CAAS,GAEnC,QAAQ,MAAM,sEAAsE,EACpFA,EAAU,KAAOD,EAASC,CAAS,EAGrC,GAAG","names":["_definePolyfillMarks","timeOrigin","_data","mark","name","getMarks","result","_define","entry","_factory","sharedObj"],"file":"performance.js"}