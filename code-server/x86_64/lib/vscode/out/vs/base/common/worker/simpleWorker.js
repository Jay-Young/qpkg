"use strict";/*!--------------------------------------------------------
 * Copyright (C) Microsoft Corporation. All rights reserved.
 *--------------------------------------------------------*/(function(){var p=["require","exports","vs/base/common/errors","vs/base/common/functional","vs/base/common/lifecycle","vs/base/common/event","vs/base/common/iterator","vs/base/common/lazy","vs/base/common/linkedList","vs/base/common/platform","vs/base/common/stopwatch","vs/base/common/cancellation","vs/base/common/cache","vs/base/common/strings","vs/base/common/types","vs/base/common/objects","vs/base/common/worker/simpleWorker"],e1=function(Q){for(var e=[],b=0,F=Q.length;b<F;b++)e[b]=p[Q[b]];return e};define(p[2],e1([0,1]),function(Q,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.$ab=e.$_=e.$$=e.$0=e.$9=e.$8=e.$7=e.$6=e.$5=e.$4=e.$3=e.$2=e.$1=e.$Z=e.$Y=e.$X=e.$W=e.setUnexpectedErrorHandler=e.$U=e.$T=void 0;class b{constructor(){this.b=[],this.a=function(r){setTimeout(()=>{throw r.stack?l.isErrorNoTelemetry(r)?new l(r.message+`

`+r.stack):new Error(r.message+`

`+r.stack):r},0)}}addListener(r){return this.b.push(r),()=>{this.d(r)}}c(r){this.b.forEach(g=>{g(r)})}d(r){this.b.splice(this.b.indexOf(r),1)}setUnexpectedErrorHandler(r){this.a=r}getUnexpectedErrorHandler(){return this.a}onUnexpectedError(r){this.a(r),this.c(r)}onUnexpectedExternalError(r){this.a(r)}}e.$T=b,e.$U=new b;function F(f){e.$U.setUnexpectedErrorHandler(f)}e.setUnexpectedErrorHandler=F;function S(f){if(!f||typeof f!="object")return!1;const r=f;return r.code==="EPIPE"&&r.syscall?.toUpperCase()==="WRITE"}e.$W=S;function m(f){j(f)||e.$U.onUnexpectedError(f)}e.$X=m;function I(f){j(f)||e.$U.onUnexpectedExternalError(f)}e.$Y=I;function L(f){if(f instanceof Error){const{name:r,message:g}=f,c=f.stacktrace||f.stack;return{$isError:!0,name:r,message:g,stack:c,noTelemetry:l.isErrorNoTelemetry(f)}}return f}e.$Z=L;const M="Canceled";function j(f){return f instanceof H?!0:f instanceof Error&&f.name===M&&f.message===M}e.$1=j;class H extends Error{constructor(){super(M),this.name=this.message}}e.$2=H;function T(){const f=new Error(M);return f.name=f.message,f}e.$3=T;function B(f){return f?new Error(`Illegal argument: ${f}`):new Error("Illegal argument")}e.$4=B;function J(f){return f?new Error(`Illegal state: ${f}`):new Error("Illegal state")}e.$5=J;function K(f){return f?new Error(`readonly property '${f} cannot be changed'`):new Error("readonly property cannot be changed")}e.$6=K;function Y(f){const r=new Error(`${f} has been disposed`);return r.name="DISPOSED",r}e.$7=Y;function z(f){return f?f.message?f.message:f.stack?f.stack.split(`
`)[0]:String(f):"Error"}e.$8=z;class d extends Error{constructor(r){super("NotImplemented"),r&&(this.message=r)}}e.$9=d;class E extends Error{constructor(r){super("NotSupported"),r&&(this.message=r)}}e.$0=E;class w extends Error{constructor(){super(...arguments),this.isExpected=!0}}e.$$=w;class l extends Error{constructor(r){super(r),this.name="CodeExpectedError"}static fromError(r){if(r instanceof l)return r;const g=new l;return g.message=r.message,g.stack=r.stack,g}static isErrorNoTelemetry(r){return r.name==="CodeExpectedError"}}e.$_=l;class C extends Error{constructor(r){super(r||"An unexpected bug occurred."),Object.setPrototypeOf(this,C.prototype)}}e.$ab=C}),define(p[3],e1([0,1]),function(Q,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.$bb=void 0;function b(F){const S=this;let m=!1,I;return function(){return m||(m=!0,I=F.apply(S,arguments)),I}}e.$bb=b}),define(p[6],e1([0,1]),function(Q,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Iterable=void 0;var b;(function(F){function S(l){return l&&typeof l=="object"&&typeof l[Symbol.iterator]=="function"}F.is=S;const m=Object.freeze([]);function I(){return m}F.empty=I;function*L(l){yield l}F.single=L;function M(l){return S(l)?l:L(l)}F.wrap=M;function j(l){return l||m}F.from=j;function H(l){return!l||l[Symbol.iterator]().next().done===!0}F.isEmpty=H;function T(l){return l[Symbol.iterator]().next().value}F.first=T;function B(l,C){for(const f of l)if(C(f))return!0;return!1}F.some=B;function J(l,C){for(const f of l)if(C(f))return f}F.find=J;function*K(l,C){for(const f of l)C(f)&&(yield f)}F.filter=K;function*Y(l,C){let f=0;for(const r of l)yield C(r,f++)}F.map=Y;function*z(...l){for(const C of l)for(const f of C)yield f}F.concat=z;function d(l,C,f){let r=f;for(const g of l)r=C(r,g);return r}F.reduce=d;function*E(l,C,f=l.length){for(C<0&&(C+=l.length),f<0?f+=l.length:f>l.length&&(f=l.length);C<f;C++)yield l[C]}F.slice=E;function w(l,C=Number.POSITIVE_INFINITY){const f=[];if(C===0)return[f,l];const r=l[Symbol.iterator]();for(let g=0;g<C;g++){const c=r.next();if(c.done)return[f,F.empty()];f.push(c.value)}return[f,{[Symbol.iterator](){return r}}]}F.consume=w})(b||(e.Iterable=b={}))}),define(p[7],e1([0,1]),function(Q,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.$S=void 0;class b{constructor(S){this.d=S,this.a=!1}get hasValue(){return this.a}get value(){if(!this.a)try{this.b=this.d()}catch(S){this.c=S}finally{this.a=!0}if(this.c)throw this.c;return this.b}get rawValue(){return this.b}}e.$S=b}),define(p[4],e1([0,1,3,6]),function(Q,e,b,F){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.$sb=e.$rb=e.$qb=e.$pb=e.$ob=e.$nb=e.$mb=e.$lb=e.$kb=e.$jb=e.$ib=e.$hb=e.$gb=e.$fb=e.$eb=e.$db=e.$cb=void 0;const S=!1;let m=null;function I(o){m=o}if(e.$cb=I,S){const o="__is_disposable_tracked__";I(new class{trackDisposable(i){const a=new Error("Potentially leaked disposable").stack;setTimeout(()=>{i[o]||console.log(a)},3e3)}setParent(i,a){if(i&&i!==E.None)try{i[o]=!0}catch{}}markAsDisposed(i){if(i&&i!==E.None)try{i[o]=!0}catch{}}markAsSingleton(i){}})}function L(o){return m?.trackDisposable(o),o}function M(o){m?.markAsDisposed(o)}function j(o,i){m?.setParent(o,i)}function H(o,i){if(m)for(const a of o)m.setParent(a,i)}function T(o){return m?.markAsSingleton(o),o}e.$db=T;function B(o){return typeof o.dispose=="function"&&o.dispose.length===0}e.$eb=B;function J(o){if(F.Iterable.is(o)){const i=[];for(const a of o)if(a)try{a.dispose()}catch(s){i.push(s)}if(i.length===1)throw i[0];if(i.length>1)throw new AggregateError(i,"Encountered errors while disposing of store");return Array.isArray(o)?[]:o}else if(o)return o.dispose(),o}e.$fb=J;function K(o){for(const i of o)B(i)&&i.dispose();return[]}e.$gb=K;function Y(...o){const i=z(()=>J(o));return H(o,i),i}e.$hb=Y;function z(o){const i=L({dispose:(0,b.$bb)(()=>{M(i),o()})});return i}e.$ib=z;class d{constructor(){this.f=new Set,this.g=!1,L(this)}dispose(){this.g||(M(this),this.g=!0,this.clear())}get isDisposed(){return this.g}clear(){if(this.f.size!==0)try{J(this.f)}finally{this.f.clear()}}add(i){if(!i)return i;if(i===this)throw new Error("Cannot register a disposable on itself!");return j(i,this),this.g?d.DISABLE_DISPOSED_WARNING||console.warn(new Error("Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!").stack):this.f.add(i),i}}e.$jb=d,d.DISABLE_DISPOSED_WARNING=!1;class E{constructor(){this.q=new d,L(this),j(this.q,this)}dispose(){M(this),this.q.dispose()}B(i){if(i===this)throw new Error("Cannot register a disposable on itself!");return this.q.add(i)}}e.$kb=E,E.None=Object.freeze({dispose(){}});class w{constructor(){this.b=!1,L(this)}get value(){return this.b?void 0:this.a}set value(i){this.b||i===this.a||(this.a?.dispose(),i&&j(i,this),this.a=i)}clear(){this.value=void 0}dispose(){this.b=!0,M(this),this.a?.dispose(),this.a=void 0}clearAndLeak(){const i=this.a;return this.a=void 0,i&&j(i,null),i}}e.$lb=w;class l{constructor(i){this.b=i,this.a=1}acquire(){return this.a++,this}release(){return--this.a===0&&this.b.dispose(),this}}e.$mb=l;class C{constructor(){this.dispose=()=>{},this.unset=()=>{},this.isset=()=>!1,L(this)}set(i){let a=i;return this.unset=()=>a=void 0,this.isset=()=>a!==void 0,this.dispose=()=>{a&&(a(),a=void 0,M(this))},this}}e.$nb=C;class f{constructor(){this.a=new Map}acquire(i,...a){let s=this.a.get(i);s||(s={counter:0,object:this.b(i,...a)},this.a.set(i,s));const{object:$}=s,W=(0,b.$bb)(()=>{--s.counter===0&&(this.c(i,s.object),this.a.delete(i))});return s.counter++,{object:$,dispose:W}}}e.$ob=f;class r{constructor(i){this.a=i}async acquire(i,...a){const s=this.a.acquire(i,...a);try{return{object:await s.object,dispose:()=>s.dispose()}}catch($){throw s.dispose(),$}}}e.$pb=r;class g{constructor(i){this.object=i}dispose(){}}e.$qb=g;function c(o){const i=new d;try{o(i)}finally{i.dispose()}}e.$rb=c;class v{constructor(){this.a=new Map,this.b=!1,L(this)}dispose(){M(this),this.b=!0,this.clearAndDisposeAll()}clearAndDisposeAll(){if(this.a.size)try{J(this.a.values())}finally{this.a.clear()}}has(i){return this.a.has(i)}get(i){return this.a.get(i)}set(i,a,s=!1){this.b&&console.warn(new Error("Trying to add a disposable to a DisposableMap that has already been disposed of. The added object will be leaked!").stack),s||this.a.get(i)?.dispose(),this.a.set(i,a)}deleteAndDispose(i){this.a.get(i)?.dispose(),this.a.delete(i)}[Symbol.iterator](){return this.a[Symbol.iterator]()}}e.$sb=v}),define(p[8],e1([0,1]),function(Q,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.$jc=void 0;class b{constructor(m){this.element=m,this.next=b.Undefined,this.prev=b.Undefined}}b.Undefined=new b(void 0);class F{constructor(){this.a=b.Undefined,this.b=b.Undefined,this.c=0}get size(){return this.c}isEmpty(){return this.a===b.Undefined}clear(){let m=this.a;for(;m!==b.Undefined;){const I=m.next;m.prev=b.Undefined,m.next=b.Undefined,m=I}this.a=b.Undefined,this.b=b.Undefined,this.c=0}unshift(m){return this.d(m,!1)}push(m){return this.d(m,!0)}d(m,I){const L=new b(m);if(this.a===b.Undefined)this.a=L,this.b=L;else if(I){const j=this.b;this.b=L,L.prev=j,j.next=L}else{const j=this.a;this.a=L,L.next=j,j.prev=L}this.c+=1;let M=!1;return()=>{M||(M=!0,this.e(L))}}shift(){if(this.a!==b.Undefined){const m=this.a.element;return this.e(this.a),m}}pop(){if(this.b!==b.Undefined){const m=this.b.element;return this.e(this.b),m}}e(m){if(m.prev!==b.Undefined&&m.next!==b.Undefined){const I=m.prev;I.next=m.next,m.next.prev=I}else m.prev===b.Undefined&&m.next===b.Undefined?(this.a=b.Undefined,this.b=b.Undefined):m.next===b.Undefined?(this.b=this.b.prev,this.b.next=b.Undefined):m.prev===b.Undefined&&(this.a=this.a.next,this.a.prev=b.Undefined);this.c-=1}*[Symbol.iterator](){let m=this.a;for(;m!==b.Undefined;)yield m.element,m=m.next}}e.$jc=F}),define(p[9],e1([0,1]),function(Q,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.$C=e.$B=e.$A=e.$z=e.$y=e.$x=e.OS=e.OperatingSystem=e.$v=e.$u=e.$t=e.$s=e.$r=e.Language=e.$q=e.$p=e.$o=e.$n=e.$m=e.$l=e.$k=e.$j=e.$i=e.$h=e.$g=e.$f=e.$e=e.$d=e.$c=e.Platform=e.$b=e.$a=void 0,e.$a="en";let b=!1,F=!1,S=!1,m=!1,I=!1,L=!1,M=!1,j=!1,H=!1,T=!1,B,J=e.$a,K=e.$a,Y,z;e.$b=typeof self=="object"?self:typeof global=="object"?global:{};let d;typeof e.$b.vscode<"u"&&typeof e.$b.vscode.process<"u"?d=e.$b.vscode.process:typeof process<"u"&&(d=process);const E=typeof d?.versions?.electron=="string",w=E&&d?.type==="renderer";if(typeof navigator=="object"&&!w){z=navigator.userAgent,b=z.indexOf("Windows")>=0,F=z.indexOf("Macintosh")>=0,j=(z.indexOf("Macintosh")>=0||z.indexOf("iPad")>=0||z.indexOf("iPhone")>=0)&&!!navigator.maxTouchPoints&&navigator.maxTouchPoints>0,S=z.indexOf("Linux")>=0,T=z?.indexOf("Mobi")>=0,L=!0,B=e.$a,J=B,K=navigator.language;const i=typeof document<"u"&&document.getElementById("vscode-remote-nls-configuration"),a=i&&i.getAttribute("data-settings");if(a)try{const s=JSON.parse(a),$=s.availableLanguages["*"];B=s.locale,K=s.osLocale,J=$||e.$a,Y=s._translationsConfigFile}catch{}}else if(typeof d=="object"){b=d.platform==="win32",F=d.platform==="darwin",S=d.platform==="linux",m=S&&!!d.env.SNAP&&!!d.env.SNAP_REVISION,M=E,H=!!d.env.CI||!!d.env.BUILD_ARTIFACTSTAGINGDIRECTORY,B=e.$a,J=e.$a;const i=d.env.VSCODE_NLS_CONFIG;if(i)try{const a=JSON.parse(i),s=a.availableLanguages["*"];B=a.locale,K=a.osLocale,J=s||e.$a,Y=a._translationsConfigFile}catch{}I=!0}else console.error("Unable to resolve platform.");var l;(function(i){i[i.Web=0]="Web",i[i.Mac=1]="Mac",i[i.Linux=2]="Linux",i[i.Windows=3]="Windows"})(l||(e.Platform=l={}));function C(i){switch(i){case 0:return"Web";case 1:return"Mac";case 2:return"Linux";case 3:return"Windows"}}e.$c=C;let f=0;F?f=1:b?f=3:S&&(f=2),e.$d=b,e.$e=F,e.$f=S,e.$g=m,e.$h=I,e.$i=M,e.$j=L,e.$k=L&&typeof e.$b.importScripts=="function",e.$l=j,e.$m=T,e.$n=H,e.$o=f,e.$p=z,e.$q=J;var r;(function(i){function a(){return e.$q}i.value=a;function s(){return e.$q.length===2?e.$q==="en":e.$q.length>=3?e.$q[0]==="e"&&e.$q[1]==="n"&&e.$q[2]==="-":!1}i.isDefaultVariant=s;function $(){return e.$q==="en"}i.isDefault=$})(r||(e.Language=r={})),e.$r=B,e.$s=K,e.$t=Y,e.$u=typeof e.$b.postMessage=="function"&&!e.$b.importScripts,e.$v=(()=>{if(e.$u){const i=[];e.$b.addEventListener("message",s=>{if(s.data&&s.data.vscodeScheduleAsyncWork)for(let $=0,W=i.length;$<W;$++){const U=i[$];if(U.id===s.data.vscodeScheduleAsyncWork){i.splice($,1),U.callback();return}}});let a=0;return s=>{const $=++a;i.push({id:$,callback:s}),e.$b.postMessage({vscodeScheduleAsyncWork:$},"*")}}return i=>setTimeout(i)})();var g;(function(i){i[i.Windows=1]="Windows",i[i.Macintosh=2]="Macintosh",i[i.Linux=3]="Linux"})(g||(e.OperatingSystem=g={})),e.OS=F||j?2:b?1:3;let c=!0,v=!1;function o(){if(!v){v=!0;const i=new Uint8Array(2);i[0]=1,i[1]=2,c=new Uint16Array(i.buffer)[0]===(2<<8)+1}return c}e.$x=o,e.$y=!!(e.$p&&e.$p.indexOf("Chrome")>=0),e.$z=!!(e.$p&&e.$p.indexOf("Firefox")>=0),e.$A=!!(!e.$y&&e.$p&&e.$p.indexOf("Safari")>=0),e.$B=!!(e.$p&&e.$p.indexOf("Edg/")>=0),e.$C=!!(e.$p&&e.$p.indexOf("Android")>=0)}),define(p[10],e1([0,1]),function(Q,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.$1c=void 0;const b=globalThis.performance&&typeof globalThis.performance.now=="function";class F{static create(m){return new F(m)}constructor(m){this.c=b&&m===!1?Date.now:globalThis.performance.now.bind(globalThis.performance),this.a=this.c(),this.b=-1}stop(){this.b=this.c()}reset(){this.a=this.c(),this.b=-1}elapsed(){return this.b!==-1?this.b-this.a:this.c()-this.a}}e.$1c=F}),define(p[5],e1([0,1,2,3,4,8,10]),function(Q,e,b,F,S,m,I){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.$ad=e.$_c=e.$$c=e.$0c=e.$9c=e.$8c=e.$7c=e.$6c=e.$5c=e.$4c=e.$3c=e.Event=void 0;const L=!1,M=!1;var j;(function(a){a.None=()=>S.$kb.None;function s(q){if(M){const{onDidAddListener:y}=q,D=K.create();let O=0;q.onDidAddListener=()=>{++O===2&&(console.warn("snapshotted emitter LIKELY used public and SHOULD HAVE BEEN created with DisposableStore. snapshotted here"),D.print()),y?.()}}}function $(q,y){return o1(q,()=>{},0,void 0,!0,void 0,y)}a.defer=$;function W(q){return(y,D=null,O)=>{let P=!1,N;return N=q(V=>{if(!P)return N?N.dispose():P=!0,y.call(D,V)},null,O),P&&N.dispose(),N}}a.once=W;function U(q,y,D){return a1((O,P=null,N)=>q(V=>O.call(P,y(V)),null,N),D)}a.map=U;function _(q,y,D){return a1((O,P=null,N)=>q(V=>{y(V),O.call(P,V)},null,N),D)}a.forEach=_;function k(q,y,D){return a1((O,P=null,N)=>q(V=>y(V)&&O.call(P,V),null,N),D)}a.filter=k;function Z(q){return q}a.signal=Z;function t1(...q){return(y,D=null,O)=>(0,S.$hb)(...q.map(P=>P(N=>y.call(D,N),null,O)))}a.any=t1;function l1(q,y,D,O){let P=D;return U(q,N=>(P=y(P,N),P),O)}a.reduce=l1;function a1(q,y){let D;const O={onWillAddFirstListener(){D=q(P.fire,P)},onDidRemoveLastListener(){D?.dispose()}};y||s(O);const P=new w(O);return y?.add(P),P.event}function o1(q,y,D=100,O=!1,P=!1,N,V){let x,f1,d1,g1=0,h1;const O1={leakWarningThreshold:N,onWillAddFirstListener(){x=q(_1=>{g1++,f1=y(f1,_1),O&&!d1&&(m1.fire(f1),f1=void 0),h1=()=>{const A1=f1;f1=void 0,d1=void 0,(!O||g1>1)&&m1.fire(A1),g1=0},typeof D=="number"?(clearTimeout(d1),d1=setTimeout(h1,D)):d1===void 0&&(d1=0,queueMicrotask(h1))})},onWillRemoveListener(){P&&g1>0&&h1?.()},onDidRemoveLastListener(){h1=void 0,x.dispose()}};V||s(O1);const m1=new w(O1);return V?.add(m1),m1.event}a.debounce=o1;function v1(q,y=0,D){return a.debounce(q,(O,P)=>O?(O.push(P),O):[P],y,void 0,!0,void 0,D)}a.accumulate=v1;function E1(q,y=(O,P)=>O===P,D){let O=!0,P;return k(q,N=>{const V=O||!y(N,P);return O=!1,P=N,V},D)}a.latch=E1;function q1(q,y,D){return[a.filter(q,y,D),a.filter(q,O=>!y(O),D)]}a.split=q1;function b1(q,y=!1,D=[]){let O=D.slice(),P=q(x=>{O?O.push(x):V.fire(x)});const N=()=>{O?.forEach(x=>V.fire(x)),O=null},V=new w({onWillAddFirstListener(){P||(P=q(x=>V.fire(x)))},onDidAddFirstListener(){O&&(y?setTimeout(N):N())},onDidRemoveLastListener(){P&&P.dispose(),P=null}});return V.event}a.buffer=b1;class n1{constructor(y){this.event=y,this.d=new S.$jb}map(y){return new n1(U(this.event,y,this.d))}forEach(y){return new n1(_(this.event,y,this.d))}filter(y){return new n1(k(this.event,y,this.d))}reduce(y,D){return new n1(l1(this.event,y,D,this.d))}latch(){return new n1(E1(this.event,void 0,this.d))}debounce(y,D=100,O=!1,P=!1,N){return new n1(o1(this.event,y,D,O,P,N,this.d))}on(y,D,O){return this.event(y,D,O)}once(y,D,O){return W(this.event)(y,D,O)}dispose(){this.d.dispose()}}function C1(q){return new n1(q)}a.chain=C1;function L1(q,y,D=O=>O){const O=(...x)=>V.fire(D(...x)),P=()=>q.on(y,O),N=()=>q.removeListener(y,O),V=new w({onWillAddFirstListener:P,onDidRemoveLastListener:N});return V.event}a.fromNodeEventEmitter=L1;function F1(q,y,D=O=>O){const O=(...x)=>V.fire(D(...x)),P=()=>q.addEventListener(y,O),N=()=>q.removeEventListener(y,O),V=new w({onWillAddFirstListener:P,onDidRemoveLastListener:N});return V.event}a.fromDOMEventEmitter=F1;function P1(q){return new Promise(y=>W(q)(y))}a.toPromise=P1;function y1(q,y){return y(void 0),q(D=>y(D))}a.runAndSubscribe=y1;function S1(q,y){let D=null;function O(N){D?.dispose(),D=new S.$jb,y(N,D)}O(void 0);const P=q(N=>O(N));return(0,S.$ib)(()=>{P.dispose(),D?.dispose()})}a.runAndSubscribeWithStore=S1;class M1{constructor(y,D){this._observable=y,this.d=0,this.f=!1;const O={onWillAddFirstListener:()=>{y.addObserver(this)},onDidRemoveLastListener:()=>{y.removeObserver(this)}};D||s(O),this.emitter=new w(O),D&&D.add(this.emitter)}beginUpdate(y){this.d++}handlePossibleChange(y){}handleChange(y,D){this.f=!0}endUpdate(y){this.d--,this.d===0&&(this._observable.reportChanges(),this.f&&(this.f=!1,this.emitter.fire(this._observable.get())))}}function j1(q,y){return new M1(q,y).emitter.event}a.fromObservable=j1;function W1(q){return y=>{let D=0,O=!1;const P={beginUpdate(){D++},endUpdate(){D--,D===0&&(q.reportChanges(),O&&(O=!1,y()))},handlePossibleChange(){},handleChange(){O=!0}};return q.addObserver(P),{dispose(){q.removeObserver(P)}}}}a.fromObservableLight=W1})(j||(e.Event=j={}));class H{constructor(s){this.listenerCount=0,this.invocationCount=0,this.elapsedOverall=0,this.durations=[],this.name=`${s}_${H.d++}`,H.all.add(this)}start(s){this.f=new I.$1c,this.listenerCount=s}stop(){if(this.f){const s=this.f.elapsed();this.durations.push(s),this.elapsedOverall+=s,this.invocationCount+=1,this.f=void 0}}}e.$3c=H,H.all=new Set,H.d=0;let T=-1;function B(a){const s=T;return T=a,{dispose(){T=s}}}e.$4c=B;class J{constructor(s,$=Math.random().toString(18).slice(2,5)){this.threshold=s,this.name=$,this.f=0}dispose(){this.d?.clear()}check(s,$){const W=this.threshold;if(W<=0||$<W)return;this.d||(this.d=new Map);const U=this.d.get(s.value)||0;if(this.d.set(s.value,U+1),this.f-=1,this.f<=0){this.f=W*.5;let _,k=0;for(const[Z,t1]of this.d)(!_||k<t1)&&(_=Z,k=t1);console.warn(`[${this.name}] potential listener LEAK detected, having ${$} listeners already. MOST frequent listener (${k}):`),console.warn(_)}return()=>{const _=this.d.get(s.value)||0;this.d.set(s.value,_-1)}}}class K{static create(){return new K(new Error().stack??"")}constructor(s){this.value=s}print(){console.warn(this.value.split(`
`).slice(2).join(`
`))}}let Y=0;class z{constructor(s){this.value=s,this.id=Y++}}const d=2,E=(a,s)=>{if(a instanceof z)s(a);else for(let $=0;$<a.length;$++){const W=a[$];W&&s(W)}};class w{constructor(s){this.u=0,this.d=s,this.f=T>0||this.d?.leakWarningThreshold?new J(this.d?.leakWarningThreshold??T):void 0,this.g=this.d?._profName?new H(this.d._profName):void 0,this.t=this.d?.deliveryQueue}dispose(){if(!this.j){if(this.j=!0,this.t?.current===this&&this.t.reset(),this.q){if(L){const s=this.q;queueMicrotask(()=>{E(s,$=>$.stack?.print())})}this.q=void 0,this.u=0}this.d?.onDidRemoveLastListener?.(),this.f?.dispose()}}get event(){return this.m??=(s,$,W)=>{if(this.f&&this.u>this.f.threshold*3)return console.warn(`[${this.f.name}] REFUSES to accept new listeners because it exceeded its threshold by far`),S.$kb.None;if(this.j)return S.$kb.None;$&&(s=s.bind($));const U=new z(s);let _,k;this.f&&this.u>=Math.ceil(this.f.threshold*.2)&&(U.stack=K.create(),_=this.f.check(U.stack,this.u+1)),L&&(U.stack=k??K.create()),this.q?this.q instanceof z?(this.t??=new C,this.q=[this.q,U]):this.q.push(U):(this.d?.onWillAddFirstListener?.(this),this.q=U,this.d?.onDidAddFirstListener?.(this)),this.u++;const Z=(0,S.$ib)(()=>{_?.(),this.v(U)});return W instanceof S.$jb?W.add(Z):Array.isArray(W)&&W.push(Z),Z},this.m}v(s){if(this.d?.onWillRemoveListener?.(this),!this.q)return;if(this.u===1){this.q=void 0,this.d?.onDidRemoveLastListener?.(this),this.u=0;return}const $=this.q,W=$.indexOf(s);if(W===-1)throw console.log("disposed?",this.j),console.log("size?",this.u),console.log("arr?",JSON.stringify(this.q)),new Error("Attempted to dispose unknown listener");this.u--,$[W]=void 0;const U=this.t.current===this;if(this.u*d<=$.length){let _=0;for(let k=0;k<$.length;k++)$[k]?$[_++]=$[k]:U&&(this.t.end--,_<this.t.i&&this.t.i--);$.length=_}}w(s,$){if(!s)return;const W=this.d?.onListenerError||b.$X;if(!W){s.value($);return}try{s.value($)}catch(U){W(U)}}x(s){const $=s.current.q;for(;s.i<s.end;)this.w($[s.i++],s.value);s.reset()}fire(s){if(this.t?.current&&(this.x(this.t),this.g?.stop()),this.g?.start(this.u),this.q)if(this.q instanceof z)this.w(this.q,s);else{const $=this.t;$.enqueue(this,s,this.q.length),this.x($)}this.g?.stop()}hasListeners(){return this.u>0}}e.$5c=w;const l=()=>new C;e.$6c=l;class C{constructor(){this.i=-1,this.end=0}enqueue(s,$,W){this.i=0,this.end=W,this.current=s,this.value=$}reset(){this.i=this.end,this.current=void 0,this.value=void 0}}class f extends w{async fireAsync(s,$,W){if(this.q)for(this.h||(this.h=new m.$jc),E(this.q,U=>this.h.push([U.value,s]));this.h.size>0&&!$.isCancellationRequested;){const[U,_]=this.h.shift(),k=[],Z={..._,token:$,waitUntil:t1=>{if(Object.isFrozen(k))throw new Error("waitUntil can NOT be called asynchronous");W&&(t1=W(t1,U)),k.push(t1)}};try{U(Z)}catch(t1){(0,b.$X)(t1);continue}Object.freeze(k),await Promise.allSettled(k).then(t1=>{for(const l1 of t1)l1.status==="rejected"&&(0,b.$X)(l1.reason)})}}}e.$7c=f;class r extends w{get isPaused(){return this.h!==0}constructor(s){super(s),this.h=0,this.s=new m.$jc,this.y=s?.merge}pause(){this.h++}resume(){if(this.h!==0&&--this.h===0)if(this.y){if(this.s.size>0){const s=Array.from(this.s);this.s.clear(),super.fire(this.y(s))}}else for(;!this.h&&this.s.size!==0;)super.fire(this.s.shift())}fire(s){this.u&&(this.h!==0?this.s.push(s):super.fire(s))}}e.$8c=r;class g extends r{constructor(s){super(s),this.k=s.delay??100}fire(s){this.o||(this.pause(),this.o=setTimeout(()=>{this.o=void 0,this.resume()},this.k)),super.fire(s)}}e.$9c=g;class c extends w{constructor(s){super(s),this.h=[],this.k=s?.merge}fire(s){this.hasListeners()&&(this.h.push(s),this.h.length===1&&queueMicrotask(()=>{this.k?super.fire(this.k(this.h)):this.h.forEach($=>super.fire($)),this.h=[]}))}}e.$0c=c;class v{constructor(){this.f=!1,this.g=[],this.d=new w({onWillAddFirstListener:()=>this.h(),onDidRemoveLastListener:()=>this.j()})}get event(){return this.d.event}add(s){const $={event:s,listener:null};this.g.push($),this.f&&this.k($);const W=()=>{this.f&&this.m($);const U=this.g.indexOf($);this.g.splice(U,1)};return(0,S.$ib)((0,F.$bb)(W))}h(){this.f=!0,this.g.forEach(s=>this.k(s))}j(){this.f=!1,this.g.forEach(s=>this.m(s))}k(s){s.listener=s.event($=>this.d.fire($))}m(s){s.listener&&s.listener.dispose(),s.listener=null}dispose(){this.d.dispose()}}e.$$c=v;class o{constructor(){this.d=[]}wrapEvent(s){return($,W,U)=>s(_=>{const k=this.d[this.d.length-1];k?k.push(()=>$.call(W,_)):$.call(W,_)},void 0,U)}bufferEvents(s){const $=[];this.d.push($);const W=s();return this.d.pop(),$.forEach(U=>U()),W}}e.$_c=o;class i{constructor(){this.d=!1,this.f=j.None,this.g=S.$kb.None,this.h=new w({onDidAddFirstListener:()=>{this.d=!0,this.g=this.f(this.h.fire,this.h)},onDidRemoveLastListener:()=>{this.d=!1,this.g.dispose()}}),this.event=this.h.event}set input(s){this.f=s,this.d&&(this.g.dispose(),this.g=s(this.h.fire,this.h))}dispose(){this.g.dispose(),this.h.dispose()}}e.$ad=i}),define(p[11],e1([0,1,5]),function(Q,e,b){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.$bd=e.CancellationToken=void 0;const F=Object.freeze(function(L,M){const j=setTimeout(L.bind(M),0);return{dispose(){clearTimeout(j)}}});var S;(function(L){function M(j){return j===L.None||j===L.Cancelled||j instanceof m?!0:!j||typeof j!="object"?!1:typeof j.isCancellationRequested=="boolean"&&typeof j.onCancellationRequested=="function"}L.isCancellationToken=M,L.None=Object.freeze({isCancellationRequested:!1,onCancellationRequested:b.Event.None}),L.Cancelled=Object.freeze({isCancellationRequested:!0,onCancellationRequested:F})})(S||(e.CancellationToken=S={}));class m{constructor(){this.a=!1,this.b=null}cancel(){this.a||(this.a=!0,this.b&&(this.b.fire(void 0),this.dispose()))}get isCancellationRequested(){return this.a}get onCancellationRequested(){return this.a?F:(this.b||(this.b=new b.$5c),this.b.event)}dispose(){this.b&&(this.b.dispose(),this.b=null)}}class I{constructor(M){this.a=void 0,this.b=void 0,this.b=M&&M.onCancellationRequested(this.cancel,this)}get token(){return this.a||(this.a=new m),this.a}cancel(){this.a?this.a instanceof m&&this.a.cancel():this.a=S.Cancelled}dispose(M=!1){M&&this.cancel(),this.b?.dispose(),this.a?this.a instanceof m&&this.a.dispose():this.a=S.None}}e.$bd=I}),define(p[12],e1([0,1,11]),function(Q,e,b){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.$ed=e.$dd=e.$cd=void 0;class F{constructor(L){this.b=L,this.a=null}get(){if(this.a)return this.a;const L=new b.$bd,M=this.b(L.token);return this.a={promise:M,dispose:()=>{this.a=null,L.cancel(),L.dispose()}},this.a}}e.$cd=F;class S{constructor(L){this.c=L,this.a=void 0,this.b=void 0}get(L){const M=JSON.stringify(L);return this.b!==M&&(this.b=M,this.a=this.c(L)),this.a}}e.$dd=S;class m{get cachedValues(){return this.a}constructor(L){this.b=L,this.a=new Map}get(L){if(this.a.has(L))return this.a.get(L);const M=this.b(L);return this.a.set(L,M),M}}e.$ed=m}),define(p[13],e1([0,1,12,7]),function(Q,e,b,F){"use strict";var S;Object.defineProperty(e,"__esModule",{value:!0}),e.$fe=e.$ee=e.$de=e.$ce=e.GraphemeBreakType=e.$be=e.$ae=e.$_d=e.$$d=e.$0d=e.$9d=e.$8d=e.$7d=e.$6d=e.$5d=e.$4d=e.$3d=e.$2d=e.$1d=e.$Zd=e.$Yd=e.$Xd=e.$Wd=e.$Vd=e.$Ud=e.$Td=e.$Sd=e.$Rd=e.$Qd=e.$Pd=e.$Od=e.$Nd=e.$Md=e.$Ld=e.$Kd=e.$Jd=e.$Id=e.$Hd=e.$Gd=e.$Fd=e.$Ed=e.$Dd=e.$Cd=e.$Bd=e.$Ad=e.$zd=e.$yd=e.$xd=e.$wd=e.$vd=e.$ud=e.$td=e.$sd=e.$rd=e.$qd=e.$pd=e.$od=e.$nd=e.$md=e.$ld=e.$kd=e.$jd=e.$id=e.$hd=void 0;function m(t){return!t||typeof t!="string"?!0:t.trim().length===0}e.$hd=m;const I=/{(\d+)}/g;function L(t,...n){return n.length===0?t:t.replace(I,function(u,h){const A=parseInt(h,10);return isNaN(A)||A<0||A>=n.length?u:n[A]})}e.$id=L;const M=/{([^}]+)}/g;function j(t,n){return t.replace(M,(u,h)=>n[h]??u)}e.$jd=j;function H(t){return t.replace(/[<>&]/g,function(n){switch(n){case"<":return"&lt;";case">":return"&gt;";case"&":return"&amp;";default:return n}})}e.$kd=H;function T(t){return t.replace(/[\\\{\}\*\+\?\|\^\$\.\[\]\(\)]/g,"\\$&")}e.$ld=T;function B(t,n){let u=0;const h=n.charCodeAt(0);for(let A=t.length-1;A>=0;A--)t.charCodeAt(A)===h&&u++;return u}e.$md=B;function J(t,n,u="\u2026"){return t.length<=n?t:`${t.substr(0,n)}${u}`}e.$nd=J;function K(t,n=" "){const u=Y(t,n);return z(u,n)}e.$od=K;function Y(t,n){if(!t||!n)return t;const u=n.length;if(u===0||t.length===0)return t;let h=0;for(;t.indexOf(n,h)===h;)h=h+u;return t.substring(h)}e.$pd=Y;function z(t,n){if(!t||!n)return t;const u=n.length,h=t.length;if(u===0||h===0)return t;let A=h,R=-1;for(;R=t.lastIndexOf(n,A-1),!(R===-1||R+u!==A);){if(R===0)return"";A=R}return t.substring(0,A)}e.$qd=z;function d(t){return t.replace(/[\-\\\{\}\+\?\|\^\$\.\,\[\]\(\)\#\s]/g,"\\$&").replace(/[\*]/g,".*")}e.$rd=d;function E(t){return t.replace(/\*/g,"")}e.$sd=E;function w(t,n,u={}){if(!t)throw new Error("Cannot create regex from empty string");n||(t=T(t)),u.wholeWord&&(/\B/.test(t.charAt(0))||(t="\\b"+t),/\B/.test(t.charAt(t.length-1))||(t=t+"\\b"));let h="";return u.global&&(h+="g"),u.matchCase||(h+="i"),u.multiline&&(h+="m"),u.unicode&&(h+="u"),new RegExp(t,h)}e.$td=w;function l(t){return t.source==="^"||t.source==="^$"||t.source==="$"||t.source==="^\\s*$"?!1:!!(t.exec("")&&t.lastIndex===0)}e.$ud=l;function C(t){return!!t.match(/([^\\]|^)(\\\\)*\\\d+/)}e.$vd=C;function f(t){return(t.global?"g":"")+(t.ignoreCase?"i":"")+(t.multiline?"m":"")+(t.unicode?"u":"")}e.$wd=f;function r(t){return t.split(/\r\n|\r|\n/)}e.$xd=r;function g(t){for(let n=0,u=t.length;n<u;n++){const h=t.charCodeAt(n);if(h!==32&&h!==9)return n}return-1}e.$yd=g;function c(t,n=0,u=t.length){for(let h=n;h<u;h++){const A=t.charCodeAt(h);if(A!==32&&A!==9)return t.substring(n,h)}return t.substring(n,u)}e.$zd=c;function v(t,n=t.length-1){for(let u=n;u>=0;u--){const h=t.charCodeAt(u);if(h!==32&&h!==9)return u}return-1}e.$Ad=v;function o(t,n,u){const h=[];let A=0;for(const R of t.matchAll(n)){if(h.push(t.slice(A,R.index)),R.index===void 0)throw new Error("match.index should be defined");A=R.index+R[0].length,h.push(u(R[0],...R.slice(1),R.index,t,R.groups))}return h.push(t.slice(A)),Promise.all(h).then(R=>R.join(""))}e.$Bd=o;function i(t,n){return t<n?-1:t>n?1:0}e.$Cd=i;function a(t,n,u=0,h=t.length,A=0,R=n.length){for(;u<h&&A<R;u++,A++){const r1=t.charCodeAt(u),X=n.charCodeAt(A);if(r1<X)return-1;if(r1>X)return 1}const G=h-u,$1=R-A;return G<$1?-1:G>$1?1:0}e.$Dd=a;function s(t,n){return $(t,n,0,t.length,0,n.length)}e.$Ed=s;function $(t,n,u=0,h=t.length,A=0,R=n.length){for(;u<h&&A<R;u++,A++){let r1=t.charCodeAt(u),X=n.charCodeAt(A);if(r1===X)continue;if(r1>=128||X>=128)return a(t.toLowerCase(),n.toLowerCase(),u,h,A,R);U(r1)&&(r1-=32),U(X)&&(X-=32);const i1=r1-X;if(i1!==0)return i1}const G=h-u,$1=R-A;return G<$1?-1:G>$1?1:0}e.$Fd=$;function W(t){return t>=48&&t<=57}e.$Gd=W;function U(t){return t>=97&&t<=122}e.$Hd=U;function _(t){return t>=65&&t<=90}e.$Id=_;function k(t,n){return t.length===n.length&&$(t,n)===0}e.$Jd=k;function Z(t,n){const u=n.length;return n.length>t.length?!1:$(t,n,0,u)===0}e.$Kd=Z;function t1(t,n){const u=Math.min(t.length,n.length);let h;for(h=0;h<u;h++)if(t.charCodeAt(h)!==n.charCodeAt(h))return h;return u}e.$Ld=t1;function l1(t,n){const u=Math.min(t.length,n.length);let h;const A=t.length-1,R=n.length-1;for(h=0;h<u;h++)if(t.charCodeAt(A-h)!==n.charCodeAt(R-h))return h;return u}e.$Md=l1;function a1(t){return 55296<=t&&t<=56319}e.$Nd=a1;function o1(t){return 56320<=t&&t<=57343}e.$Od=o1;function v1(t,n){return(t-55296<<10)+(n-56320)+65536}e.$Pd=v1;function E1(t,n,u){const h=t.charCodeAt(u);if(a1(h)&&u+1<n){const A=t.charCodeAt(u+1);if(o1(A))return v1(h,A)}return h}e.$Qd=E1;function q1(t,n){const u=t.charCodeAt(n-1);if(o1(u)&&n>1){const h=t.charCodeAt(n-2);if(a1(h))return v1(h,u)}return u}class b1{get offset(){return this.e}constructor(n,u=0){this.c=n,this.d=n.length,this.e=u}setOffset(n){this.e=n}prevCodePoint(){const n=q1(this.c,this.e);return this.e-=n>=65536?2:1,n}nextCodePoint(){const n=E1(this.c,this.d,this.e);return this.e+=n>=65536?2:1,n}eol(){return this.e>=this.d}}e.$Rd=b1;class n1{get offset(){return this.c.offset}constructor(n,u=0){this.c=new b1(n,u)}nextGraphemeLength(){const n=c1.getInstance(),u=this.c,h=u.offset;let A=n.getGraphemeBreakType(u.nextCodePoint());for(;!u.eol();){const R=u.offset,G=n.getGraphemeBreakType(u.nextCodePoint());if(A1(A,G)){u.setOffset(R);break}A=G}return u.offset-h}prevGraphemeLength(){const n=c1.getInstance(),u=this.c,h=u.offset;let A=n.getGraphemeBreakType(u.prevCodePoint());for(;u.offset>0;){const R=u.offset,G=n.getGraphemeBreakType(u.prevCodePoint());if(A1(G,A)){u.setOffset(R);break}A=G}return h-u.offset}eol(){return this.c.eol()}}e.$Sd=n1;function C1(t,n){return new n1(t,n).nextGraphemeLength()}e.$Td=C1;function L1(t,n){return new n1(t,n).prevGraphemeLength()}e.$Ud=L1;function F1(t,n){n>0&&o1(t.charCodeAt(n))&&n--;const u=n+C1(t,n);return[u-L1(t,u),u]}e.$Vd=F1;function P1(t){const n=new n1(t);let u=0;for(;!n.eol();)u++,n.nextGraphemeLength();return u}e.$Wd=P1;let y1;function S1(){return/(?:[\u05BE\u05C0\u05C3\u05C6\u05D0-\u05F4\u0608\u060B\u060D\u061B-\u064A\u066D-\u066F\u0671-\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u0710\u0712-\u072F\u074D-\u07A5\u07B1-\u07EA\u07F4\u07F5\u07FA\u07FE-\u0815\u081A\u0824\u0828\u0830-\u0858\u085E-\u088E\u08A0-\u08C9\u200F\uFB1D\uFB1F-\uFB28\uFB2A-\uFD3D\uFD50-\uFDC7\uFDF0-\uFDFC\uFE70-\uFEFC]|\uD802[\uDC00-\uDD1B\uDD20-\uDE00\uDE10-\uDE35\uDE40-\uDEE4\uDEEB-\uDF35\uDF40-\uDFFF]|\uD803[\uDC00-\uDD23\uDE80-\uDEA9\uDEAD-\uDF45\uDF51-\uDF81\uDF86-\uDFF6]|\uD83A[\uDC00-\uDCCF\uDD00-\uDD43\uDD4B-\uDFFF]|\uD83B[\uDC00-\uDEBB])/}function M1(t){return y1||(y1=S1()),y1.test(t)}e.$Xd=M1;const j1=/^[\t\n\r\x20-\x7E]*$/;function W1(t){return j1.test(t)}e.$Yd=W1,e.$Zd=/[\u2028\u2029]/;function q(t){return e.$Zd.test(t)}e.$1d=q;function y(t){return t>=11904&&t<=55215||t>=63744&&t<=64255||t>=65281&&t<=65374}e.$2d=y;function D(t){return t>=127462&&t<=127487||t===8986||t===8987||t===9200||t===9203||t>=9728&&t<=10175||t===11088||t===11093||t>=127744&&t<=128591||t>=128640&&t<=128764||t>=128992&&t<=129008||t>=129280&&t<=129535||t>=129648&&t<=129782}e.$3d=D;function O(t,n){if(t.length<n)return t;const u=/\b/g;let h=0;for(;u.test(t)&&!(t.length-u.lastIndex<n);)h=u.lastIndex,u.lastIndex+=1;return t.substring(h).replace(/^\s/,"")}e.$4d=O;const P=/(:?\x1b\[|\x9B)[=?>!]?[\d;:]*["$#'* ]?[a-zA-Z@^`{}|~]/g,N=/\x1b\].*?\x07/g;function V(t){return t&&(t=t.replace(P,"").replace(N,"")),t}e.$5d=V,e.$6d=String.fromCharCode(65279);function x(t){return!!(t&&t.length>0&&t.charCodeAt(0)===65279)}e.$7d=x;function f1(t){return x(t)?t.substr(1):t}e.$8d=f1;function d1(t,n){if(!t||!n||t.length<n.length)return!1;const u=n.length,h=t.toLowerCase();let A=0,R=-1;for(;A<u;){const G=h.indexOf(n[A],R+1);if(G<0)return!1;R=G,A++}return!0}e.$9d=d1;function g1(t,n=!1){return t?(n&&(t=t.replace(/\\./g,"")),t.toLowerCase()!==t):!1}e.$0d=g1;function h1(t){return t.charAt(0).toUpperCase()+t.slice(1)}e.$$d=h1;function O1(t,n=1){if(n===0)return"";let u=-1;do u=t.indexOf(`
`,u+1),n--;while(n>0&&u>=0);return u===-1?t:(t[u-1]==="\r"&&u--,t.substr(0,u))}e.$_d=O1;function m1(t){return t=t%(2*26),t<26?String.fromCharCode(97+t):String.fromCharCode(65+t-26)}e.$ae=m1;function _1(t){return c1.getInstance().getGraphemeBreakType(t)}e.$be=_1;function A1(t,n){return t===0?n!==5&&n!==7:t===2&&n===3?!1:t===4||t===2||t===3||n===4||n===2||n===3?!0:!(t===8&&(n===8||n===9||n===11||n===12)||(t===11||t===9)&&(n===9||n===10)||(t===12||t===10)&&n===10||n===5||n===13||n===7||t===1||t===13&&n===14||t===6&&n===6)}var k1;(function(t){t[t.Other=0]="Other",t[t.Prepend=1]="Prepend",t[t.CR=2]="CR",t[t.LF=3]="LF",t[t.Control=4]="Control",t[t.Extend=5]="Extend",t[t.Regional_Indicator=6]="Regional_Indicator",t[t.SpacingMark=7]="SpacingMark",t[t.L=8]="L",t[t.V=9]="V",t[t.T=10]="T",t[t.LV=11]="LV",t[t.LVT=12]="LVT",t[t.ZWJ=13]="ZWJ",t[t.Extended_Pictographic=14]="Extended_Pictographic"})(k1||(e.GraphemeBreakType=k1={}));class c1{static getInstance(){return c1.c||(c1.c=new c1),c1.c}constructor(){this.d=I1()}getGraphemeBreakType(n){if(n<32)return n===10?3:n===13?2:4;if(n<127)return 0;const u=this.d,h=u.length/3;let A=1;for(;A<=h;)if(n<u[3*A])A=2*A;else if(n>u[3*A+1])A=2*A+1;else return u[3*A+2];return 0}}c1.c=null;function I1(){return JSON.parse("[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]")}function N1(t,n){if(t===0)return 0;const u=z1(t,n);if(u!==void 0)return u;const h=new b1(n,t);return h.prevCodePoint(),h.offset}e.$ce=N1;function z1(t,n){const u=new b1(n,t);let h=u.prevCodePoint();for(;T1(h)||h===65039||h===8419;){if(u.offset===0)return;h=u.prevCodePoint()}if(!D(h))return;let A=u.offset;return A>0&&u.prevCodePoint()===8205&&(A=u.offset),A}function T1(t){return 127995<=t&&t<=127999}var R1;(function(t){t[t.zwj=8205]="zwj",t[t.emojiVariantSelector=65039]="emojiVariantSelector",t[t.enclosingKeyCap=8419]="enclosingKeyCap"})(R1||(R1={})),e.$de="\xA0";class s1{static getInstance(n){return s1.d.get(Array.from(n))}static getLocales(){return s1.e.value}constructor(n){this.f=n}isAmbiguous(n){return this.f.has(n)}getPrimaryConfusable(n){return this.f.get(n)}getConfusableCodePoints(){return new Set(this.f.keys())}}e.$ee=s1,S=s1,s1.c=new F.$S(()=>JSON.parse('{"_common":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125,119846,109],"_default":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"cs":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"de":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"es":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"fr":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"it":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"ja":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],"ko":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"pl":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"pt-BR":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"qps-ploc":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"ru":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"tr":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"zh-hans":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],"zh-hant":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}')),s1.d=new b.$dd(t=>{function n(X){const i1=new Map;for(let u1=0;u1<X.length;u1+=2)i1.set(X[u1],X[u1+1]);return i1}function u(X,i1){const u1=new Map(X);for(const[D1,U1]of i1)u1.set(D1,U1);return u1}function h(X,i1){if(!X)return i1;const u1=new Map;for(const[D1,U1]of X)i1.has(D1)&&u1.set(D1,U1);return u1}const A=S.c.value;let R=t.filter(X=>!X.startsWith("_")&&X in A);R.length===0&&(R=["_default"]);let G;for(const X of R){const i1=n(A[X]);G=h(G,i1)}const $1=n(A._common),r1=u($1,G);return new s1(r1)}),s1.e=new F.$S(()=>Object.keys(s1.c.value).filter(t=>!t.startsWith("_")));class w1{static c(){return JSON.parse("[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]")}static e(){return this.d||(this.d=new Set(w1.c())),this.d}static isInvisibleCharacter(n){return w1.e().has(n)}static get codePoints(){return w1.e()}}e.$fe=w1,w1.d=void 0}),define(p[14],e1([0,1]),function(Q,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.$ze=e.$ye=e.$xe=e.$we=e.$ve=e.$ue=e.$te=e.$se=e.$re=e.$qe=e.$pe=e.$oe=e.$ne=e.$me=e.$le=e.$ke=e.$je=e.$ie=e.$he=e.$ge=void 0;function b(r){return typeof r=="string"}e.$ge=b;function F(r){return Array.isArray(r)&&r.every(g=>b(g))}e.$he=F;function S(r){return typeof r=="object"&&r!==null&&!Array.isArray(r)&&!(r instanceof RegExp)&&!(r instanceof Date)}e.$ie=S;function m(r){const g=Object.getPrototypeOf(Uint8Array);return typeof r=="object"&&r instanceof g}e.$je=m;function I(r){return typeof r=="number"&&!isNaN(r)}e.$ke=I;function L(r){return!!r&&typeof r[Symbol.iterator]=="function"}e.$le=L;function M(r){return r===!0||r===!1}e.$me=M;function j(r){return typeof r>"u"}e.$ne=j;function H(r){return!T(r)}e.$oe=H;function T(r){return j(r)||r===null}e.$pe=T;function B(r,g){if(!r)throw new Error(g?`Unexpected type, expected '${g}'`:"Unexpected type")}e.$qe=B;function J(r){if(T(r))throw new Error("Assertion Failed: argument is undefined or null");return r}e.$re=J;function K(...r){const g=[];for(let c=0;c<r.length;c++){const v=r[c];if(T(v))throw new Error(`Assertion Failed: argument at index ${c} is undefined or null`);g.push(v)}return g}e.$se=K;const Y=Object.prototype.hasOwnProperty;function z(r){if(!S(r))return!1;for(const g in r)if(Y.call(r,g))return!1;return!0}e.$te=z;function d(r){return typeof r=="function"}e.$ue=d;function E(...r){return r.length>0&&r.every(d)}e.$ve=E;function w(r,g){const c=Math.min(r.length,g.length);for(let v=0;v<c;v++)l(r[v],g[v])}e.$we=w;function l(r,g){if(b(g)){if(typeof r!==g)throw new Error(`argument does not match constraint: typeof ${g}`)}else if(d(g)){try{if(r instanceof g)return}catch{}if(!T(r)&&r.constructor===g||g.length===1&&g.call(void 0,r)===!0)return;throw new Error("argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true")}}e.$xe=l;function C(r){return r===null?void 0:r}e.$ye=C;function f(r){return typeof r>"u"?null:r}e.$ze=f}),define(p[15],e1([0,1,14]),function(Q,e,b){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.$Pm=e.$Om=e.$Nm=e.$Mm=e.$Lm=e.$Km=e.$Jm=e.$Im=e.$Hm=e.$Gm=e.$Fm=e.$Em=void 0;function F(d){if(!d||typeof d!="object"||d instanceof RegExp)return d;const E=Array.isArray(d)?[]:{};return Object.entries(d).forEach(([w,l])=>{E[w]=l&&typeof l=="object"?F(l):l}),E}e.$Em=F;function S(d){if(!d||typeof d!="object")return d;const E=[d];for(;E.length>0;){const w=E.shift();Object.freeze(w);for(const l in w)if(m.call(w,l)){const C=w[l];typeof C=="object"&&!Object.isFrozen(C)&&!(0,b.$je)(C)&&E.push(C)}}return d}e.$Fm=S;const m=Object.prototype.hasOwnProperty;function I(d,E){return L(d,E,new Set)}e.$Gm=I;function L(d,E,w){if((0,b.$pe)(d))return d;const l=E(d);if(typeof l<"u")return l;if(Array.isArray(d)){const C=[];for(const f of d)C.push(L(f,E,w));return C}if((0,b.$ie)(d)){if(w.has(d))throw new Error("Cannot clone recursive data-structure");w.add(d);const C={};for(const f in d)m.call(d,f)&&(C[f]=L(d[f],E,w));return w.delete(d),C}return d}function M(d,E,w=!0){return(0,b.$ie)(d)?((0,b.$ie)(E)&&Object.keys(E).forEach(l=>{l in d?w&&((0,b.$ie)(d[l])&&(0,b.$ie)(E[l])?M(d[l],E[l],w):d[l]=E[l]):d[l]=E[l]}),d):E}e.$Hm=M;function j(d,E){if(d===E)return!0;if(d==null||E===null||E===void 0||typeof d!=typeof E||typeof d!="object"||Array.isArray(d)!==Array.isArray(E))return!1;let w,l;if(Array.isArray(d)){if(d.length!==E.length)return!1;for(w=0;w<d.length;w++)if(!j(d[w],E[w]))return!1}else{const C=[];for(l in d)C.push(l);C.sort();const f=[];for(l in E)f.push(l);if(f.sort(),!j(C,f))return!1;for(w=0;w<C.length;w++)if(!j(d[C[w]],E[C[w]]))return!1}return!0}e.$Im=j;function H(d){const E=new Set;return JSON.stringify(d,(w,l)=>{if((0,b.$ie)(l)||Array.isArray(l)){if(E.has(l))return"[Circular]";E.add(l)}return l})}e.$Jm=H;function T(d,E){const w=Object.create(null);return!d||!E||Object.keys(E).forEach(C=>{const f=d[C],r=E[C];j(f,r)||(w[C]=r)}),w}e.$Km=T;function B(d,E){const w=E.toLowerCase(),l=Object.keys(d).find(C=>C.toLowerCase()===w);return l?d[l]:d[E]}e.$Lm=B;function J(d,E){const w=Object.create(null);for(const[l,C]of Object.entries(d))E(l,C)&&(w[l]=C);return w}e.$Mm=J;function K(d){let E=[],w=Object.getPrototypeOf(d);for(;Object.prototype!==w;)E=E.concat(Object.getOwnPropertyNames(w)),w=Object.getPrototypeOf(w);return E}e.$Nm=K;function Y(d){const E=[];for(const w of K(d))typeof d[w]=="function"&&E.push(w);return E}e.$Om=Y;function z(d,E){const w=C=>function(){const f=Array.prototype.slice.call(arguments,0);return E(C,f)},l={};for(const C of d)l[C]=w(C);return l}e.$Pm=z}),define(p[16],e1([0,1,2,5,4,15,9,13]),function(Q,e,b,F,S,m,I,L){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.create=e.SimpleWorkerServer=e.SimpleWorkerClient=e.logOnceWebWorkerWarning=void 0;const M="$initialize";let j=!1;function H(g){I.$j&&(j||(j=!0,console.warn("Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/microsoft/monaco-editor#faq")),console.warn(g.message))}e.logOnceWebWorkerWarning=H;var T;(function(g){g[g.Request=0]="Request",g[g.Reply=1]="Reply",g[g.SubscribeEvent=2]="SubscribeEvent",g[g.Event=3]="Event",g[g.UnsubscribeEvent=4]="UnsubscribeEvent"})(T||(T={}));class B{constructor(c,v,o,i){this.vsWorker=c,this.req=v,this.method=o,this.args=i,this.type=0}}class J{constructor(c,v,o,i){this.vsWorker=c,this.seq=v,this.res=o,this.err=i,this.type=1}}class K{constructor(c,v,o,i){this.vsWorker=c,this.req=v,this.eventName=o,this.arg=i,this.type=2}}class Y{constructor(c,v,o){this.vsWorker=c,this.req=v,this.event=o,this.type=3}}class z{constructor(c,v){this.vsWorker=c,this.req=v,this.type=4}}class d{constructor(c){this.a=-1,this.g=c,this.b=0,this.c=Object.create(null),this.d=new Map,this.f=new Map}setWorkerId(c){this.a=c}sendMessage(c,v){const o=String(++this.b);return new Promise((i,a)=>{this.c[o]={resolve:i,reject:a},this.o(new B(this.a,o,c,v))})}listen(c,v){let o=null;const i=new F.$5c({onWillAddFirstListener:()=>{o=String(++this.b),this.d.set(o,i),this.o(new K(this.a,o,c,v))},onDidRemoveLastListener:()=>{this.d.delete(o),this.o(new z(this.a,o)),o=null}});return i.event}handleMessage(c){!c||!c.vsWorker||this.a!==-1&&c.vsWorker!==this.a||this.h(c)}h(c){switch(c.type){case 1:return this.j(c);case 0:return this.k(c);case 2:return this.l(c);case 3:return this.m(c);case 4:return this.n(c)}}j(c){if(!this.c[c.seq]){console.warn("Got reply to unknown seq");return}const v=this.c[c.seq];if(delete this.c[c.seq],c.err){let o=c.err;c.err.$isError&&(o=new Error,o.name=c.err.name,o.message=c.err.message,o.stack=c.err.stack),v.reject(o);return}v.resolve(c.res)}k(c){const v=c.req;this.g.handleMessage(c.method,c.args).then(i=>{this.o(new J(this.a,v,i,void 0))},i=>{i.detail instanceof Error&&(i.detail=(0,b.$Z)(i.detail)),this.o(new J(this.a,v,void 0,(0,b.$Z)(i)))})}l(c){const v=c.req,o=this.g.handleEvent(c.eventName,c.arg)(i=>{this.o(new Y(this.a,v,i))});this.f.set(v,o)}m(c){if(!this.d.has(c.req)){console.warn("Got event for unknown req");return}this.d.get(c.req).fire(c.event)}n(c){if(!this.f.has(c.req)){console.warn("Got unsubscribe for unknown req");return}this.f.get(c.req).dispose(),this.f.delete(c.req)}o(c){const v=[];if(c.type===0)for(let o=0;o<c.args.length;o++)c.args[o]instanceof ArrayBuffer&&v.push(c.args[o]);else c.type===1&&c.res instanceof ArrayBuffer&&v.push(c.res);this.g.sendMessage(c,v)}}class E extends S.$kb{constructor(c,v,o){super();let i=null;this.a=this.B(c.create("vs/base/common/worker/simpleWorker",_=>{this.c.handleMessage(_)},_=>{i?.(_)})),this.c=new d({sendMessage:(_,k)=>{this.a.postMessage(_,k)},handleMessage:(_,k)=>{if(typeof o[_]!="function")return Promise.reject(new Error("Missing method "+_+" on main thread host."));try{return Promise.resolve(o[_].apply(o,k))}catch(Z){return Promise.reject(Z)}},handleEvent:(_,k)=>{if(l(_)){const Z=o[_].call(o,k);if(typeof Z!="function")throw new Error(`Missing dynamic event ${_} on main thread host.`);return Z}if(w(_)){const Z=o[_];if(typeof Z!="function")throw new Error(`Missing event ${_} on main thread host.`);return Z}throw new Error(`Malformed event name ${_}`)}}),this.c.setWorkerId(this.a.getId());let a=null;const s=globalThis.require;typeof s<"u"&&typeof s.getConfig=="function"?a=s.getConfig():typeof globalThis.requirejs<"u"&&(a=globalThis.requirejs.s.contexts._.config);const $=(0,m.$Om)(o);this.b=this.c.sendMessage(M,[this.a.getId(),JSON.parse(JSON.stringify(a)),v,$]);const W=(_,k)=>this.g(_,k),U=(_,k)=>this.c.listen(_,k);this.f=new Promise((_,k)=>{i=k,this.b.then(Z=>{_(C(Z,W,U))},Z=>{k(Z),this.h("Worker failed to load "+v,Z)})})}getProxyObject(){return this.f}g(c,v){return new Promise((o,i)=>{this.b.then(()=>{this.c.sendMessage(c,v).then(o,i)},i)})}h(c,v){console.error(c),console.info(v)}}e.SimpleWorkerClient=E;function w(g){return g[0]==="o"&&g[1]==="n"&&L.$Id(g.charCodeAt(2))}function l(g){return/^onDynamic/.test(g)&&L.$Id(g.charCodeAt(9))}function C(g,c,v){const o=s=>function(){const $=Array.prototype.slice.call(arguments,0);return c(s,$)},i=s=>function($){return v(s,$)},a={};for(const s of g){if(l(s)){a[s]=i(s);continue}if(w(s)){a[s]=v(s,void 0);continue}a[s]=o(s)}return a}class f{constructor(c,v){this.a=v,this.b=null,this.c=new d({sendMessage:(o,i)=>{c(o,i)},handleMessage:(o,i)=>this.d(o,i),handleEvent:(o,i)=>this.f(o,i)})}onmessage(c){this.c.handleMessage(c)}d(c,v){if(c===M)return this.g(v[0],v[1],v[2],v[3]);if(!this.b||typeof this.b[c]!="function")return Promise.reject(new Error("Missing requestHandler or method: "+c));try{return Promise.resolve(this.b[c].apply(this.b,v))}catch(o){return Promise.reject(o)}}f(c,v){if(!this.b)throw new Error("Missing requestHandler");if(l(c)){const o=this.b[c].call(this.b,v);if(typeof o!="function")throw new Error(`Missing dynamic event ${c} on request handler.`);return o}if(w(c)){const o=this.b[c];if(typeof o!="function")throw new Error(`Missing event ${c} on request handler.`);return o}throw new Error(`Malformed event name ${c}`)}g(c,v,o,i){this.c.setWorkerId(c);const $=C(i,(W,U)=>this.c.sendMessage(W,U),(W,U)=>this.c.listen(W,U));return this.a?(this.b=this.a($),Promise.resolve((0,m.$Om)(this.b))):(v&&(typeof v.baseUrl<"u"&&delete v.baseUrl,typeof v.paths<"u"&&typeof v.paths.vs<"u"&&delete v.paths.vs,typeof v.trustedTypesPolicy!==void 0&&delete v.trustedTypesPolicy,v.catchError=!0,globalThis.require.config(v)),new Promise((W,U)=>{(globalThis.require||Q)([o],k=>{if(this.b=k.create($),!this.b){U(new Error("No RequestHandler!"));return}W((0,m.$Om)(this.b))},U)}))}}e.SimpleWorkerServer=f;function r(g){return new f(g,null)}e.create=r})}).call(this);

//# sourceMappingURL=simpleWorker.js.map
