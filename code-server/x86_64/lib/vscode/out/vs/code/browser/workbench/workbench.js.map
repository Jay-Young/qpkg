{"version":3,"sources":["out-vscode-reh-web/vs/code/browser/workbench/fake","out-vscode-reh-web/vs/code/browser/workbench/file:/home/runner/work/code-server/code-server/lib/vscode/src/vs/code/browser/workbench/workbench.ts"],"sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isStandalone } from 'vs/base/browser/browser';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { parse } from 'vs/base/common/marshalling';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { isEqual } from 'vs/base/common/resources';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { request } from 'vs/base/parts/request/browser/request';\nimport product from 'vs/platform/product/common/product';\nimport { isFolderToOpen, isWorkspaceToOpen } from 'vs/platform/window/common/window';\nimport { create } from 'vs/workbench/workbench.web.main';\nimport { posix } from 'vs/base/common/path';\nimport { ltrim } from 'vs/base/common/strings';\nimport type { ICredentialsProvider } from 'vs/platform/credentials/common/credentials';\nimport type { IURLCallbackProvider } from 'vs/workbench/services/url/browser/urlService';\nimport type { IWorkbenchConstructionOptions } from 'vs/workbench/browser/web.api';\nimport type { IWorkspace, IWorkspaceProvider } from 'vs/workbench/services/host/browser/browserHostService';\nimport { extractLocalHostUriMetaDataForPortMapping, TunnelOptions, TunnelCreationOptions } from 'vs/platform/tunnel/common/tunnel';\n\ninterface ICredential {\n\tservice: string;\n\taccount: string;\n\tpassword: string;\n}\n\nclass LocalStorageCredentialsProvider implements ICredentialsProvider {\n\n\tprivate static readonly CREDENTIALS_STORAGE_KEY = 'credentials.provider';\n\n\tprivate readonly authService: string | undefined;\n\n\tconstructor() {\n\t\tlet authSessionInfo: { readonly id: string; readonly accessToken: string; readonly providerId: string; readonly canSignOut?: boolean; readonly scopes: string[][] } | undefined;\n\t\tconst authSessionElement = document.getElementById('vscode-workbench-auth-session');\n\t\tconst authSessionElementAttribute = authSessionElement ? authSessionElement.getAttribute('data-settings') : undefined;\n\t\tif (authSessionElementAttribute) {\n\t\t\ttry {\n\t\t\t\tauthSessionInfo = JSON.parse(authSessionElementAttribute);\n\t\t\t} catch (error) { /* Invalid session is passed. Ignore. */ }\n\t\t}\n\n\t\tif (authSessionInfo) {\n\t\t\t// Settings Sync Entry\n\t\t\tthis.setPassword(`${product.urlProtocol}.login`, 'account', JSON.stringify(authSessionInfo));\n\n\t\t\t// Auth extension Entry\n\t\t\tthis.authService = `${product.urlProtocol}-${authSessionInfo.providerId}.login`;\n\t\t\tthis.setPassword(this.authService, 'account', JSON.stringify(authSessionInfo.scopes.map(scopes => ({\n\t\t\t\tid: authSessionInfo!.id,\n\t\t\t\tscopes,\n\t\t\t\taccessToken: authSessionInfo!.accessToken\n\t\t\t}))));\n\t\t}\n\t}\n\n\tprivate _credentials: ICredential[] | undefined;\n\tprivate get credentials(): ICredential[] {\n\t\tif (!this._credentials) {\n\t\t\ttry {\n\t\t\t\tconst serializedCredentials = window.localStorage.getItem(LocalStorageCredentialsProvider.CREDENTIALS_STORAGE_KEY);\n\t\t\t\tif (serializedCredentials) {\n\t\t\t\t\tthis._credentials = JSON.parse(serializedCredentials);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// ignore\n\t\t\t}\n\n\t\t\tif (!Array.isArray(this._credentials)) {\n\t\t\t\tthis._credentials = [];\n\t\t\t}\n\t\t}\n\n\t\treturn this._credentials;\n\t}\n\n\tprivate save(): void {\n\t\twindow.localStorage.setItem(LocalStorageCredentialsProvider.CREDENTIALS_STORAGE_KEY, JSON.stringify(this.credentials));\n\t}\n\n\tasync getPassword(service: string, account: string): Promise<string | null> {\n\t\treturn this.doGetPassword(service, account);\n\t}\n\n\tprivate async doGetPassword(service: string, account?: string): Promise<string | null> {\n\t\tfor (const credential of this.credentials) {\n\t\t\tif (credential.service === service) {\n\t\t\t\tif (typeof account !== 'string' || account === credential.account) {\n\t\t\t\t\treturn credential.password;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tasync setPassword(service: string, account: string, password: string): Promise<void> {\n\t\tthis.doDeletePassword(service, account);\n\n\t\tthis.credentials.push({ service, account, password });\n\n\t\tthis.save();\n\n\t\ttry {\n\t\t\tif (password && service === this.authService) {\n\t\t\t\tconst value = JSON.parse(password);\n\t\t\t\tif (Array.isArray(value) && value.length === 0) {\n\t\t\t\t\tawait this.logout(service);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\tasync deletePassword(service: string, account: string): Promise<boolean> {\n\t\tconst result = await this.doDeletePassword(service, account);\n\n\t\tif (result && service === this.authService) {\n\t\t\ttry {\n\t\t\t\tawait this.logout(service);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate async doDeletePassword(service: string, account: string): Promise<boolean> {\n\t\tlet found = false;\n\n\t\tthis._credentials = this.credentials.filter(credential => {\n\t\t\tif (credential.service === service && credential.account === account) {\n\t\t\t\tfound = true;\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t\tif (found) {\n\t\t\tthis.save();\n\t\t}\n\n\t\treturn found;\n\t}\n\n\tasync findPassword(service: string): Promise<string | null> {\n\t\treturn this.doGetPassword(service);\n\t}\n\n\tasync findCredentials(service: string): Promise<Array<{ account: string; password: string }>> {\n\t\treturn this.credentials\n\t\t\t.filter(credential => credential.service === service)\n\t\t\t.map(({ account, password }) => ({ account, password }));\n\t}\n\n\tprivate async logout(service: string): Promise<void> {\n\t\tconst queryValues: Map<string, string> = new Map();\n\t\tqueryValues.set('logout', String(true));\n\t\tqueryValues.set('service', service);\n\n\t\tawait request({\n\t\t\turl: doCreateUri('/auth/logout', queryValues).toString(true)\n\t\t}, CancellationToken.None);\n\t}\n\n\tasync clear(): Promise<void> {\n\t\twindow.localStorage.removeItem(LocalStorageCredentialsProvider.CREDENTIALS_STORAGE_KEY);\n\t}\n}\n\nclass LocalStorageURLCallbackProvider extends Disposable implements IURLCallbackProvider {\n\n\tprivate static REQUEST_ID = 0;\n\n\tprivate static QUERY_KEYS: ('scheme' | 'authority' | 'path' | 'query' | 'fragment')[] = [\n\t\t'scheme',\n\t\t'authority',\n\t\t'path',\n\t\t'query',\n\t\t'fragment'\n\t];\n\n\tprivate readonly _onCallback = this._register(new Emitter<URI>());\n\treadonly onCallback = this._onCallback.event;\n\n\tprivate pendingCallbacks = new Set<number>();\n\tprivate lastTimeChecked = Date.now();\n\tprivate checkCallbacksTimeout: unknown | undefined = undefined;\n\tprivate onDidChangeLocalStorageDisposable: IDisposable | undefined;\n\n\tconstructor(private readonly _callbackRoute: string) {\n\t\tsuper();\n\t}\n\n\tcreate(options: Partial<UriComponents> = {}): URI {\n\t\tconst id = ++LocalStorageURLCallbackProvider.REQUEST_ID;\n\t\tconst queryParams: string[] = [`vscode-reqid=${id}`];\n\n\t\tfor (const key of LocalStorageURLCallbackProvider.QUERY_KEYS) {\n\t\t\tconst value = options[key];\n\n\t\t\tif (value) {\n\t\t\t\tqueryParams.push(`vscode-${key}=${encodeURIComponent(value)}`);\n\t\t\t}\n\t\t}\n\n\t\t// TODO@joao remove eventually\n\t\t// https://github.com/microsoft/vscode-dev/issues/62\n\t\t// https://github.com/microsoft/vscode/blob/159479eb5ae451a66b5dac3c12d564f32f454796/extensions/github-authentication/src/githubServer.ts#L50-L50\n\t\tif (!(options.authority === 'vscode.github-authentication' && options.path === '/dummy')) {\n\t\t\tconst key = `vscode-web.url-callbacks[${id}]`;\n\t\t\twindow.localStorage.removeItem(key);\n\n\t\t\tthis.pendingCallbacks.add(id);\n\t\t\tthis.startListening();\n\t\t}\n\n\t\treturn URI.parse(window.location.href).with({ path: this._callbackRoute, query: queryParams.join('&') });\n\t}\n\n\tprivate startListening(): void {\n\t\tif (this.onDidChangeLocalStorageDisposable) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst fn = () => this.onDidChangeLocalStorage();\n\t\twindow.addEventListener('storage', fn);\n\t\tthis.onDidChangeLocalStorageDisposable = { dispose: () => window.removeEventListener('storage', fn) };\n\t}\n\n\tprivate stopListening(): void {\n\t\tthis.onDidChangeLocalStorageDisposable?.dispose();\n\t\tthis.onDidChangeLocalStorageDisposable = undefined;\n\t}\n\n\t// this fires every time local storage changes, but we\n\t// don't want to check more often than once a second\n\tprivate async onDidChangeLocalStorage(): Promise<void> {\n\t\tconst ellapsed = Date.now() - this.lastTimeChecked;\n\n\t\tif (ellapsed > 1000) {\n\t\t\tthis.checkCallbacks();\n\t\t} else if (this.checkCallbacksTimeout === undefined) {\n\t\t\tthis.checkCallbacksTimeout = setTimeout(() => {\n\t\t\t\tthis.checkCallbacksTimeout = undefined;\n\t\t\t\tthis.checkCallbacks();\n\t\t\t}, 1000 - ellapsed);\n\t\t}\n\t}\n\n\tprivate checkCallbacks(): void {\n\t\tlet pendingCallbacks: Set<number> | undefined;\n\n\t\tfor (const id of this.pendingCallbacks) {\n\t\t\tconst key = `vscode-web.url-callbacks[${id}]`;\n\t\t\tconst result = window.localStorage.getItem(key);\n\n\t\t\tif (result !== null) {\n\t\t\t\ttry {\n\t\t\t\t\tthis._onCallback.fire(URI.revive(JSON.parse(result)));\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\n\t\t\t\tpendingCallbacks = pendingCallbacks ?? new Set(this.pendingCallbacks);\n\t\t\t\tpendingCallbacks.delete(id);\n\t\t\t\twindow.localStorage.removeItem(key);\n\t\t\t}\n\t\t}\n\n\t\tif (pendingCallbacks) {\n\t\t\tthis.pendingCallbacks = pendingCallbacks;\n\n\t\t\tif (this.pendingCallbacks.size === 0) {\n\t\t\t\tthis.stopListening();\n\t\t\t}\n\t\t}\n\n\t\tthis.lastTimeChecked = Date.now();\n\t}\n}\n\nclass WorkspaceProvider implements IWorkspaceProvider {\n\n\tprivate static QUERY_PARAM_EMPTY_WINDOW = 'ew';\n\tprivate static QUERY_PARAM_FOLDER = 'folder';\n\tprivate static QUERY_PARAM_WORKSPACE = 'workspace';\n\n\tprivate static QUERY_PARAM_PAYLOAD = 'payload';\n\n\tstatic create(config: IWorkbenchConstructionOptions & { folderUri?: UriComponents; workspaceUri?: UriComponents }) {\n\t\tlet foundWorkspace = false;\n\t\tlet workspace: IWorkspace;\n\t\tlet payload = Object.create(null);\n\n\t\tconst query = new URL(document.location.href).searchParams;\n\t\tquery.forEach((value, key) => {\n\t\t\tswitch (key) {\n\n\t\t\t\t// Folder\n\t\t\t\tcase WorkspaceProvider.QUERY_PARAM_FOLDER:\n\t\t\t\t\tif (config.remoteAuthority && value.startsWith(posix.sep)) {\n\t\t\t\t\t\t// when connected to a remote and having a value\n\t\t\t\t\t\t// that is a path (begins with a `/`), assume this\n\t\t\t\t\t\t// is a vscode-remote resource as simplified URL.\n\t\t\t\t\t\tworkspace = { folderUri: URI.from({ scheme: Schemas.vscodeRemote, path: value, authority: config.remoteAuthority }) };\n\t\t\t\t\t} else {\n\t\t\t\t\t\tworkspace = { folderUri: URI.parse(value) };\n\t\t\t\t\t}\n\t\t\t\t\tfoundWorkspace = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Workspace\n\t\t\t\tcase WorkspaceProvider.QUERY_PARAM_WORKSPACE:\n\t\t\t\t\tif (config.remoteAuthority && value.startsWith(posix.sep)) {\n\t\t\t\t\t\t// when connected to a remote and having a value\n\t\t\t\t\t\t// that is a path (begins with a `/`), assume this\n\t\t\t\t\t\t// is a vscode-remote resource as simplified URL.\n\t\t\t\t\t\tworkspace = { workspaceUri: URI.from({ scheme: Schemas.vscodeRemote, path: value, authority: config.remoteAuthority }) };\n\t\t\t\t\t} else {\n\t\t\t\t\t\tworkspace = { workspaceUri: URI.parse(value) };\n\t\t\t\t\t}\n\t\t\t\t\tfoundWorkspace = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Empty\n\t\t\t\tcase WorkspaceProvider.QUERY_PARAM_EMPTY_WINDOW:\n\t\t\t\t\tworkspace = undefined;\n\t\t\t\t\tfoundWorkspace = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Payload\n\t\t\t\tcase WorkspaceProvider.QUERY_PARAM_PAYLOAD:\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpayload = parse(value); // use marshalling#parse() to revive potential URIs\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error(error); // possible invalid JSON\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\t// If no workspace is provided through the URL, check for config\n\t\t// attribute from server\n\t\tif (!foundWorkspace) {\n\t\t\tif (config.folderUri) {\n\t\t\t\tworkspace = { folderUri: URI.revive(config.folderUri) };\n\t\t\t} else if (config.workspaceUri) {\n\t\t\t\tworkspace = { workspaceUri: URI.revive(config.workspaceUri) };\n\t\t\t}\n\t\t}\n\n\t\treturn new WorkspaceProvider(workspace, payload, config);\n\t}\n\n\treadonly trusted = true;\n\n\tprivate constructor(\n\t\treadonly workspace: IWorkspace,\n\t\treadonly payload: object,\n\t\tprivate readonly config: IWorkbenchConstructionOptions\n\t) {\n\t}\n\n\tasync open(workspace: IWorkspace, options?: { reuse?: boolean; payload?: object }): Promise<boolean> {\n\t\tif (options?.reuse && !options.payload && this.isSame(this.workspace, workspace)) {\n\t\t\treturn true; // return early if workspace and environment is not changing and we are reusing window\n\t\t}\n\n\t\tconst targetHref = this.createTargetUrl(workspace, options);\n\t\tif (targetHref) {\n\t\t\tif (options?.reuse) {\n\t\t\t\twindow.location.href = targetHref;\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tlet result;\n\t\t\t\tif (isStandalone()) {\n\t\t\t\t\tresult = window.open(targetHref, '_blank', 'toolbar=no'); // ensures to open another 'standalone' window!\n\t\t\t\t} else {\n\t\t\t\t\tresult = window.open(targetHref);\n\t\t\t\t}\n\n\t\t\t\treturn !!result;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate createTargetUrl(workspace: IWorkspace, options?: { reuse?: boolean; payload?: object }): string | undefined {\n\n\t\t// Empty\n\t\tlet targetHref: string | undefined = undefined;\n\t\tif (!workspace) {\n\t\t\ttargetHref = `${document.location.origin}${document.location.pathname}?${WorkspaceProvider.QUERY_PARAM_EMPTY_WINDOW}=true`;\n\t\t}\n\n\t\t// Folder\n\t\telse if (isFolderToOpen(workspace)) {\n\t\t\tlet queryParamFolder: string;\n\t\t\tif (this.config.remoteAuthority && workspace.folderUri.scheme === Schemas.vscodeRemote) {\n\t\t\t\t// when connected to a remote and having a folder\n\t\t\t\t// for that remote, only use the path as query\n\t\t\t\t// value to form shorter, nicer URLs.\n\t\t\t\t// ensure paths are absolute (begin with `/`)\n\t\t\t\t// clipboard: ltrim(workspace.folderUri.path, posix.sep)\n\t\t\t\tqueryParamFolder = `${posix.sep}${ltrim(workspace.folderUri.path, posix.sep)}`;\n\t\t\t} else {\n\t\t\t\tqueryParamFolder = encodeURIComponent(workspace.folderUri.toString(true));\n\t\t\t}\n\n\t\t\ttargetHref = `${document.location.origin}${document.location.pathname}?${WorkspaceProvider.QUERY_PARAM_FOLDER}=${queryParamFolder}`;\n\t\t}\n\n\t\t// Workspace\n\t\telse if (isWorkspaceToOpen(workspace)) {\n\t\t\tlet queryParamWorkspace: string;\n\t\t\tif (this.config.remoteAuthority && workspace.workspaceUri.scheme === Schemas.vscodeRemote) {\n\t\t\t\t// when connected to a remote and having a workspace\n\t\t\t\t// for that remote, only use the path as query\n\t\t\t\t// value to form shorter, nicer URLs.\n\t\t\t\t// ensure paths are absolute (begin with `/`)\n\t\t\t\tqueryParamWorkspace = `${posix.sep}${ltrim(workspace.workspaceUri.path, posix.sep)}`;\n\t\t\t} else {\n\t\t\t\tqueryParamWorkspace = encodeURIComponent(workspace.workspaceUri.toString(true));\n\t\t\t}\n\n\t\t\ttargetHref = `${document.location.origin}${document.location.pathname}?${WorkspaceProvider.QUERY_PARAM_WORKSPACE}=${queryParamWorkspace}`;\n\t\t}\n\n\t\t// Append payload if any\n\t\tif (options?.payload) {\n\t\t\ttargetHref += `&${WorkspaceProvider.QUERY_PARAM_PAYLOAD}=${encodeURIComponent(JSON.stringify(options.payload))}`;\n\t\t}\n\n\t\treturn targetHref;\n\t}\n\n\tprivate isSame(workspaceA: IWorkspace, workspaceB: IWorkspace): boolean {\n\t\tif (!workspaceA || !workspaceB) {\n\t\t\treturn workspaceA === workspaceB; // both empty\n\t\t}\n\n\t\tif (isFolderToOpen(workspaceA) && isFolderToOpen(workspaceB)) {\n\t\t\treturn isEqual(workspaceA.folderUri, workspaceB.folderUri); // same workspace\n\t\t}\n\n\t\tif (isWorkspaceToOpen(workspaceA) && isWorkspaceToOpen(workspaceB)) {\n\t\t\treturn isEqual(workspaceA.workspaceUri, workspaceB.workspaceUri); // same workspace\n\t\t}\n\n\t\treturn false;\n\t}\n\n\thasRemote(): boolean {\n\t\tif (this.workspace) {\n\t\t\tif (isFolderToOpen(this.workspace)) {\n\t\t\t\treturn this.workspace.folderUri.scheme === Schemas.vscodeRemote;\n\t\t\t}\n\n\t\t\tif (isWorkspaceToOpen(this.workspace)) {\n\t\t\t\treturn this.workspace.workspaceUri.scheme === Schemas.vscodeRemote;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\nfunction doCreateUri(path: string, queryValues: Map<string, string>): URI {\n\tlet query: string | undefined = undefined;\n\n\tif (queryValues) {\n\t\tlet index = 0;\n\t\tqueryValues.forEach((value, key) => {\n\t\t\tif (!query) {\n\t\t\t\tquery = '';\n\t\t\t}\n\n\t\t\tconst prefix = (index++ === 0) ? '' : '&';\n\t\t\tquery += `${prefix}${key}=${encodeURIComponent(value)}`;\n\t\t});\n\t}\n\n\tpath = (window.location.pathname + \"/\" + path).replace(/\\/\\/+/g, \"/\")\n\treturn URI.parse(window.location.href).with({ path, query });\n}\n\n(function () {\n\n\t// Find config by checking for DOM\n\tconst configElement = document.getElementById('vscode-workbench-web-configuration');\n\tconst configElementAttribute = configElement ? configElement.getAttribute('data-settings') : undefined;\n\tif (!configElement || !configElementAttribute) {\n\t\tthrow new Error('Missing web configuration element');\n\t}\n\tconst config: IWorkbenchConstructionOptions & { folderUri?: UriComponents; workspaceUri?: UriComponents; callbackRoute: string } = { ...JSON.parse(configElementAttribute), remoteAuthority: location.host }\n\n\t// Create workbench\n\tcreate(document.body, {\n\t\t...config,\n\t\tsettingsSyncOptions: config.settingsSyncOptions ? {\n\t\t\tenabled: config.settingsSyncOptions.enabled,\n\t\t} : undefined,\n\t\tworkspaceProvider: WorkspaceProvider.create(config),\n\t\turlCallbackProvider: new LocalStorageURLCallbackProvider(config.callbackRoute),\n\t\tcredentialsProvider: config.remoteAuthority ? undefined : new LocalStorageCredentialsProvider(), // with a remote, we don't use a local credentials provider\n\t\tresolveExternalUri: (uri: URI): Promise<URI> => {\n\t\t\tlet resolvedUri = uri\n\t\t\tconst localhostMatch = extractLocalHostUriMetaDataForPortMapping(resolvedUri)\n\n\t\t\tif (localhostMatch && resolvedUri.authority !== location.host) {\n\t\t\t\tif (config.productConfiguration && config.productConfiguration.proxyEndpointTemplate) {\n\t\t\t\t\tresolvedUri = URI.parse(new URL(config.productConfiguration.proxyEndpointTemplate.replace('{{port}}', localhostMatch.port.toString()), window.location.href).toString())\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(`Failed to resolve external URI: ${uri.toString()}. Could not determine base url because productConfiguration missing.`)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If not localhost, return unmodified\n\t\t\treturn Promise.resolve(resolvedUri)\n\t\t},\n\t\ttunnelProvider: {\n\t\t\ttunnelFactory: (tunnelOptions: TunnelOptions, tunnelCreationOptions: TunnelCreationOptions) => {\n\t\t\t\tconst onDidDispose: Emitter<void> = new Emitter();\n\t\t\t\tlet isDisposed = false;\n\t\t\t\treturn Promise.resolve({\n\t\t\t\t\tremoteAddress: tunnelOptions.remoteAddress,\n\t\t\t\t\tlocalAddress: `localhost:${tunnelOptions.remoteAddress.port}`,\n\t\t\t\t\tonDidDispose: onDidDispose.event,\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tif (!isDisposed) {\n\t\t\t\t\t\t\tisDisposed = true;\n\t\t\t\t\t\t\tonDidDispose.fire();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t});\n})();\n"],"mappings":"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","names":["__m","__M","deps","result","i","len","LocalStorageCredentialsProvider","authSessionInfo","authSessionElement","authSessionElementAttribute","product_1","scopes","serializedCredentials","service","account","credential","password","value","error","found","queryValues","request_1","doCreateUri","cancellation_1","LocalStorageURLCallbackProvider","lifecycle_1","j","event_1","options","id","queryParams","key","uri_1","fn","ellapsed","pendingCallbacks","WorkspaceProvider","config","foundWorkspace","workspace","payload","path_1","network_1","marshalling_1","e","targetHref","browser_1","window_1","queryParamFolder","strings_1","queryParamWorkspace","workspaceA","workspaceB","resources_1","path","query","index","configElement","configElementAttribute","workbench_web_main_1","uri","resolvedUri","localhostMatch","tunnel_1","tunnelOptions","tunnelCreationOptions","onDidDispose","isDisposed"],"file":"workbench.js"}