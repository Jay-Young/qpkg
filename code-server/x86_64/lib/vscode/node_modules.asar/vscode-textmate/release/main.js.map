{"version":3,"file":"main.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAwB,eAAID,IAE5BD,EAAqB,eAAIC,GAC1B,CATD,CASGK,MAAM,WACT,M,sCCNAC,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtDP,EAAQQ,wBAA0BR,EAAQS,gBAAa,EACvDT,EAAQS,WAAa,CACjBC,YAAiC,oBAAZC,WAA6BA,QAAQC,IAA2B,uBAEzFZ,EAAQQ,yBAA0B,C,gBCLlCH,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtDP,EAAQa,oBAAsBb,EAAQc,0BAAuB,EAC7D,MAAMC,EAAY,EAAQ,KAwB1Bf,EAAQc,qBAvBR,SAA8BE,EAAOC,GACjC,IAAIC,EAAO,EACX,MAAMC,EAAY,GAClB,IAAIC,EAAWJ,EACXK,EAAYJ,EAChB,KAAOG,IAAaC,GACZD,KAAcC,GAAaD,EAASE,OAASD,EAAUC,QAEvDJ,IACAE,EAAWA,EAASG,SAKpBJ,EAAUK,KAAKH,EAAUI,qBACzBJ,EAAYA,EAAUE,QAG9B,MAAO,CACHL,OACAC,UAAWA,EAAUO,UAE7B,EAYA1B,EAAQa,oBAVR,SAA6Bc,EAAOC,GAChC,IAAIC,EAAWF,EACf,IAAK,IAAIG,EAAI,EAAGA,EAAIF,EAAKV,KAAMY,IAC3BD,EAAWA,EAASN,OAExB,IAAK,MAAMQ,KAASH,EAAKT,UACrBU,EAAWd,EAAUiB,eAAeC,UAAUJ,EAAUE,GAE5D,OAAOF,CACX,C,aCjCA,IAAWK,EAHX7B,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtDP,EAAQmC,oBAAsBnC,EAAQkC,4BAAyB,GAEpDA,EA4FiBlC,EAAQkC,yBAA2BlC,EAAQkC,uBAAyB,CAAC,IApFtEE,YAPvB,SAAqBC,GACjB,IAAIC,EAAID,EAAuBE,SAAS,GACxC,KAAOD,EAAEE,OAAS,IACdF,EAAI,IAAMA,EAEd,OAAOA,CACX,EAgBAJ,EAAuBO,MAdvB,SAAeJ,GACX,MAAMK,EAAaR,EAAuBS,cAAcN,GAClDO,EAAYV,EAAuBW,aAAaR,GAChDS,EAAYZ,EAAuBa,aAAaV,GAChDW,EAAad,EAAuBe,cAAcZ,GAClDa,EAAahB,EAAuBiB,cAAcd,GACxDe,QAAQC,IAAI,CACRX,WAAYA,EACZE,UAAWA,EACXE,UAAWA,EACXE,WAAYA,EACZE,WAAYA,GAEpB,EAMAhB,EAAuBS,cAJvB,SAAuBN,GACnB,OAAkC,IAAzBA,KACL,CACR,EAMAH,EAAuBW,aAJvB,SAAsBR,GAClB,OAAkC,IAAzBA,KACL,CACR,EAKAH,EAAuBoB,yBAHvB,SAAkCjB,GAC9B,OAAwE,IAAvC,KAAzBA,EACZ,EAMAH,EAAuBa,aAJvB,SAAsBV,GAClB,OAAkC,MAAzBA,KACL,EACR,EAMAH,EAAuBe,cAJvB,SAAuBZ,GACnB,OAAkC,SAAzBA,KACL,EACR,EAMAH,EAAuBiB,cAJvB,SAAuBd,GACnB,OAAkC,WAAzBA,KACL,EACR,EAwCAH,EAAuBqB,IAlCvB,SAAalB,EAAwBK,EAAYE,EAAWU,EAA0BR,EAAWE,EAAYE,GACzG,IAAIM,EAActB,EAAuBS,cAAcN,GACnDoB,EAAavB,EAAuBW,aAAaR,GACjDqB,EAA+BxB,EAAuBoB,yBAAyBjB,GAA0B,EAAI,EAC7GsB,EAAazB,EAAuBa,aAAaV,GACjDuB,EAAc1B,EAAuBe,cAAcZ,GACnDwB,EAAc3B,EAAuBiB,cAAcd,GAmBvD,OAlBmB,IAAfK,IACAc,EAAcd,GAEA,IAAdE,IACAa,EAAmCb,GAEN,OAA7BU,IACAI,EAA+BJ,EAA2B,EAAI,IAE/C,IAAfR,IACAa,EAAab,GAEE,IAAfE,IACAY,EAAcZ,GAEC,IAAfE,IACAW,EAAcX,IAERM,GAAe,EACpBC,GAAc,EACdC,GACG,GACHC,GAAc,GACdC,GAAe,GACfC,GAAe,MAChB,CACR,EAMJ7D,EAAQmC,oBAHR,SAA6B2B,GACzB,OAAOA,CACX,C,gBClGAzD,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtDP,EAAQ+D,6BAA+B/D,EAAQgE,0BAAuB,EACtE,MAAMC,EAAU,EAAQ,KACxB,MAAMD,EACFE,YAAYxB,EAAYE,GACpBxC,KAAKsC,WAAaA,EAClBtC,KAAKwC,UAAYA,CACrB,EAEJ5C,EAAQgE,qBAAuBA,EAC/B,MAAMD,EACFG,YAAYC,EAAmBC,GAC3BhE,KAAKiE,yBAA2B,IAAIJ,EAAQK,UAAUC,IAClD,MAAM7B,EAAatC,KAAKoE,iBAAiBD,GACnCE,EAAoBrE,KAAKsE,qBAAqBH,GACpD,OAAO,IAAIP,EAAqBtB,EAAY+B,EAAkB,IAElErE,KAAKuE,mBAAqB,IAAIX,EAAqBG,EAAmB,GACtE/D,KAAKwE,0BAA4B,IAAIC,EAAaxE,OAAOyE,QAAQV,GAAqB,CAAC,GAC3F,CACAW,uBACI,OAAO3E,KAAKuE,kBAChB,CACAK,wBAAwBT,GACpB,OAAkB,OAAdA,EACOR,EAA6BkB,qBAEjC7E,KAAKiE,yBAAyBa,IAAIX,EAC7C,CAKAC,iBAAiBW,GACb,OAAO/E,KAAKwE,0BAA0BQ,MAAMD,IAAU,CAC1D,CACAT,qBAAqBH,GACjB,MAAMc,EAAId,EAAUa,MAAMrB,EAA6BuB,4BACvD,IAAKD,EACD,OAAO,EAEX,OAAQA,EAAE,IACN,IAAK,UACD,OAAO,EACX,IAAK,SACD,OAAO,EACX,IAAK,QACD,OAAO,EACX,IAAK,gBACD,OAAO,EAEf,MAAM,IAAIE,MAAM,4CACpB,EAEJvF,EAAQ+D,6BAA+BA,EACvCA,EAA6BkB,qBAAuB,IAAIjB,EAAqB,EAAG,GAChFD,EAA6BuB,2BAA6B,4CAC1D,MAAMT,EACFX,YAAYsB,GACR,GAAsB,IAAlBA,EAAOhD,OACPpC,KAAKoF,OAAS,KACdpF,KAAKqF,aAAe,SAEnB,CACDrF,KAAKoF,OAAS,IAAIE,IAAIF,GAEtB,MAAMG,EAAgBH,EAAOI,KAAI,EAAErB,EAAWhE,KAAW0D,EAAQ4B,uBAAuBtB,KACxFoB,EAAcG,OACdH,EAAcjE,UACdtB,KAAKqF,aAAe,IAAIM,OAAO,MAAMJ,EAAcK,KAAK,kBAAmB,GAC/E,CACJ,CACAZ,MAAMD,GACF,IAAK/E,KAAKqF,aACN,OAEJ,MAAMJ,EAAIF,EAAMC,MAAMhF,KAAKqF,cAC3B,OAAKJ,EAIEjF,KAAKoF,OAAON,IAAIG,EAAE,SAJzB,CAKJ,E,gBClFJhF,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtDP,EAAQiG,WAAajG,EAAQkG,yBAA2BlG,EAAQgC,eAAiBhC,EAAQmG,qBAAuBnG,EAAQoG,QAAUpG,EAAQqG,mBAAgB,EAC1J,MAAMC,EAAU,EAAQ,KAClBC,EAA2B,EAAQ,IACnCC,EAAY,EAAQ,KACpBC,EAAY,EAAQ,IACpBC,EAAS,EAAQ,KACjBC,EAAU,EAAQ,KAClB1C,EAAU,EAAQ,KAClB2C,EAAiC,EAAQ,KACzCC,EAAmB,EAAQ,IAKjC,SAASC,EAAkBC,EAAQC,EAAUC,EAAMC,EAAmBC,GAClE,MAAMC,EAAWZ,EAAUa,eAAeL,EAAUM,GAC9CC,EAASb,EAAOc,YAAYC,kBAAkBR,EAAMC,EAAmBC,EAAQO,YACrF,IAAK,MAAMC,KAAWP,EAClBL,EAAOvF,KAAK,CACRoG,cAAeZ,EACfW,QAASA,EAAQA,QACjBJ,OAAQA,EACRJ,QAASA,EACTU,SAAUF,EAAQE,UAG9B,CACA,SAASP,EAAYQ,EAAYC,GAC7B,GAAIA,EAAOvF,OAASsF,EAAWtF,OAC3B,OAAO,EAEX,IAAIwF,EAAY,EAChB,OAAOF,EAAWG,OAAMC,IACpB,IAAK,IAAIpG,EAAIkG,EAAWlG,EAAIiG,EAAOvF,OAAQV,IACvC,GAAIqG,EAAkBJ,EAAOjG,GAAIoG,GAE7B,OADAF,EAAYlG,EAAI,GACT,EAGf,OAAO,CAAK,GAEpB,CACA,SAASqG,EAAkBC,EAAe7D,GACtC,IAAK6D,EACD,OAAO,EAEX,GAAIA,IAAkB7D,EAClB,OAAO,EAEX,MAAM8D,EAAM9D,EAAU/B,OACtB,OAAO4F,EAAc5F,OAAS6F,GAAOD,EAAcE,OAAO,EAAGD,KAAS9D,GAAoC,MAAvB6D,EAAcC,EACrG,CAtCArI,EAAQqG,cAHR,SAAuB9B,EAAW4C,EAASoB,EAAiBnE,EAAmBoE,EAAYC,EAA0BC,EAAmBC,GACpI,OAAO,IAAIvC,EAAQ7B,EAAW4C,EAASoB,EAAiBnE,EAAmBoE,EAAYC,EAA0BC,EAAmBC,EACxI,EAwCA,MAAMvC,EACFlC,YAAY0E,EAAgBzB,EAASoB,EAAiBnE,EAAmBoE,EAAYC,EAA0BC,EAAmBG,GAa9H,GAZAzI,KAAKwI,eAAiBA,EACtBxI,KAAKqI,yBAA2BA,EAChCrI,KAAKyI,SAAWA,EAChBzI,KAAK0I,8BAAgC,IAAIlC,EAA+B7C,6BAA6BwE,EAAiBnE,GACtHhE,KAAK2I,SAAW,EAChB3I,KAAK4I,YAAc,EACnB5I,KAAK6I,aAAe,CAAC,MACrB7I,KAAK8I,kBAAoB,CAAC,EAC1B9I,KAAK+I,mBAAqBT,EAC1BtI,KAAKgJ,SAAWC,EAAYlC,EAAS,MACrC/G,KAAKkJ,YAAc,KACnBlJ,KAAKmJ,mBAAqB,GACtBf,EACA,IAAK,MAAMxB,KAAY3G,OAAOmJ,KAAKhB,GAAa,CAC5C,MAAMpB,EAAWZ,EAAUa,eAAeL,EAAUM,GACpD,IAAK,MAAMK,KAAWP,EAClBhH,KAAKmJ,mBAAmB/H,KAAK,CACzBmG,QAASA,EAAQA,QACjB8B,KAAMjB,EAAWxB,IAG7B,CAER,CACI0C,oBAAkB,OAAOtJ,KAAK+I,kBAAoB,CACtDQ,UACI,IAAK,MAAM1C,KAAQ7G,KAAK6I,aAChBhC,GACAA,EAAK0C,SAGjB,CACAC,kBAAkBC,GACd,OAAOzJ,KAAKyI,SAASe,kBAAkBC,EAC3C,CACAC,iBAAiBD,GACb,OAAOzJ,KAAKyI,SAASiB,iBAAiBD,EAC1C,CACAE,oBAAoB5E,GAChB,OAAO/E,KAAK0I,8BAA8B9D,wBAAwBG,EACtE,CACA6E,qBACI,MAWMjD,EAAS,GACTxC,EAAYnE,KAAKwI,eACjBzB,EAZM,CAAC5C,GACDA,IAAcnE,KAAKwI,eACZxI,KAAKgJ,SAEThJ,KAAK6J,mBAAmB1F,GAQvBmE,CAAyBnE,GACzC,GAAI4C,EAAS,CAET,MAAM+C,EAAgB/C,EAAQgD,WAC9B,GAAID,EACA,IAAK,IAAIE,KAAcF,EACnBpD,EAAkBC,EAAQqD,EAAYF,EAAcE,GAAahK,KAAM+G,GAI/E,MAAMkD,EAAsBjK,KAAK+I,mBAAmBgB,WAAW5F,GAC3D8F,GACAA,EAAoBC,SAASC,IACzB,MAAMC,EAAmBpK,KAAK6J,mBAAmBM,GACjD,GAAIC,EAAkB,CAClB,MAAMxD,EAAWwD,EAAiBC,kBAC9BzD,GACAF,EAAkBC,EAAQC,EAAUwD,EAAkBpK,KAAMoK,EAEpE,IAGZ,CAEA,OADAzD,EAAOjB,MAAK,CAAC4E,EAAIC,IAAOD,EAAG7C,SAAW8C,EAAG9C,WAClCd,CACX,CACA6D,gBACI,GAAyB,OAArBxK,KAAKkJ,cACLlJ,KAAKkJ,YAAclJ,KAAK4J,qBACpB1D,EAAQ7F,WAAWC,aAAeN,KAAKkJ,YAAY9G,OAAS,GAAG,CAC/DY,QAAQC,IAAI,WAAWjD,KAAKwI,qDAC5B,IAAK,MAAMiC,KAAazK,KAAKkJ,YACzBlG,QAAQC,IAAI,OAAOwH,EAAUjD,gBAErC,CAEJ,OAAOxH,KAAKkJ,WAChB,CACAwB,aAAa/K,GACT,MAAMgL,IAAO3K,KAAK4I,YACZjC,EAAShH,EAAQ2G,EAAOsE,iBAAiBD,IAE/C,OADA3K,KAAK6I,aAAa8B,GAAMhE,EACjBA,CACX,CACAkE,QAAQ1D,GACJ,OAAOnH,KAAK6I,aAAavC,EAAOwE,eAAe3D,GACnD,CACA0C,mBAAmB1F,EAAWmD,GAC1B,GAAItH,KAAK8I,kBAAkB3E,GACvB,OAAOnE,KAAK8I,kBAAkB3E,GAE7B,GAAInE,KAAK+I,mBAAoB,CAC9B,MAAMgC,EAAqB/K,KAAK+I,mBAAmBiC,OAAO7G,GAC1D,GAAI4G,EAGA,OADA/K,KAAK8I,kBAAkB3E,GAAa8E,EAAY8B,EAAoBzD,GAAcA,EAAW2D,OACtFjL,KAAK8I,kBAAkB3E,EAEtC,CAEJ,CACA+G,aAAaC,EAAUC,EAAWC,EAAY,GAC1C,MAAMnJ,EAAIlC,KAAKsL,UAAUH,EAAUC,GAAW,EAAOC,GACrD,MAAO,CACHE,OAAQrJ,EAAEsJ,WAAWC,UAAUvJ,EAAEwJ,UAAWxJ,EAAEyJ,YAC9CD,UAAWxJ,EAAEwJ,UACbE,aAAc1J,EAAE0J,aAExB,CACAC,cAAcV,EAAUC,EAAWC,EAAY,GAC3C,MAAMnJ,EAAIlC,KAAKsL,UAAUH,EAAUC,GAAW,EAAMC,GACpD,MAAO,CACHE,OAAQrJ,EAAEsJ,WAAWM,gBAAgB5J,EAAEwJ,UAAWxJ,EAAEyJ,YACpDD,UAAWxJ,EAAEwJ,UACbE,aAAc1J,EAAE0J,aAExB,CACAN,UAAUH,EAAUC,EAAWW,EAAkBV,GAM7C,IAAIW,EACJ,IANsB,IAAlBhM,KAAK2I,UACL3I,KAAK2I,QAAUrC,EAAOc,YAAYC,kBAAkBrH,KAAKgJ,SAAS1B,WAAW2E,MAAOjM,KAAMA,KAAKgJ,SAAS1B,YAExGtH,KAAKwK,iBAGJY,GAAaA,IAAcxJ,EAAesK,KAgB3CF,GAAc,EACdZ,EAAUe,YAjBuC,CACjDH,GAAc,EACd,MAAMI,EAAqBpM,KAAK0I,8BAA8B/D,uBACxD0H,EAAerM,KAAKsJ,cAAcgD,cAClCC,EAAkBpG,EAAyBrE,uBAAuBqB,IAAI,EAAGiJ,EAAmB9J,WAAY8J,EAAmB5J,UAAW,KAAM6J,EAAa3J,UAAW2J,EAAaG,aAAcH,EAAaI,cAC5MC,EAAgB1M,KAAK6K,QAAQ7K,KAAK2I,SAASgE,QAAQ,KAAM,MAC/D,IAAIC,EAEAA,EADAF,EACY3G,EAAqB8G,6BAA6BH,EAAeH,EAAiBvM,MAGlF+F,EAAqB+G,WAAW,UAAWP,GAE3DnB,EAAY,IAAIxJ,EAAe,KAAM5B,KAAK2I,SAAU,GAAI,GAAG,EAAO,KAAMiE,EAAWA,EACvF,CAKAzB,GAAsB,KACtB,MAAM4B,EAAe/M,KAAK0J,iBAAiByB,GACrCQ,EAAaoB,EAAaC,QAAQ5K,OAClCoJ,EAAa,IAAI3F,EAAWkG,EAAkBZ,EAAUnL,KAAKmJ,mBAAoBnJ,KAAKqI,0BACtFnG,EAAIuE,EAAiBwG,gBAAgBjN,KAAM+M,EAAcf,EAAa,EAAGZ,EAAWI,GAAY,EAAMH,GAE5G,OADAhF,EAAU6G,kBAAkBH,GACrB,CACHpB,WAAYA,EACZH,WAAYA,EACZE,UAAWxJ,EAAEX,MACbqK,aAAc1J,EAAE0J,aAExB,EAGJ,SAAS3C,EAAYlC,EAASoG,GAS1B,OARApG,EAAUlD,EAAQuJ,MAAMrG,IAChBO,WAAaP,EAAQO,YAAc,CAAC,EAC5CP,EAAQO,WAAW2E,MAAQ,CACvBoB,wBAAyBtG,EAAQsG,wBACjCC,SAAUvG,EAAQuG,SAClBC,KAAMxG,EAAQ5C,WAElB4C,EAAQO,WAAW2D,MAAQkC,GAAQpG,EAAQO,WAAW2E,MAC/ClF,CACX,CAXAnH,EAAQoG,QAAUA,EAYlB,MAAMD,EASFjC,YAAY3C,EAAQqM,EAAWC,GAC3BzN,KAAKmB,OAASA,EACdnB,KAAKwN,UAAYA,EACjBxN,KAAKyN,gBAAkBA,CAC3B,CACAC,qBAAqBC,EAAgBC,GACjC,IAAIC,EAAUF,EACVG,EAAaH,GAAgBH,WAAa,KAC9C,IAAK,MAAM7L,KAASiM,EAChBE,EAAavH,EAAQwH,WAAW3M,KAAK0M,EAAYnM,EAAMmM,YACvDD,EAAU,IAAI9H,EAAqB8H,EAASC,EAAYnM,EAAMM,wBAElE,OAAO4L,CACX,CACAH,kBAAkBvJ,EAAWsJ,GACzB,OAAO,IAAI1H,EAAqB,KAAM,IAAIQ,EAAQwH,WAAW,KAAM5J,GAAYsJ,EACnF,CACAC,oCAAoCvJ,EAAWsJ,EAAiB1G,GAC5D,MAAMiH,EAAkBjH,EAAQ4C,oBAAoBxF,GAC9CqJ,EAAY,IAAIjH,EAAQwH,WAAW,KAAM5J,GACzC8J,EAAYlH,EAAQuC,cAAc4E,WAAWV,GAC7CW,EAA0BpI,EAAqBqI,gBAAgBX,EAAiBO,EAAiBC,GACvG,OAAO,IAAIlI,EAAqB,KAAMyH,EAAWW,EACrD,CACIhK,gBAAc,OAAOnE,KAAKwN,UAAUrJ,SAAW,CACnDhC,WACI,OAAOnC,KAAKqO,gBAAgBzI,KAAK,IACrC,CACA0I,OAAOC,GACH,OAAOxI,EAAqBuI,OAAOtO,KAAMuO,EAC7C,CACAb,cAAcc,EAAGC,GACb,OAAG,CACC,GAAID,IAAMC,EACN,OAAO,EAEX,IAAKD,IAAMC,EAEP,OAAO,EAEX,IAAKD,IAAMC,EAEP,OAAO,EAEX,GAAID,EAAErK,YAAcsK,EAAEtK,WAAaqK,EAAEf,kBAAoBgB,EAAEhB,gBACvD,OAAO,EAGXe,EAAIA,EAAErN,OACNsN,EAAIA,EAAEtN,MACV,CACJ,CACAuM,uBAAuBgB,EAAyBC,EAAsBC,GAClE,IAAIlM,GAAa,EACbE,EAAa,EACbE,EAAa,EAMjB,OALwB,OAApB8L,IACAlM,EAAYkM,EAAgBlM,UAC5BE,EAAagM,EAAgBpC,aAC7B1J,EAAa8L,EAAgBnC,cAE1BtG,EAAyBrE,uBAAuBqB,IAAIuL,EAAyBC,EAAqBrM,WAAYqM,EAAqBnM,UAAW,KAAME,EAAWE,EAAYE,EACtL,CACA+L,eAAerB,EAAWzG,GACtB,GAAkB,OAAdyG,EACA,OAAOxN,KAEX,IAAgC,IAA5BwN,EAAUsB,QAAQ,KAElB,OAAO/I,EAAqBgJ,gBAAgB/O,KAAMwN,EAAWzG,GAEjE,MAAMY,EAAS6F,EAAUwB,MAAM,MAC/B,IAAIrI,EAAS3G,KACb,IAAK,MAAM+E,KAAS4C,EAChBhB,EAASZ,EAAqBgJ,gBAAgBpI,EAAQ5B,EAAOgC,GAEjE,OAAOJ,CACX,CACA+G,uBAAuBuB,EAAQ9K,EAAW4C,GACtC,MAAMmI,EAAcnI,EAAQ4C,oBAAoBxF,GAC1CgL,EAAUF,EAAOzB,UAAUpM,KAAK+C,GAChCiL,EAAwBrI,EAAQuC,cAAc4E,WAAWiB,GACzDE,EAAWtJ,EAAqBqI,gBAAgBa,EAAOxB,gBAAiByB,EAAaE,GAC3F,OAAO,IAAIrJ,EAAqBkJ,EAAQE,EAASE,EACrD,CACAhB,gBACI,OAAOrO,KAAKwN,UAAU8B,aAC1B,CACAC,sBAAsBpC,GAClB,MAAMxG,EAAS,GACf,IAAI6I,EAAOxP,KACX,KAAOwP,GAAQA,IAASrC,GACpBxG,EAAOvF,KAAK,CACRa,uBAAwBuN,EAAK/B,gBAC7BK,WAAY0B,EAAKhC,UAAU+B,sBAAsBC,EAAKrO,QAAQqM,WAAa,QAE/EgC,EAAOA,EAAKrO,OAEhB,OAAOqO,IAASrC,EAAOxG,EAAOrF,eAAYmO,CAC9C,EAEJ7P,EAAQmG,qBAAuBA,EAI/B,MAAMnE,EAYFkC,YAIA3C,EAIAgG,EAAQuI,EAAUC,EAIlBC,EAIAC,EAIAC,EAKAlC,GACI5N,KAAKmB,OAASA,EACdnB,KAAKmH,OAASA,EACdnH,KAAK4P,qBAAuBA,EAC5B5P,KAAK6P,QAAUA,EACf7P,KAAK8P,eAAiBA,EACtB9P,KAAK4N,sBAAwBA,EAC7B5N,KAAK+P,wBAAqBN,EAC1BzP,KAAKkB,MAAQlB,KAAKmB,OAASnB,KAAKmB,OAAOD,MAAQ,EAAI,EACnDlB,KAAKgQ,UAAYN,EACjB1P,KAAKiQ,WAAaN,CACtB,CACArB,OAAOC,GACH,OAAc,OAAVA,GAGG3M,EAAesO,QAAQlQ,KAAMuO,EACxC,CACAb,eAAec,EAAGC,GACd,OAAID,IAAMC,KAGLzO,KAAKmQ,kBAAkB3B,EAAGC,IAGxB1I,EAAqBuI,OAAOE,EAAEZ,sBAAuBa,EAAEb,sBAClE,CAIAF,yBAAyBc,EAAGC,GACxB,OAAG,CACC,GAAID,IAAMC,EACN,OAAO,EAEX,IAAKD,IAAMC,EAEP,OAAO,EAEX,IAAKD,IAAMC,EAEP,OAAO,EAEX,GAAID,EAAEtN,QAAUuN,EAAEvN,OACdsN,EAAErH,SAAWsH,EAAEtH,QACfqH,EAAEqB,UAAYpB,EAAEoB,QAChB,OAAO,EAGXrB,EAAIA,EAAErN,OACNsN,EAAIA,EAAEtN,MACV,CACJ,CACAiM,QACI,OAAOpN,IACX,CACA0N,cAAc0C,GACV,KAAOA,GACHA,EAAGJ,WAAa,EAChBI,EAAGH,YAAc,EACjBG,EAAKA,EAAGjP,MAEhB,CACAgL,QACIvK,EAAeyO,OAAOrQ,KAC1B,CACAsQ,MACI,OAAOtQ,KAAKmB,MAChB,CACAoP,UACI,OAAIvQ,KAAKmB,OACEnB,KAAKmB,OAETnB,IACX,CACAoB,KAAK+F,EAAQuI,EAAUC,EAAWC,EAAsBC,EAASC,EAAgBlC,GAC7E,OAAO,IAAIhM,EAAe5B,KAAMmH,EAAQuI,EAAUC,EAAWC,EAAsBC,EAASC,EAAgBlC,EAChH,CACA4C,cACI,OAAOxQ,KAAKgQ,SAChB,CACAS,eACI,OAAOzQ,KAAKiQ,UAChB,CACApF,QAAQ9D,GACJ,OAAOA,EAAQ8D,QAAQ7K,KAAKmH,OAChC,CACAhF,WACI,MAAMD,EAAI,GAEV,OADAlC,KAAK0Q,aAAaxO,EAAG,GACd,IAAMA,EAAE0D,KAAK,KAAO,GAC/B,CACA8K,aAAaC,EAAKC,GAKd,OAJI5Q,KAAKmB,SACLyP,EAAW5Q,KAAKmB,OAAOuP,aAAaC,EAAKC,IAE7CD,EAAIC,KAAc,IAAI5Q,KAAKmH,WAAWnH,KAAK8P,gBAAgB3N,eAAenC,KAAK4N,uBAAuBzL,cAC/FyO,CACX,CACAC,0BAA0BC,GACtB,OAAI9Q,KAAK4N,wBAA0BkD,EACxB9Q,KAEJA,KAAKmB,OAAOC,KAAKpB,KAAKmH,OAAQnH,KAAKgQ,UAAWhQ,KAAKiQ,WAAYjQ,KAAK4P,qBAAsB5P,KAAK6P,QAAS7P,KAAK8P,eAAgBgB,EACxI,CACAC,YAAYlB,GACR,OAAI7P,KAAK6P,UAAYA,EACV7P,KAEJ,IAAI4B,EAAe5B,KAAKmB,OAAQnB,KAAKmH,OAAQnH,KAAKgQ,UAAWhQ,KAAKiQ,WAAYjQ,KAAK4P,qBAAsBC,EAAS7P,KAAK8P,eAAgB9P,KAAK4N,sBACvJ,CAEAoD,cAAczC,GACV,IAAI6B,EAAKpQ,KACT,KAAOoQ,GAAMA,EAAGJ,YAAczB,EAAMyB,WAAW,CAC3C,GAAII,EAAGjJ,SAAWoH,EAAMpH,OACpB,OAAO,EAEXiJ,EAAKA,EAAGjP,MACZ,CACA,OAAO,CACX,CACAE,oBACI,MAAO,CACH8F,OAAQb,EAAOwE,eAAe9K,KAAKmH,QACnCyI,qBAAsB5P,KAAK4P,qBAC3BC,QAAS7P,KAAK6P,QACdC,eAAgB9P,KAAK8P,gBAAgBP,sBAAsBvP,KAAKmB,QAAQ2O,gBAAkB,OAAS,GACnGlC,sBAAuB5N,KAAK4N,uBAAuB2B,sBAAsBvP,KAAK8P,iBAAmB,GAEzG,CACApC,iBAAiB8B,EAAM7N,GACnB,MAAMgM,EAAiB5H,EAAqBkL,cAAczB,GAAMM,gBAAkB,KAAMnO,EAAMmO,gBAC9F,OAAO,IAAIlO,EAAe4N,EAAMlJ,EAAOsE,iBAAiBjJ,EAAMwF,QAASxF,EAAM+N,WAAa,EAAG/N,EAAMgO,YAAc,EAAGhO,EAAMiO,qBAAsBjO,EAAMkO,QAASlC,EAAgB5H,EAAqBkL,cAActD,EAAgBhM,EAAMiM,uBAC5O,EAEJhO,EAAQgC,eAAiBA,EAEzBA,EAAesK,KAAO,IAAItK,EAAe,KAAM,EAAG,EAAG,GAAG,EAAO,KAAM,KAAM,MAiC3EhC,EAAQkG,yBAhCR,MACIhC,YAAYoN,EAAuBC,GAC/BnR,KAAKoR,UAAW,EAChBpR,KAAKkR,sBAAwBA,EAAsBG,SAASzK,GACvC,MAAbA,GACA5G,KAAKoR,UAAW,EACT,IAEJhL,EAAUa,eAAeL,EAAUM,GAAa1B,KAAKP,GAAMA,EAAEsC,YAExEvH,KAAKmR,wBAA0BA,EAAwBE,SAASzK,GAAaR,EAAUa,eAAeL,EAAUM,GAAa1B,KAAKP,GAAMA,EAAEsC,WAC9I,CACI+J,oBACA,OAAOtR,KAAKoR,UAAoD,IAAxCpR,KAAKmR,wBAAwB/O,MACzD,CACImP,mBACA,OAA6C,IAAtCvR,KAAKkR,sBAAsB9O,SAAiBpC,KAAKoR,QAC5D,CACApM,MAAM2C,GACF,IAAK,MAAM6J,KAAYxR,KAAKmR,wBACxB,GAAIK,EAAS7J,GACT,OAAO,EAGf,IAAK,MAAM8J,KAAYzR,KAAKkR,sBACxB,GAAIO,EAAS9J,GACT,OAAO,EAGf,OAAO3H,KAAKoR,QAChB,GAGJ,MAAMvL,EACF/B,YAAYiI,EAAkBZ,EAAUuG,EAAoBrJ,GACxDrI,KAAKqI,yBAA2BA,EAChCrI,KAAK2R,kBAAoB5F,EACzB/L,KAAK4R,oBAAsBF,EACvBxL,EAAQ7F,WAAWC,YACnBN,KAAK6R,UAAY1G,EAGjBnL,KAAK6R,UAAY,KAErB7R,KAAK8R,QAAU,GACf9R,KAAK+R,cAAgB,GACrB/R,KAAKgS,mBAAqB,CAC9B,CACAC,QAAQ1Q,EAAO2Q,GACXlS,KAAKmS,kBAAkB5Q,EAAMqM,sBAAuBsE,EACxD,CACAC,kBAAkBC,EAAYF,GAC1B,GAAIlS,KAAKgS,oBAAsBE,EAC3B,OAEJ,GAAIlS,KAAK2R,kBAAmB,CACxB,IAAItC,EAAW+C,GAAY3E,iBAAmB,EAC1CvK,GAA2B,EAI/B,GAHIlD,KAAKqI,0BAA0BiJ,gBAC/BpO,GAA2B,GAE3BlD,KAAK4R,oBAAoBxP,OAAS,GAAMpC,KAAKqI,2BAA6BrI,KAAKqI,yBAAyBiJ,gBAAkBtR,KAAKqI,yBAAyBkJ,aAAe,CAEvK,MAAM5J,EAASyK,GAAY/D,iBAAmB,GAC9C,IAAK,MAAM7L,KAAaxC,KAAK4R,oBACrBpP,EAAU+E,QAAQI,KAClB0H,EAAWlJ,EAAyBrE,uBAAuBqB,IAAIkM,EAAU,EAAGlJ,EAAyBpE,oBAAoBS,EAAU6G,MAAO,MAAO,EAAgB,EAAG,IAGxKrJ,KAAKqI,2BACLnF,EAA2BlD,KAAKqI,yBAAyBrD,MAAM2C,GAEvE,CAIA,GAHIzE,IACAmM,EAAWlJ,EAAyBrE,uBAAuBqB,IAAIkM,EAAU,EAAG,EAAgBnM,GAA2B,EAAgB,EAAG,IAE1IlD,KAAK+R,cAAc3P,OAAS,GAAKpC,KAAK+R,cAAc/R,KAAK+R,cAAc3P,OAAS,KAAOiN,EAGvF,YADArP,KAAKgS,mBAAqBE,GAG9B,GAAIhM,EAAQ7F,WAAWC,YAAa,CAChC,MAAMqH,EAASyK,GAAY/D,iBAAmB,GAC9CrL,QAAQC,IAAI,aAAejD,KAAK6R,UAAUQ,UAAUrS,KAAKgS,mBAAoBE,GAAUI,QAAQ,MAAO,OAAS,KAC/G,IAAK,IAAIC,EAAI,EAAGA,EAAI5K,EAAOvF,OAAQmQ,IAC/BvP,QAAQC,IAAI,WAAa0E,EAAO4K,GAExC,CAIA,OAHAvS,KAAK+R,cAAc3Q,KAAKpB,KAAKgS,oBAC7BhS,KAAK+R,cAAc3Q,KAAKiO,QACxBrP,KAAKgS,mBAAqBE,EAE9B,CACA,MAAMvK,EAASyK,GAAY/D,iBAAmB,GAC9C,GAAInI,EAAQ7F,WAAWC,YAAa,CAChC0C,QAAQC,IAAI,aAAejD,KAAK6R,UAAUQ,UAAUrS,KAAKgS,mBAAoBE,GAAUI,QAAQ,MAAO,OAAS,KAC/G,IAAK,IAAIC,EAAI,EAAGA,EAAI5K,EAAOvF,OAAQmQ,IAC/BvP,QAAQC,IAAI,WAAa0E,EAAO4K,GAExC,CACAvS,KAAK8R,QAAQ1Q,KAAK,CACdoR,WAAYxS,KAAKgS,mBACjBE,SAAUA,EAEVvK,OAAQA,IAEZ3H,KAAKgS,mBAAqBE,CAC9B,CACAzG,UAAUlK,EAAOoK,GAUb,OATI3L,KAAK8R,QAAQ1P,OAAS,GAAKpC,KAAK8R,QAAQ9R,KAAK8R,QAAQ1P,OAAS,GAAGoQ,aAAe7G,EAAa,GAE7F3L,KAAK8R,QAAQxB,MAEW,IAAxBtQ,KAAK8R,QAAQ1P,SACbpC,KAAKgS,oBAAsB,EAC3BhS,KAAKiS,QAAQ1Q,EAAOoK,GACpB3L,KAAK8R,QAAQ9R,KAAK8R,QAAQ1P,OAAS,GAAGoQ,WAAa,GAEhDxS,KAAK8R,OAChB,CACAhG,gBAAgBvK,EAAOoK,GACf3L,KAAK+R,cAAc3P,OAAS,GAAKpC,KAAK+R,cAAc/R,KAAK+R,cAAc3P,OAAS,KAAOuJ,EAAa,IAEpG3L,KAAK+R,cAAczB,MACnBtQ,KAAK+R,cAAczB,OAEW,IAA9BtQ,KAAK+R,cAAc3P,SACnBpC,KAAKgS,oBAAsB,EAC3BhS,KAAKiS,QAAQ1Q,EAAOoK,GACpB3L,KAAK+R,cAAc/R,KAAK+R,cAAc3P,OAAS,GAAK,GAExD,MAAMuE,EAAS,IAAI8L,YAAYzS,KAAK+R,cAAc3P,QAClD,IAAK,IAAIV,EAAI,EAAGuG,EAAMjI,KAAK+R,cAAc3P,OAAQV,EAAIuG,EAAKvG,IACtDiF,EAAOjF,GAAK1B,KAAK+R,cAAcrQ,GAEnC,OAAOiF,CACX,EAEJ/G,EAAQiG,WAAaA,C,gBC3pBrB5F,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtDP,EAAQ8S,aAAe9S,EAAQ+S,4BAA8B/S,EAAQgT,kBAAoBhT,EAAQiT,kBAAoBjT,EAAQkT,cAAgBlT,EAAQmT,cAAgBnT,EAAQoT,yBAA2BpT,EAAQqT,2BAA6BrT,EAAQsT,gCAAkCtT,EAAQuT,2BAAwB,EACvT,MAAMtP,EAAU,EAAQ,KAIxB,MAAMsP,EACFrP,YAAYK,GACRnE,KAAKmE,UAAYA,CACrB,CACAiP,QACI,OAAOpT,KAAKmE,SAChB,EAEJvE,EAAQuT,sBAAwBA,EAIhC,MAAMD,EACFpP,YAAYK,EAAWkP,GACnBrT,KAAKmE,UAAYA,EACjBnE,KAAKqT,SAAWA,CACpB,CACAD,QACI,MAAO,GAAGpT,KAAKmE,aAAanE,KAAKqT,UACrC,EAEJzT,EAAQsT,gCAAkCA,EAC1C,MAAMD,EACFnP,cACI9D,KAAKsT,YAAc,GACnBtT,KAAKuT,mBAAqB,IAAIC,IAC9BxT,KAAKyT,YAAc,IAAID,GAC3B,CACIE,iBACA,OAAO1T,KAAKsT,WAChB,CACAK,IAAIC,GACA,MAAMC,EAAMD,EAAUR,QAClBpT,KAAKuT,mBAAmBO,IAAID,KAGhC7T,KAAKuT,mBAAmBI,IAAIE,GAC5B7T,KAAKsT,YAAYlS,KAAKwS,GAC1B,EA4CJ,SAASG,EAA6BH,EAAWI,EAAsBC,EAAMtN,GACzE,MAAMuN,EAAcD,EAAKjJ,OAAO4I,EAAUzP,WAC1C,IAAK+P,EAAa,CACd,GAAIN,EAAUzP,YAAc6P,EACxB,MAAM,IAAI7O,MAAM,4BAA4B6O,MAEhD,MACJ,CACA,MAAMG,EAAcF,EAAKjJ,OAAOgJ,GAC5BJ,aAAqBT,EACrBiB,EAAwC,CAAED,cAAaD,eAAevN,GAGtE0N,EAAkDT,EAAUP,SAAU,CAAEc,cAAaD,cAAa5M,WAAY4M,EAAY5M,YAAcX,GAE5I,MAAMoD,EAAakK,EAAKlK,WAAW6J,EAAUzP,WAC7C,GAAI4F,EACA,IAAK,MAAMU,KAAaV,EACpBpD,EAAOgN,IAAI,IAAIR,EAAsB1I,GAGjD,CACA,SAAS4J,EAAkDhB,EAAUiB,EAAS3N,GACtE2N,EAAQhN,YAAcgN,EAAQhN,WAAW+L,IAEzCkB,EAAiC,CADpBD,EAAQhN,WAAW+L,IACSiB,EAAS3N,EAE1D,CACA,SAASyN,EAAwCE,EAAS3N,GAClD2N,EAAQJ,YAAY5G,UAAYkH,MAAMC,QAAQH,EAAQJ,YAAY5G,WAClEiH,EAAiCD,EAAQJ,YAAY5G,SAAU,IAAKgH,EAAShN,WAAYgN,EAAQJ,YAAY5M,YAAcX,GAE3H2N,EAAQJ,YAAYnK,YACpBwK,EAAiCtU,OAAOmF,OAAOkP,EAAQJ,YAAYnK,YAAa,IAAKuK,EAAShN,WAAYgN,EAAQJ,YAAY5M,YAAcX,EAEpJ,CACA,SAAS4N,EAAiCG,EAAOJ,EAAS3N,GACtD,IAAK,MAAME,KAAQ6N,EAAO,CACtB,GAAI/N,EAAO8M,YAAYK,IAAIjN,GACvB,SAEJF,EAAO8M,YAAYE,IAAI9M,GACvB,MAAM8N,EAAoB9N,EAAKS,WAAazD,EAAQ+Q,aAAa,CAAC,EAAGN,EAAQhN,WAAYT,EAAKS,YAAcgN,EAAQhN,WAChHkN,MAAMC,QAAQ5N,EAAKyG,WACnBiH,EAAiC1N,EAAKyG,SAAU,IAAKgH,EAAShN,WAAYqN,GAAqBhO,GAEnG,MAAMkO,EAAUhO,EAAKgO,QACrB,IAAKA,EACD,SAEJ,MAAMjB,EAAYlB,EAAamC,GAC/B,OAAQjB,EAAUkB,MACd,KAAK,EACDV,EAAwC,IAAKE,EAASJ,YAAaI,EAAQH,aAAexN,GAC1F,MACJ,KAAK,EACDyN,EAAwCE,EAAS3N,GACjD,MACJ,KAAK,EACD0N,EAAkDT,EAAUP,SAAU,IAAKiB,EAAShN,WAAYqN,GAAqBhO,GACrH,MACJ,KAAK,EACL,KAAK,EACD,MAAMuN,EAAcN,EAAUzP,YAAcmQ,EAAQJ,YAAY/P,UAC1DmQ,EAAQJ,YACRN,EAAUzP,YAAcmQ,EAAQH,YAAYhQ,UACxCmQ,EAAQH,iBACR1E,EACV,GAAIyE,EAAa,CACb,MAAMa,EAAa,CAAEZ,YAAaG,EAAQH,YAAaD,cAAa5M,WAAYqN,GACzD,IAAnBf,EAAUkB,KACVT,EAAkDT,EAAUP,SAAU0B,EAAYpO,GAGlFyN,EAAwCW,EAAYpO,EAE5D,MAE2B,IAAnBiN,EAAUkB,KACVnO,EAAOgN,IAAI,IAAIT,EAAgCU,EAAUzP,UAAWyP,EAAUP,WAG9E1M,EAAOgN,IAAI,IAAIR,EAAsBS,EAAUzP,YAKnE,CACJ,CAlIAvE,EAAQqT,2BAA6BA,EAyCrCrT,EAAQoT,yBAxCR,MACIlP,YAAYmQ,EAAMe,GACdhV,KAAKiU,KAAOA,EACZjU,KAAKgV,iBAAmBA,EACxBhV,KAAKiV,sBAAwB,IAAIzB,IACjCxT,KAAKkV,yBAA2B,IAAI1B,IACpCxT,KAAKiV,sBAAsBtB,IAAI3T,KAAKgV,kBACpChV,KAAKmV,EAAI,CAAC,IAAIhC,EAAsBnT,KAAKgV,kBAC7C,CACAI,eACI,MAAMC,EAAIrV,KAAKmV,EACfnV,KAAKmV,EAAI,GACT,MAAMG,EAAO,IAAIrC,EACjB,IAAK,MAAMsC,KAAOF,EACdtB,EAA6BwB,EAAKvV,KAAKgV,iBAAkBhV,KAAKiU,KAAMqB,GAExE,IAAK,MAAMC,KAAOD,EAAK5B,WACnB,GAAI6B,aAAepC,EAAuB,CACtC,GAAInT,KAAKiV,sBAAsBnB,IAAIyB,EAAIpR,WAEnC,SAEJnE,KAAKiV,sBAAsBtB,IAAI4B,EAAIpR,WACnCnE,KAAKmV,EAAE/T,KAAKmU,EAChB,KACK,CACD,GAAIvV,KAAKiV,sBAAsBnB,IAAIyB,EAAIpR,WAEnC,SAEJ,GAAInE,KAAKkV,yBAAyBpB,IAAIyB,EAAInC,SAEtC,SAEJpT,KAAKkV,yBAAyBvB,IAAI4B,EAAInC,SACtCpT,KAAKmV,EAAE/T,KAAKmU,EAChB,CAER,GA4FJ,MAAMxC,EACFjP,cACI9D,KAAK8U,KAAO,CAChB,EAEJlV,EAAQmT,cAAgBA,EACxB,MAAMD,EACFhP,cACI9D,KAAK8U,KAAO,CAChB,EAEJlV,EAAQkT,cAAgBA,EACxB,MAAMD,EACF/O,YAAYuP,GACRrT,KAAKqT,SAAWA,EAChBrT,KAAK8U,KAAO,CAChB,EAEJlV,EAAQiT,kBAAoBA,EAC5B,MAAMD,EACF9O,YAAYK,GACRnE,KAAKmE,UAAYA,EACjBnE,KAAK8U,KAAO,CAChB,EAEJlV,EAAQgT,kBAAoBA,EAC5B,MAAMD,EACF7O,YAAYK,EAAWkP,GACnBrT,KAAKmE,UAAYA,EACjBnE,KAAKqT,SAAWA,EAChBrT,KAAK8U,KAAO,CAChB,EAGJ,SAASpC,EAAamC,GAClB,GAAgB,UAAZA,EACA,OAAO,IAAI9B,EAEV,GAAgB,UAAZ8B,EACL,OAAO,IAAI/B,EAEf,MAAM0C,EAAeX,EAAQ/F,QAAQ,KACrC,IAAsB,IAAlB0G,EACA,OAAO,IAAI5C,EAAkBiC,GAE5B,GAAqB,IAAjBW,EACL,OAAO,IAAI3C,EAAkBgC,EAAQxC,UAAU,IAE9C,CACD,MAAMlO,EAAY0Q,EAAQxC,UAAU,EAAGmD,GACjCnC,EAAWwB,EAAQxC,UAAUmD,EAAe,GAClD,OAAO,IAAI7C,EAA4BxO,EAAWkP,EACtD,CACJ,CApBAzT,EAAQ+S,4BAA8BA,EAqBtC/S,EAAQ8S,aAAeA,C,sBCvOvB,IAAI+C,EAAmBzV,MAAQA,KAAKyV,kBAAqBxV,OAAOyV,OAAS,SAAUC,EAAG1Q,EAAGsN,EAAGqD,QAC7EnG,IAAPmG,IAAkBA,EAAKrD,GAC3BtS,OAAOC,eAAeyV,EAAGC,EAAI,CAAEC,YAAY,EAAM/Q,IAAK,WAAa,OAAOG,EAAEsN,EAAI,GACnF,EAAI,SAAUoD,EAAG1Q,EAAGsN,EAAGqD,QACTnG,IAAPmG,IAAkBA,EAAKrD,GAC3BoD,EAAEC,GAAM3Q,EAAEsN,EACb,GACGuD,EAAgB9V,MAAQA,KAAK8V,cAAiB,SAAS7Q,EAAGrF,GAC1D,IAAK,IAAImW,KAAK9Q,EAAa,YAAN8Q,GAAoB9V,OAAO+V,UAAUC,eAAeC,KAAKtW,EAASmW,IAAIN,EAAgB7V,EAASqF,EAAG8Q,EAC3H,EACA9V,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtD2V,EAAa,EAAQ,KAAclW,E,eCXnCK,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtDP,EAAQuW,kBAAoBvW,EAAQqN,qBAAkB,EACtD,MAAM/G,EAAU,EAAQ,KAClBG,EAAY,EAAQ,IACpBC,EAAS,EAAQ,KACjBzC,EAAU,EAAQ,KACxB,MAAMuS,EACFtS,YAAYvC,EAAOqK,GACf5L,KAAKuB,MAAQA,EACbvB,KAAK4L,aAAeA,CACxB,EAcJ,SAASqB,EAAgBlG,EAASoE,EAAUa,EAAaqK,EAAS9U,EAAOiK,EAAY8K,EAAsBjL,GACvG,MAAMM,EAAaR,EAAS6B,QAAQ5K,OACpC,IAAImU,GAAO,EACPC,GAAkB,EACtB,GAAIF,EAAsB,CACtB,MAAMG,EAwKd,SAA+B1P,EAASoE,EAAUa,EAAaqK,EAAS9U,EAAOiK,GAC3E,IAAIgL,EAAkBjV,EAAMqO,qBAAuB,GAAK,EACxD,MAAM8G,EAAa,GACnB,IAAK,IAAIC,EAAOpV,EAAOoV,EAAMA,EAAOA,EAAKrG,MAAO,CAC5C,MAAMsG,EAAWD,EAAK9L,QAAQ9D,GAC1B6P,aAAoBtQ,EAAOuQ,gBAC3BH,EAAWtV,KAAK,CACZyF,KAAM+P,EACNrV,MAAOoV,GAGnB,CACA,IAAK,IAAIG,EAAYJ,EAAWpG,MAAOwG,EAAWA,EAAYJ,EAAWpG,MAAO,CAC5E,MAAM,YAAEyG,EAAW,YAAEC,GAAgBC,EAAuBH,EAAUjQ,KAAME,EAAS+P,EAAUvV,MAAMsO,QAAS7D,EAAaqK,IAAYG,GACjItU,EAAI6U,EAAYG,kBAAkB/L,EAAUkL,EAASW,GAK3D,GAJI9Q,EAAQ7F,WAAWC,cACnB0C,QAAQC,IAAI,6BACZD,QAAQC,IAAI8T,EAAY5U,cAExBD,EAkBC,CACGgE,EAAQ7F,WAAWC,aACnB0C,QAAQC,IAAI,aAAe6T,EAAUjQ,KAAKsQ,UAAY,MAAQL,EAAUjQ,KAAKuQ,kBAEjF7V,EAAQuV,EAAUvV,MAAM+O,MACxB,KACJ,CAtBI,GADsBpO,EAAEiF,SACFb,EAAO+Q,YAAa,CAEtC9V,EAAQuV,EAAUvV,MAAM+O,MACxB,KACJ,CACIpO,EAAEoV,gBAAkBpV,EAAEoV,eAAelV,SACrCoJ,EAAWyG,QAAQ6E,EAAUvV,MAAOW,EAAEoV,eAAe,GAAGC,OACxDC,EAAezQ,EAASoE,EAAUa,EAAa8K,EAAUvV,MAAOiK,EAAYsL,EAAUjQ,KAAK4Q,cAAevV,EAAEoV,gBAC5G9L,EAAWyG,QAAQ6E,EAAUvV,MAAOW,EAAEoV,eAAe,GAAGI,KACxDlB,EAAiBtU,EAAEoV,eAAe,GAAGI,IACjCxV,EAAEoV,eAAe,GAAGI,IAAMrB,IAC1BA,EAAUnU,EAAEoV,eAAe,GAAGI,IAC9B1L,GAAc,GAW9B,CACA,MAAO,CAAEzK,MAAOA,EAAO8U,QAASA,EAASG,eAAgBA,EAAgBxK,YAAaA,EAC1F,CAtNiC2L,CAAsB5Q,EAASoE,EAAUa,EAAaqK,EAAS9U,EAAOiK,GAC/FjK,EAAQkV,EAAiBlV,MACzB8U,EAAUI,EAAiBJ,QAC3BrK,EAAcyK,EAAiBzK,YAC/BwK,EAAiBC,EAAiBD,cACtC,CACA,MAAMoB,EAAYC,KAAKC,MACvB,MAAQvB,GAAM,CACV,GAAkB,IAAdlL,GACoBwM,KAAKC,MAAQF,EACfvM,EACd,OAAO,IAAI+K,EAAqB7U,GAAO,GAG/CwW,GACJ,CACA,OAAO,IAAI3B,EAAqB7U,GAAO,GACvC,SAASwW,IACD7R,EAAQ7F,WAAWC,cACnB0C,QAAQC,IAAI,IACZD,QAAQC,IAAI,cAAcoT,OAAalL,EAAS6B,QAC3C9E,OAAOmO,GACP/D,QAAQ,MAAO,YAExB,MAAMpQ,EA+Ld,SAA+B6E,EAASoE,EAAUa,EAAaqK,EAAS9U,EAAOiV,GAE3E,MAAMwB,EAyBV,SAAmBjR,EAASoE,EAAUa,EAAaqK,EAAS9U,EAAOiV,GAC/D,MAAM3P,EAAOtF,EAAMsJ,QAAQ9D,IACrB,YAAEgQ,EAAW,YAAEC,GAAgBiB,EAAkBpR,EAAME,EAASxF,EAAMsO,QAAS7D,EAAaqK,IAAYG,GAC9G,IAAI0B,EAAY,EACZhS,EAAQ7F,WAAWC,cACnB4X,EAAYrU,EAAQsU,kBAExB,MAAMjW,EAAI6U,EAAYG,kBAAkB/L,EAAUkL,EAASW,GAC3D,GAAI9Q,EAAQ7F,WAAWC,YAAa,CAChC,MAAM8X,EAAgBvU,EAAQsU,iBAAmBD,EAC7CE,EAAgB,GAChBpV,QAAQqV,KAAK,QAAQxR,EAAKsQ,cAActQ,EAAK8D,qBAAqByN,cAA0BjN,MAEhGnI,QAAQC,IAAI,4BAA4BoT,sBAA4BG,MACpExT,QAAQC,IAAI8T,EAAY5U,YACpBD,GACAc,QAAQC,IAAI,oBAAoBf,EAAEiF,eAAejF,EAAEoV,eAAe,GAAGC,YAAYrV,EAAEoV,eAAe,GAAGI,MAE7G,CACA,OAAIxV,EACO,CACHoV,eAAgBpV,EAAEoV,eAClBgB,cAAepW,EAAEiF,QAGlB,IACX,CAnDwBoR,CAAUxR,EAASoE,EAAUa,EAAaqK,EAAS9U,EAAOiV,GAExEzM,EAAahD,EAAQyD,gBAC3B,GAA0B,IAAtBT,EAAW3H,OAEX,OAAO4V,EAEX,MAAMQ,EA6CV,SAAyBzO,EAAYhD,EAASoE,EAAUa,EAAaqK,EAAS9U,EAAOiV,GAEjF,IAEIiC,EAFAC,EAAkBC,OAAOC,UACzBC,EAA0B,KAE1BC,EAA0B,EAC9B,MAAMnR,EAASpG,EAAMqM,sBAAsBS,gBAC3C,IAAK,IAAI3M,EAAI,EAAGuG,EAAM8B,EAAW3H,OAAQV,EAAIuG,EAAKvG,IAAK,CACnD,MAAM+I,EAAYV,EAAWrI,GAC7B,IAAK+I,EAAUlD,QAAQI,GAEnB,SAEJ,MAAMd,EAAOE,EAAQ8D,QAAQJ,EAAUtD,SACjC,YAAE4P,EAAW,YAAEC,GAAgBiB,EAAkBpR,EAAME,EAAS,KAAMiF,EAAaqK,IAAYG,GAC/FwB,EAAcjB,EAAYG,kBAAkB/L,EAAUkL,EAASW,GACrE,IAAKgB,EACD,SAEA9R,EAAQ7F,WAAWC,cACnB0C,QAAQC,IAAI,wBAAwBwH,EAAUjD,iBAC9CxE,QAAQC,IAAI8T,EAAY5U,aAE5B,MAAM4W,EAAcf,EAAYV,eAAe,GAAGC,MAClD,KAAIwB,GAAeL,KAInBA,EAAkBK,EAClBF,EAA0Bb,EAAYV,eACtCmB,EAAkBT,EAAY7Q,OAC9B2R,EAA0BrO,EAAUhD,SAChCiR,IAAoBrC,GAEpB,KAER,CACA,OAAIwC,EACO,CACHG,eAA4C,IAA7BF,EACfxB,eAAgBuB,EAChBP,cAAeG,GAGhB,IACX,CA1F4BQ,CAAgBlP,EAAYhD,EAASoE,EAAUa,EAAaqK,EAAS9U,EAAOiV,GACpG,IAAKgC,EAED,OAAOR,EAEX,IAAKA,EAED,OAAOQ,EAGX,MAAMU,EAAmBlB,EAAYV,eAAe,GAAGC,MACjD4B,EAAuBX,EAAgBlB,eAAe,GAAGC,MAC/D,OAAI4B,EAAuBD,GAAqBV,EAAgBQ,eAAiBG,IAAyBD,EAE/FV,EAEJR,CACX,CAzNkBoB,CAAsBrS,EAASoE,EAAUa,EAAaqK,EAAS9U,EAAOiV,GAChF,IAAKtU,EAOD,OANIgE,EAAQ7F,WAAWC,aACnB0C,QAAQC,IAAI,sBAGhBuI,EAAWyG,QAAQ1Q,EAAOoK,QAC1B4K,GAAO,GAGX,MAAMe,EAAiBpV,EAAEoV,eACnBgB,EAAgBpW,EAAEoW,cAClBe,KAAc/B,GAAkBA,EAAelV,OAAS,IACxDkV,EAAe,GAAGI,IAAMrB,EAE9B,GAAIiC,IAAkBhS,EAAOgT,UAAW,CAEpC,MAAMC,EAAahY,EAAMsJ,QAAQ9D,GAC7Bb,EAAQ7F,WAAWC,aACnB0C,QAAQC,IAAI,aACRsW,EAAWpC,UACX,MACAoC,EAAWC,gBAEnBhO,EAAWyG,QAAQ1Q,EAAO+V,EAAe,GAAGC,OAC5ChW,EAAQA,EAAMsP,0BAA0BtP,EAAMuO,gBAC9C0H,EAAezQ,EAASoE,EAAUa,EAAazK,EAAOiK,EAAY+N,EAAWE,YAAanC,GAC1F9L,EAAWyG,QAAQ1Q,EAAO+V,EAAe,GAAGI,KAE5C,MAAMgC,EAASnY,EAGf,GAFAA,EAAQA,EAAMJ,OACdqV,EAAiBkD,EAAOjJ,gBACnB4I,GAAeK,EAAOlJ,gBAAkB6F,EAUzC,OARInQ,EAAQ7F,WAAWC,aACnB0C,QAAQ2W,MAAM,0FAIlBpY,EAAQmY,EACRlO,EAAWyG,QAAQ1Q,EAAOoK,QAC1B4K,GAAO,EAGf,KACK,CAED,MAAMqD,EAAQ7S,EAAQ8D,QAAQyN,GAC9B9M,EAAWyG,QAAQ1Q,EAAO+V,EAAe,GAAGC,OAC5C,MAAMsC,EAAatY,EAEb4C,EAAYyV,EAAMjN,QAAQxB,EAAS6B,QAASsK,GAC5CxH,EAAiBvO,EAAMqM,sBAAsBiB,eAAe1K,EAAW4C,GAE7E,GADAxF,EAAQA,EAAMH,KAAKkX,EAAejC,EAASG,EAAgBc,EAAe,GAAGI,MAAQ/L,EAAY,KAAMmE,EAAgBA,GACnH8J,aAAiBtT,EAAOwT,aAAc,CACtC,MAAMC,EAAaH,EACf1T,EAAQ7F,WAAWC,aACnB0C,QAAQC,IAAI,aACR8W,EAAW5C,UACX,MACA4C,EAAWC,kBAEnBxC,EAAezQ,EAASoE,EAAUa,EAAazK,EAAOiK,EAAYuO,EAAWE,cAAe3C,GAC5F9L,EAAWyG,QAAQ1Q,EAAO+V,EAAe,GAAGI,KAC5ClB,EAAiBc,EAAe,GAAGI,IACnC,MAAMwC,EAAcH,EAAWI,eAAehP,EAAS6B,QAASsK,GAC1D1J,EAAwBkC,EAAejB,eAAeqL,EAAanT,GAKzE,GAJAxF,EAAQA,EAAMsP,0BAA0BjD,GACpCmM,EAAWK,uBACX7Y,EAAQA,EAAMwP,YAAYgJ,EAAWM,iCAAiClP,EAAS6B,QAASsK,MAEvF+B,GAAeQ,EAAW7I,cAAczP,GAQzC,OANI2E,EAAQ7F,WAAWC,aACnB0C,QAAQ2W,MAAM,wFAElBpY,EAAQA,EAAM+O,MACd9E,EAAWyG,QAAQ1Q,EAAOoK,QAC1B4K,GAAO,EAGf,MACK,GAAIqD,aAAiBtT,EAAOuQ,eAAgB,CAC7C,MAAMkD,EAAaH,EACf1T,EAAQ7F,WAAWC,aACnB0C,QAAQC,IAAI,aAAe8W,EAAW5C,WAE1CK,EAAezQ,EAASoE,EAAUa,EAAazK,EAAOiK,EAAYuO,EAAWE,cAAe3C,GAC5F9L,EAAWyG,QAAQ1Q,EAAO+V,EAAe,GAAGI,KAC5ClB,EAAiBc,EAAe,GAAGI,IACnC,MAAMwC,EAAcH,EAAWI,eAAehP,EAAS6B,QAASsK,GAC1D1J,EAAwBkC,EAAejB,eAAeqL,EAAanT,GAKzE,GAJAxF,EAAQA,EAAMsP,0BAA0BjD,GACpCmM,EAAWO,yBACX/Y,EAAQA,EAAMwP,YAAYgJ,EAAWQ,mCAAmCpP,EAAS6B,QAASsK,MAEzF+B,GAAeQ,EAAW7I,cAAczP,GAQzC,OANI2E,EAAQ7F,WAAWC,aACnB0C,QAAQ2W,MAAM,wFAElBpY,EAAQA,EAAM+O,MACd9E,EAAWyG,QAAQ1Q,EAAOoK,QAC1B4K,GAAO,EAGf,KACK,CACD,MAAMiE,EAAeZ,EAWrB,GAVI1T,EAAQ7F,WAAWC,aACnB0C,QAAQC,IAAI,aACRuX,EAAarD,UACb,MACAqD,EAAaC,kBAErBjD,EAAezQ,EAASoE,EAAUa,EAAazK,EAAOiK,EAAYgP,EAAaE,SAAUpD,GACzF9L,EAAWyG,QAAQ1Q,EAAO+V,EAAe,GAAGI,KAE5CnW,EAAQA,EAAM+O,OACT+I,EAQD,OANInT,EAAQ7F,WAAWC,aACnB0C,QAAQ2W,MAAM,6FAElBpY,EAAQA,EAAMgP,UACd/E,EAAWyG,QAAQ1Q,EAAOoK,QAC1B4K,GAAO,EAGf,CACJ,CACIe,EAAe,GAAGI,IAAMrB,IAExBA,EAAUiB,EAAe,GAAGI,IAC5B1L,GAAc,EAEtB,CACJ,CA0JA,SAASiM,EAAkBpR,EAAME,EAAS4T,EAAgBC,EAAQC,GAC9D,OAAI3U,EAAQ9F,wBAGD,CAAE2W,YAFWlQ,EAAKiU,QAAQ/T,EAAS4T,GAEpB3D,YADF+D,EAAeH,EAAQC,IAIxC,CAAE9D,YADWlQ,EAAKmU,UAAUjU,EAAS4T,EAAgBC,EAAQC,GAC9C7D,YAAa,EACvC,CACA,SAASC,EAAuBpQ,EAAME,EAAS4T,EAAgBC,EAAQC,GACnE,OAAI3U,EAAQ9F,wBAGD,CAAE2W,YAFWlQ,EAAKoU,aAAalU,EAAS4T,GAEzB3D,YADF+D,EAAeH,EAAQC,IAIxC,CAAE9D,YADWlQ,EAAKqU,eAAenU,EAAS4T,EAAgBC,EAAQC,GACnD7D,YAAa,EACvC,CACA,SAAS+D,EAAeH,EAAQC,GAC5B,IAAIM,EAAU,EAOd,OANKP,IACDO,GAAW,GAEVN,IACDM,GAAW,GAERA,CACX,CACA,SAAS3D,EAAezQ,EAASoE,EAAUa,EAAazK,EAAOiK,EAAYkP,EAAUpD,GACjF,GAAwB,IAApBoD,EAAStY,OACT,OAEJ,MAAMgZ,EAAkBjQ,EAAS6B,QAC3B/E,EAAMoT,KAAKC,IAAIZ,EAAStY,OAAQkV,EAAelV,QAC/CmZ,EAAa,GACbC,EAASlE,EAAe,GAAGI,IACjC,IAAK,IAAIhW,EAAI,EAAGA,EAAIuG,EAAKvG,IAAK,CAC1B,MAAM+Z,EAAcf,EAAShZ,GAC7B,GAAoB,OAAhB+Z,EAEA,SAEJ,MAAMC,EAAepE,EAAe5V,GACpC,GAA4B,IAAxBga,EAAatZ,OAEb,SAEJ,GAAIsZ,EAAanE,MAAQiE,EAErB,MAGJ,KAAOD,EAAWnZ,OAAS,GAAKmZ,EAAWA,EAAWnZ,OAAS,GAAGuZ,QAAUD,EAAanE,OAErF/L,EAAW2G,kBAAkBoJ,EAAWA,EAAWnZ,OAAS,GAAGuF,OAAQ4T,EAAWA,EAAWnZ,OAAS,GAAGuZ,QACzGJ,EAAWjL,MAQf,GANIiL,EAAWnZ,OAAS,EACpBoJ,EAAW2G,kBAAkBoJ,EAAWA,EAAWnZ,OAAS,GAAGuF,OAAQ+T,EAAanE,OAGpF/L,EAAWyG,QAAQ1Q,EAAOma,EAAanE,OAEvCkE,EAAYG,6BAA8B,CAE1C,MAAMzX,EAAYsX,EAAY9O,QAAQyO,EAAiB9D,GACjDxH,EAAiBvO,EAAMqM,sBAAsBiB,eAAe1K,EAAW4C,GACvEmT,EAAcuB,EAAYtB,eAAeiB,EAAiB9D,GAC1D1J,EAAwBkC,EAAejB,eAAeqL,EAAanT,GACnE8U,EAAata,EAAMH,KAAKqa,EAAYG,6BAA8BF,EAAanE,OAAQ,GAAG,EAAO,KAAMzH,EAAgBlC,GACvHkO,EAAa/U,EAAQ2C,iBAAiB0R,EAAgB/I,UAAU,EAAGqJ,EAAahE,MACtFzK,EAAgBlG,EAAS+U,EAAa9P,GAAsC,IAAvB0P,EAAanE,MAAcmE,EAAanE,MAAOsE,EAAYrQ,GAAY,EAA2B,GACvJnF,EAAU6G,kBAAkB4O,GAC5B,QACJ,CACA,MAAMC,EAAuBN,EAAY9O,QAAQyO,EAAiB9D,GAClE,GAA6B,OAAzByE,EAA+B,CAE/B,MACMC,GADOT,EAAWnZ,OAAS,EAAImZ,EAAWA,EAAWnZ,OAAS,GAAGuF,OAASpG,EAAMqM,uBACnDiB,eAAekN,EAAsBhV,GACxEwU,EAAWna,KAAK,IAAI+U,EAAkB6F,EAAuBN,EAAahE,KAC9E,CACJ,CACA,KAAO6D,EAAWnZ,OAAS,GAEvBoJ,EAAW2G,kBAAkBoJ,EAAWA,EAAWnZ,OAAS,GAAGuF,OAAQ4T,EAAWA,EAAWnZ,OAAS,GAAGuZ,QACzGJ,EAAWjL,KAEnB,CAjPA1Q,EAAQqN,gBAAkBA,EAkP1B,MAAMkJ,EACFrS,YAAY6D,EAAQgU,GAChB3b,KAAK2H,OAASA,EACd3H,KAAK2b,OAASA,CAClB,EAEJ/b,EAAQuW,kBAAoBA,C,cCrb5B,SAAS8F,EAAOC,EAAaC,GAEzB,MAAM,IAAIhX,MAAM,eAAiB+W,EAAYE,IAAM,KAAOD,EAAM,OAASD,EAAYG,OAAOnU,OAAOgU,EAAYE,IAAK,IAAM,MAC9H,CALAnc,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtDP,EAAQ0c,eAAY,EAiLpB1c,EAAQ0c,UA5KR,SAAmBD,EAAQE,EAAUC,GACjC,IAAIN,EAAc,IAAIO,EAAgBJ,GAClCK,EAAQ,IAAIC,EACZC,EAAQ,EACRC,EAAM,KACNC,EAAa,GACbC,EAAW,GACf,SAASC,IACLF,EAAW1b,KAAKwb,GAChBG,EAAS3b,KAAKyb,EAClB,CACA,SAASI,IACLL,EAAQE,EAAWxM,MACnBuM,EAAME,EAASzM,KACnB,CACA,SAAS4M,EAAKf,GACVF,EAAOC,EAAaC,EACxB,CACA,KAAOgB,EAAcjB,EAAaQ,IAAQ,CACtC,GAAc,IAAVE,EAA8B,CAI9B,GAHY,OAARC,GACAK,EAAK,+BAEU,IAAfR,EAAMrT,KAAqC,CAC3CwT,EAAM,CAAC,EACHL,IACAK,EAAIxP,wBAA0BqP,EAAMU,WAAWb,IAEnDS,IACAJ,EAAQ,EACR,QACJ,CACA,GAAmB,IAAfF,EAAMrT,KAAsC,CAC5CwT,EAAM,GACNG,IACAJ,EAAQ,EACR,QACJ,CACAM,EAAK,2BACT,CACA,GAAc,IAAVN,EAAoC,CACpC,GAAmB,IAAfF,EAAMrT,KAAsC,CAC5C4T,IACA,QACJ,CACA,GAAmB,IAAfP,EAAMrT,KAAwB,CAC9BuT,EAAQ,EACR,QACJ,CACAM,EAAK,kBACT,CACA,GAAc,IAAVN,GAA0C,IAAVA,EAAuC,CACvE,GAAc,IAAVA,GAA+C,IAAfF,EAAMrT,KAAsC,CAC5E4T,IACA,QACJ,CACA,GAAmB,IAAfP,EAAMrT,KAAyB,CAC/B,IAAIgU,EAAWX,EAAMvc,MAQrB,GAPKgd,EAAcjB,EAAaQ,IAAyB,IAAfA,EAAMrT,MAC5C6T,EAAK,kBAEJC,EAAcjB,EAAaQ,IAC5BQ,EAAK,kBAETN,EAAQ,EACW,IAAfF,EAAMrT,KAAyB,CAC/BwT,EAAIQ,GAAYX,EAAMvc,MACtB,QACJ,CACA,GAAmB,IAAfuc,EAAMrT,KAAuB,CAC7BwT,EAAIQ,GAAY,KAChB,QACJ,CACA,GAAmB,IAAfX,EAAMrT,KAAuB,CAC7BwT,EAAIQ,IAAY,EAChB,QACJ,CACA,GAAmB,KAAfX,EAAMrT,KAAyB,CAC/BwT,EAAIQ,IAAY,EAChB,QACJ,CACA,GAAmB,KAAfX,EAAMrT,KAA0B,CAChCwT,EAAIQ,GAAYC,WAAWZ,EAAMvc,OACjC,QACJ,CACA,GAAmB,IAAfuc,EAAMrT,KAAsC,CAC5C,IAAIkU,EAAS,GACbV,EAAIQ,GAAYE,EAChBP,IACAJ,EAAQ,EACRC,EAAMU,EACN,QACJ,CACA,GAAmB,IAAfb,EAAMrT,KAAqC,CAC3C,IAAImU,EAAU,CAAC,EACXhB,IACAgB,EAAQnQ,wBAA0BqP,EAAMU,WAAWb,IAEvDM,EAAIQ,GAAYG,EAChBR,IACAJ,EAAQ,EACRC,EAAMW,EACN,QACJ,CACJ,CACAN,EAAK,2BACT,CACA,GAAc,IAAVN,EAAmC,CACnC,GAAmB,IAAfF,EAAMrT,KAAuC,CAC7C4T,IACA,QACJ,CACA,GAAmB,IAAfP,EAAMrT,KAAwB,CAC9BuT,EAAQ,EACR,QACJ,CACAM,EAAK,kBACT,CACA,GAAc,IAAVN,GAAyC,IAAVA,EAAsC,CACrE,GAAc,IAAVA,GAA8C,IAAfF,EAAMrT,KAAuC,CAC5E4T,IACA,QACJ,CAEA,GADAL,EAAQ,EACW,IAAfF,EAAMrT,KAAyB,CAC/BwT,EAAIzb,KAAKsb,EAAMvc,OACf,QACJ,CACA,GAAmB,IAAfuc,EAAMrT,KAAuB,CAC7BwT,EAAIzb,KAAK,MACT,QACJ,CACA,GAAmB,IAAfsb,EAAMrT,KAAuB,CAC7BwT,EAAIzb,MAAK,GACT,QACJ,CACA,GAAmB,KAAfsb,EAAMrT,KAAyB,CAC/BwT,EAAIzb,MAAK,GACT,QACJ,CACA,GAAmB,KAAfsb,EAAMrT,KAA0B,CAChCwT,EAAIzb,KAAKkc,WAAWZ,EAAMvc,QAC1B,QACJ,CACA,GAAmB,IAAfuc,EAAMrT,KAAsC,CAC5C,IAAIkU,EAAS,GACbV,EAAIzb,KAAKmc,GACTP,IACAJ,EAAQ,EACRC,EAAMU,EACN,QACJ,CACA,GAAmB,IAAfb,EAAMrT,KAAqC,CAC3C,IAAImU,EAAU,CAAC,EACXhB,IACAgB,EAAQnQ,wBAA0BqP,EAAMU,WAAWb,IAEvDM,EAAIzb,KAAKoc,GACTR,IACAJ,EAAQ,EACRC,EAAMW,EACN,QACJ,CACAN,EAAK,4BACT,CACAA,EAAK,gBACT,CAIA,OAHwB,IAApBH,EAAS3a,QACT8a,EAAK,uBAEFL,CACX,EAEA,MAAMJ,EACF3Y,YAAYuY,GACRrc,KAAKqc,OAASA,EACdrc,KAAKoc,IAAM,EACXpc,KAAKiI,IAAMoU,EAAOja,OAClBpC,KAAKyd,KAAO,EACZzd,KAAK0d,KAAO,CAChB,EAEJ,MAAMf,EACF7Y,cACI9D,KAAKG,MAAQ,KACbH,KAAKqJ,KAAO,EACZrJ,KAAK2d,QAAU,EACf3d,KAAKiI,KAAO,EACZjI,KAAKyd,MAAQ,EACbzd,KAAK0d,MAAQ,CACjB,CACAN,WAAWb,GACP,MAAO,CACHA,SAAUA,EACVkB,KAAMzd,KAAKyd,KACXC,KAAM1d,KAAK0d,KAEnB,EAKJ,SAASP,EAAcS,EAAQC,GAC3BA,EAAK1d,MAAQ,KACb0d,EAAKxU,KAAO,EACZwU,EAAKF,QAAU,EACfE,EAAK5V,KAAO,EACZ4V,EAAKJ,MAAQ,EACbI,EAAKH,MAAQ,EACb,IAMII,EANAzB,EAASuB,EAAOvB,OAChBD,EAAMwB,EAAOxB,IACbnU,EAAM2V,EAAO3V,IACbwV,EAAOG,EAAOH,KACdC,EAAOE,EAAOF,KAGlB,OAAG,CACC,GAAItB,GAAOnU,EACP,OAAO,EAGX,GADA6V,EAASzB,EAAO0B,WAAW3B,GACZ,KAAX0B,GAAwC,IAAXA,GAAgD,KAAXA,EAAtE,CAMA,GAAe,KAAXA,EAQJ,MANI1B,IACAqB,IACAC,EAAO,CALX,MAHItB,IACAsB,GAYR,CAIA,GAHAG,EAAKF,OAASvB,EACdyB,EAAKJ,KAAOA,EACZI,EAAKH,KAAOA,EACG,KAAXI,EAAoC,CAKpC,IAHAD,EAAKxU,KAAO,EACZ+S,IACAsB,MACG,CACC,GAAItB,GAAOnU,EACP,OAAO,EAKX,GAHA6V,EAASzB,EAAO0B,WAAW3B,GAC3BA,IACAsB,IACe,KAAXI,GAMJ,GAAe,KAAXA,EAEA,WANA1B,IACAsB,GAOR,CACAG,EAAK1d,MAAQkc,EAAOhK,UAAUwL,EAAKF,OAAS,EAAGvB,EAAM,GAAG9J,QAAQ,wBAAwB,CAAC0L,EAAGC,IACjFC,OAAOC,cAAcC,SAASH,EAAI,OAC1C3L,QAAQ,UAAU,CAAC0L,EAAGC,KACrB,OAAQA,GACJ,IAAK,IAAK,MAAO,IACjB,IAAK,KAAM,MAAO,KAClB,IAAK,IAAK,MAAO,IACjB,IAAK,IAAK,MAAO,KACjB,IAAK,IAAK,MAAO,KACjB,IAAK,IAAK,MAAO,KACjB,IAAK,IAAK,MAAO,KACjB,IAAK,IAAK,MAAO,KACjB,QAAShC,EAAO2B,EAAQ,2BAE5B,MAAM,IAAIzY,MAAM,cAAc,GAEtC,MACK,GAAe,KAAX2Y,EACLD,EAAKxU,KAAO,EACZ+S,IACAsB,SAEC,GAAe,MAAXI,EACLD,EAAKxU,KAAO,EACZ+S,IACAsB,SAEC,GAAe,KAAXI,EACLD,EAAKxU,KAAO,EACZ+S,IACAsB,SAEC,GAAe,MAAXI,EACLD,EAAKxU,KAAO,EACZ+S,IACAsB,SAEC,GAAe,KAAXI,EACLD,EAAKxU,KAAO,EACZ+S,IACAsB,SAEC,GAAe,KAAXI,EACLD,EAAKxU,KAAO,EACZ+S,IACAsB,SAEC,GAAe,MAAXI,EAAwB,CAM7B,GAJAD,EAAKxU,KAAO,EACZ+S,IACAsB,IACAI,EAASzB,EAAO0B,WAAW3B,GACZ,MAAX0B,EACA,OAAO,EAKX,GAHA1B,IACAsB,IACAI,EAASzB,EAAO0B,WAAW3B,GACZ,MAAX0B,EACA,OAAO,EAKX,GAHA1B,IACAsB,IACAI,EAASzB,EAAO0B,WAAW3B,GACZ,MAAX0B,EACA,OAAO,EAEX1B,IACAsB,GACJ,MACK,GAAe,MAAXI,EAAwB,CAM7B,GAJAD,EAAKxU,KAAO,EACZ+S,IACAsB,IACAI,EAASzB,EAAO0B,WAAW3B,GACZ,MAAX0B,EACA,OAAO,EAKX,GAHA1B,IACAsB,IACAI,EAASzB,EAAO0B,WAAW3B,GACZ,MAAX0B,EACA,OAAO,EAKX,GAHA1B,IACAsB,IACAI,EAASzB,EAAO0B,WAAW3B,GACZ,MAAX0B,EACA,OAAO,EAEX1B,IACAsB,GACJ,MACK,GAAe,MAAXI,EAAwB,CAM7B,GAJAD,EAAKxU,KAAO,GACZ+S,IACAsB,IACAI,EAASzB,EAAO0B,WAAW3B,GACZ,KAAX0B,EACA,OAAO,EAKX,GAHA1B,IACAsB,IACAI,EAASzB,EAAO0B,WAAW3B,GACZ,MAAX0B,EACA,OAAO,EAKX,GAHA1B,IACAsB,IACAI,EAASzB,EAAO0B,WAAW3B,GACZ,MAAX0B,EACA,OAAO,EAKX,GAHA1B,IACAsB,IACAI,EAASzB,EAAO0B,WAAW3B,GACZ,MAAX0B,EACA,OAAO,EAEX1B,IACAsB,GACJ,MAII,IADAG,EAAKxU,KAAO,KACT,CACC,GAAI+S,GAAOnU,EACP,OAAO,EAGX,GADA6V,EAASzB,EAAO0B,WAAW3B,KACZ,KAAX0B,GACIA,GAAU,IAAeA,GAAU,IACxB,MAAXA,GAAqC,KAAXA,GACf,KAAXA,GAAwC,KAAXA,GAOrC,MALI1B,IACAsB,GAKR,CAUJ,OARAG,EAAK5V,IAAMmU,EAAMyB,EAAKF,OACH,OAAfE,EAAK1d,QACL0d,EAAK1d,MAAQkc,EAAOnU,OAAO2V,EAAKF,OAAQE,EAAK5V,MAEjD2V,EAAOxB,IAAMA,EACbwB,EAAOH,KAAOA,EACdG,EAAOF,KAAOA,GAEP,CACX,C,sBCxaA,IAAIjI,EAAmBzV,MAAQA,KAAKyV,kBAAqBxV,OAAOyV,OAAS,SAAUC,EAAG1Q,EAAGsN,EAAGqD,QAC7EnG,IAAPmG,IAAkBA,EAAKrD,GAC3BtS,OAAOC,eAAeyV,EAAGC,EAAI,CAAEC,YAAY,EAAM/Q,IAAK,WAAa,OAAOG,EAAEsN,EAAI,GACnF,EAAI,SAAUoD,EAAG1Q,EAAGsN,EAAGqD,QACTnG,IAAPmG,IAAkBA,EAAKrD,GAC3BoD,EAAEC,GAAM3Q,EAAEsN,EACb,GACGuD,EAAgB9V,MAAQA,KAAK8V,cAAiB,SAAS7Q,EAAGrF,GAC1D,IAAK,IAAImW,KAAK9Q,EAAa,YAAN8Q,GAAoB9V,OAAO+V,UAAUC,eAAeC,KAAKtW,EAASmW,IAAIN,EAAgB7V,EAASqF,EAAG8Q,EAC3H,EACA9V,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtDP,EAAQa,oBAAsBb,EAAQc,qBAAuBd,EAAQye,gBAAkBze,EAAQ0e,QAAU1e,EAAQ2e,cAAW,EAC5H,MAAM5d,EAAY,EAAQ,KACpB6d,EAAgB,EAAQ,IACxBC,EAAa,EAAQ,KACrBlY,EAAU,EAAQ,KAClBmY,EAAwB,EAAQ,KAChCC,EAAoB,EAAQ,KAClC1e,OAAOC,eAAeN,EAAS,sBAAuB,CAAEiW,YAAY,EAAM/Q,IAAK,WAAc,OAAO6Z,EAAkBle,mBAAqB,IAC3IR,OAAOC,eAAeN,EAAS,uBAAwB,CAAEiW,YAAY,EAAM/Q,IAAK,WAAc,OAAO6Z,EAAkBje,oBAAsB,IAC7IoV,EAAa,EAAQ,IAAclW,GAgFnCA,EAAQ2e,SA5ER,MACIza,YAAYqX,GACRnb,KAAK4e,SAAWzD,EAChBnb,KAAK6e,cAAgB,IAAIJ,EAAWK,aAAavY,EAAQwY,MAAMC,mBAAmB7D,EAAQ8D,MAAO9D,EAAQ+D,UAAW/D,EAAQ5S,SAC5HvI,KAAKmf,oBAAsB,IAAI7Z,GACnC,CACAiE,UACIvJ,KAAK6e,cAActV,SACvB,CAIA6V,SAASH,EAAOC,GACZlf,KAAK6e,cAAcO,SAAS7Y,EAAQwY,MAAMC,mBAAmBC,EAAOC,GACxE,CAIAG,cACI,OAAOrf,KAAK6e,cAAcQ,aAC9B,CAKAC,iCAAiCtK,EAAkB7M,EAAiBnE,GAChE,OAAOhE,KAAKuf,6BAA6BvK,EAAkB7M,EAAiB,CAAEnE,qBAClF,CAKAub,6BAA6BvK,EAAkB7M,EAAiBqX,GAC5D,OAAOxf,KAAKyf,aAAazK,EAAkB7M,EAAiBqX,EAAcxb,kBAAmBwb,EAAcpX,WAAY,IAAIzH,EAAUmF,yBAAyB0Z,EAAcnX,0BAA4B,GAAImX,EAAcE,4BAA8B,IAC5P,CAIAC,YAAY3K,GACR,OAAOhV,KAAKyf,aAAazK,EAAkB,EAAG,KAAM,KAAM,KAC9D,CACA4K,mBAAmB5K,EAAkB7M,EAAiBnE,EAAmBoE,EAAYC,GACjF,MAAMwX,EAAsB,IAAInB,EAAsB1L,yBAAyBhT,KAAK6e,cAAe7J,GACnG,KAAO6K,EAAoB1K,EAAE/S,OAAS,SAC5B0d,QAAQC,IAAIF,EAAoB1K,EAAE3P,KAAKwa,GAAYhgB,KAAKigB,mBAAmBD,EAAQ7b,cACzF0b,EAAoBzK,eAExB,OAAOpV,KAAKkgB,qBAAqBlL,EAAkB7M,EAAiBnE,EAAmBoE,EAAYC,EACvG,CACAuX,yBAAyBzb,GAIrB,OAHKnE,KAAKmf,oBAAoBrL,IAAI3P,IAC9BnE,KAAKmf,oBAAoBhc,IAAIgB,EAAWnE,KAAKmgB,qBAAqBhc,IAE/DnE,KAAKmf,oBAAoBra,IAAIX,EACxC,CACAyb,2BAA2Bzb,GACvB,MAAM4C,QAAgB/G,KAAK4e,SAASe,YAAYxb,GAChD,GAAI4C,EAAS,CACT,MAAMgD,EAAoD,mBAAhC/J,KAAK4e,SAASpU,cAA+BxK,KAAK4e,SAASpU,cAAcrG,QAAasL,EAChHzP,KAAK6e,cAAcuB,WAAWrZ,EAASgD,EAC3C,CACJ,CAIA6V,iBAAiBS,EAAYtW,EAAa,GAAI5B,EAAkB,EAAGnE,EAAoB,MAEnF,OADAhE,KAAK6e,cAAcuB,WAAWC,EAAYtW,SAC5B/J,KAAKkgB,qBAAqBG,EAAWlc,UAAWgE,EAAiBnE,EACnF,CAIAkc,qBAAqB/b,EAAWgE,EAAkB,EAAGnE,EAAoB,KAAMoE,EAAa,KAAMC,EAA2B,MACzH,OAAOrI,KAAK6e,cAAcyB,oBAAoBnc,EAAWgE,EAAiBnE,EAAmBoE,EAAYC,EAC7G,GAGJzI,EAAQ0e,QAAU3d,EAAUiB,eAAesK,KAC3CtM,EAAQye,gBAAkBG,EAAcH,e,cCrBxC,SAASkC,EAAa7D,GAClB,QAASA,KAAWA,EAAM1X,MAAM,WACpC,CAnFA/E,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtDP,EAAQqH,oBAAiB,EA+EzBrH,EAAQqH,eA9ER,SAAwBL,EAAU4Z,GAC9B,MAAMC,EAAU,GACVC,EAgFV,SAAsBC,GAClB,IAAIC,EAAQ,0CACR5b,EAAQ4b,EAAMC,KAAKF,GACvB,MAAO,CACHG,KAAM,KACF,IAAK9b,EACD,OAAO,KAEX,MAAM2L,EAAM3L,EAAM,GAElB,OADAA,EAAQ4b,EAAMC,KAAKF,GACZhQ,CAAG,EAGtB,CA7FsBoQ,CAAana,GAC/B,IAAI8V,EAAQgE,EAAUI,OACtB,KAAiB,OAAVpE,GAAgB,CACnB,IAAIjV,EAAW,EACf,GAAqB,IAAjBiV,EAAMta,QAAoC,MAApBsa,EAAMsE,OAAO,GAAY,CAC/C,OAAQtE,EAAMsE,OAAO,IACjB,IAAK,IACDvZ,EAAW,EACX,MACJ,IAAK,IACDA,GAAY,EACZ,MACJ,QACIzE,QAAQC,IAAI,oBAAoByZ,uBAExCA,EAAQgE,EAAUI,MACtB,CACA,IAAIvZ,EAAU0Z,IAEd,GADAR,EAAQrf,KAAK,CAAEmG,UAASE,aACV,MAAViV,EACA,MAEJA,EAAQgE,EAAUI,MACtB,CACA,OAAOL,EACP,SAASS,IACL,GAAc,MAAVxE,EAAe,CACfA,EAAQgE,EAAUI,OAClB,MAAMK,EAAqBD,IAC3B,OAAOE,KAAkBD,IAAuBA,EAAmBC,EACvE,CACA,GAAc,MAAV1E,EAAe,CACfA,EAAQgE,EAAUI,OAClB,MAAMO,EAyBd,WACI,MAAMra,EAAW,GACjB,IAAIO,EAAU0Z,IACd,KAAO1Z,IACHP,EAAS5F,KAAKmG,GACA,MAAVmV,GAA2B,MAAVA,IAFT,CAGR,GACIA,EAAQgE,EAAUI,aACH,MAAVpE,GAA2B,MAAVA,GAK9BnV,EAAU0Z,GACd,CACA,OAAOG,GAAgBpa,EAASsa,MAAK/Z,GAAWA,EAAQ6Z,IAC5D,CAzCoCG,GAI5B,MAHc,MAAV7E,IACAA,EAAQgE,EAAUI,QAEfO,CACX,CACA,GAAId,EAAa7D,GAAQ,CACrB,MAAM8E,EAAc,GACpB,GACIA,EAAYpgB,KAAKsb,GACjBA,EAAQgE,EAAUI,aACbP,EAAa7D,IACtB,OAAO0E,GAAgBZ,EAAYgB,EAAaJ,EACpD,CACA,OAAO,IACX,CACA,SAASH,IACL,MAAMja,EAAW,GACjB,IAAIO,EAAU2Z,IACd,KAAO3Z,GACHP,EAAS5F,KAAKmG,GACdA,EAAU2Z,IAEd,OAAOE,GAAgBpa,EAASa,OAAMN,GAAWA,EAAQ6Z,IAC7D,CAkBJ,C,aC/EAnhB,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtDP,EAAQsN,uBAAoB,EAM5BtN,EAAQsN,kBALR,SAA2BuU,GACI,mBAAhBA,EAAIlY,SACXkY,EAAIlY,SAEZ,C,eCNAtJ,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtDP,EAAQye,qBAAkB,EAC1B,MAAMqD,EAAQ,EAAQ,IAChBxb,EAAU,EAAQ,KAClByb,EAAS,EAAQ,KAOvB/hB,EAAQye,gBANR,SAAyBrR,EAAS4U,EAAW,MACzC,OAAiB,OAAbA,GAAqB,UAAUC,KAAKD,IAMlBE,EALM9U,EAKIuP,EALKqF,EAMjC1b,EAAQ7F,WAAWC,YACZqhB,EAAOrF,UAAUwF,EAAUvF,GAAU,GAEzCwF,KAAKC,MAAMF,IAEtB,SAA2BA,EAAUvF,GACjC,OAAIrW,EAAQ7F,WAAWC,YACZohB,EAAMO,kBAAkBH,EAAUvF,EAAU,2BAEhDmF,EAAMQ,WAAWJ,EAC5B,CAdWK,CAAkBnV,EAAS4U,GAGtC,IAA0BE,EAAUvF,CAFpC,C,aCGA,SAAS6F,EAAOpV,EAASuP,EAAU8F,GAC/B,MAAMpa,EAAM+E,EAAQ5K,OACpB,IAAIga,EAAM,EACNqB,EAAO,EACPC,EAAO,EAKX,SAAS4E,EAAaC,GAClB,GAAwB,OAApBF,EACAjG,GAAYmG,OAGZ,KAAOA,EAAK,GAEO,KADFvV,EAAQ+Q,WAAW3B,IAE5BA,IACAqB,IACAC,EAAO,IAGPtB,IACAsB,KAEJ6E,GAGZ,CACA,SAASC,EAAaC,GACM,OAApBJ,EACAjG,EAAMqG,EAGNH,EAAaG,EAAKrG,EAE1B,CACA,SAASsG,IACL,KAAOtG,EAAMnU,GAAK,CACd,IAAI6V,EAAS9Q,EAAQ+Q,WAAW3B,GAChC,GAAe,KAAX0B,GAAwC,IAAXA,GAAqC,KAAXA,GAAkD,KAAXA,EAC9F,MAEJwE,EAAa,EACjB,CACJ,CACA,SAASK,EAAoBlB,GACzB,OAAIzU,EAAQ9E,OAAOkU,EAAKqF,EAAIrf,UAAYqf,IACpCa,EAAab,EAAIrf,SACV,EAGf,CACA,SAASwgB,EAAanB,GAClB,IAAIoB,EAAgB7V,EAAQ8B,QAAQ2S,EAAKrF,GAErCoG,GADmB,IAAnBK,EACaA,EAAgBpB,EAAIrf,OAIpB6F,EAErB,CACA,SAAS6a,EAAarB,GAClB,IAAIoB,EAAgB7V,EAAQ8B,QAAQ2S,EAAKrF,GACzC,IAAuB,IAAnByG,EAAsB,CACtB,IAAI3gB,EAAI8K,EAAQqF,UAAU+J,EAAKyG,GAE/B,OADAL,EAAaK,EAAgBpB,EAAIrf,QAC1BF,CACX,CACK,CAED,IAAIA,EAAI8K,EAAQ9E,OAAOkU,GAEvB,OADAoG,EAAava,GACN/F,CACX,CACJ,CAtEI+F,EAAM,GAA+B,QAA1B+E,EAAQ+Q,WAAW,KAC9B3B,EAAM,GAsEV,IAAIQ,EAAQ,EACRC,EAAM,KACNC,EAAa,GACbC,EAAW,GACXgG,EAAS,KACb,SAAS/F,EAAUgG,EAAUC,GACzBnG,EAAW1b,KAAKwb,GAChBG,EAAS3b,KAAKyb,GACdD,EAAQoG,EACRnG,EAAMoG,CACV,CACA,SAAShG,IACL,GAA0B,IAAtBH,EAAW1a,OACX,OAAO8a,EAAK,uBAEhBN,EAAQE,EAAWxM,MACnBuM,EAAME,EAASzM,KACnB,CACA,SAAS4M,EAAKf,GACV,MAAM,IAAIhX,MAAM,eAAiBiX,EAAM,KAAOD,EAAM,OAASnP,EAAQ9E,OAAOkU,EAAK,IAAM,MAC3F,CACA,MAAM8G,EACS,WACP,GAAe,OAAXH,EACA,OAAO7F,EAAK,iBAEhB,IAAIM,EAAU,CAAC,EACS,OAApB6E,IACA7E,EAAQ6E,GAAmB,CACvB9F,SAAUA,EACVkB,KAAMA,EACNC,KAAMA,IAGdb,EAAIkG,GAAUvF,EACduF,EAAS,KACT/F,EAAU,EAAoBQ,EAClC,EAhBE0F,EAiBU,WACR,GAAe,OAAXH,EACA,OAAO7F,EAAK,iBAEhB,IAAIK,EAAS,GACbV,EAAIkG,GAAUxF,EACdwF,EAAS,KACT/F,EAAU,EAAmBO,EACjC,EAEE4F,EACS,WACP,IAAI3F,EAAU,CAAC,EACS,OAApB6E,IACA7E,EAAQ6E,GAAmB,CACvB9F,SAAUA,EACVkB,KAAMA,EACNC,KAAMA,IAGdb,EAAIzb,KAAKoc,GACTR,EAAU,EAAoBQ,EAClC,EAZE2F,EAaU,WACR,IAAI5F,EAAS,GACbV,EAAIzb,KAAKmc,GACTP,EAAU,EAAmBO,EACjC,EAqBJ,SAAS6F,IACL,GAAc,IAAVxG,EAGC,OACMM,EAAK,sBAHZD,GAQR,CAaA,SAASoG,IACL,OAAc,IAAVzG,GAGe,IAAVA,EAFEM,EAAK,4BAGZD,GAKR,CAeA,SAASqG,EAAaC,GAClB,GAAc,IAAV3G,EAA8B,CAC9B,GAAe,OAAXmG,EACA,OAAO7F,EAAK,iBAEhBL,EAAIkG,GAAUQ,EACdR,EAAS,IACb,MACmB,IAAVnG,EACLC,EAAIzb,KAAKmiB,GAGT1G,EAAM0G,CAEd,CACA,SAASC,EAAWD,GAChB,GAAIE,MAAMF,GACN,OAAOrG,EAAK,sBAEhB,GAAc,IAAVN,EAA8B,CAC9B,GAAe,OAAXmG,EACA,OAAO7F,EAAK,iBAEhBL,EAAIkG,GAAUQ,EACdR,EAAS,IACb,MACmB,IAAVnG,EACLC,EAAIzb,KAAKmiB,GAGT1G,EAAM0G,CAEd,CACA,SAASG,EAAcH,GACnB,GAAIE,MAAMF,GACN,OAAOrG,EAAK,wBAEhB,GAAc,IAAVN,EAA8B,CAC9B,GAAe,OAAXmG,EACA,OAAO7F,EAAK,iBAEhBL,EAAIkG,GAAUQ,EACdR,EAAS,IACb,MACmB,IAAVnG,EACLC,EAAIzb,KAAKmiB,GAGT1G,EAAM0G,CAEd,CACA,SAASI,EAAWJ,GAChB,GAAc,IAAV3G,EAA8B,CAC9B,GAAe,OAAXmG,EACA,OAAO7F,EAAK,iBAEhBL,EAAIkG,GAAUQ,EACdR,EAAS,IACb,MACmB,IAAVnG,EACLC,EAAIzb,KAAKmiB,GAGT1G,EAAM0G,CAEd,CACA,SAASK,EAAWL,GAChB,GAAc,IAAV3G,EAA8B,CAC9B,GAAe,OAAXmG,EACA,OAAO7F,EAAK,iBAEhBL,EAAIkG,GAAUQ,EACdR,EAAS,IACb,MACmB,IAAVnG,EACLC,EAAIzb,KAAKmiB,GAGT1G,EAAM0G,CAEd,CACA,SAASM,EAAWN,GAChB,GAAc,IAAV3G,EAA8B,CAC9B,GAAe,OAAXmG,EACA,OAAO7F,EAAK,iBAEhBL,EAAIkG,GAAUQ,EACdR,EAAS,IACb,MACmB,IAAVnG,EACLC,EAAIzb,KAAKmiB,GAGT1G,EAAM0G,CAEd,CAiBA,SAASO,IACL,IAAI5hB,EAAI4gB,EAAa,KACjBiB,GAAW,EAKf,OAJmC,KAA/B7hB,EAAE6b,WAAW7b,EAAEE,OAAS,KACxB2hB,GAAW,EACX7hB,EAAIA,EAAEmQ,UAAU,EAAGnQ,EAAEE,OAAS,IAE3B,CACHmL,KAAMrL,EAAE8hB,OACRD,SAAUA,EAElB,CACA,SAASE,EAAcC,GACnB,GAAIA,EAAIH,SACJ,MAAO,GAEX,IAAIR,EAAMT,EAAa,MAEvB,OADAF,EAAa,KACIW,EAjCNjR,QAAQ,gBAAgB,SAAU0L,EAAGC,GAC5C,OAAOC,OAAOC,cAAcC,SAASH,EAAI,IAC7C,IAAG3L,QAAQ,oBAAoB,SAAU0L,EAAGC,GACxC,OAAOC,OAAOC,cAAcC,SAASH,EAAI,IAC7C,IAAG3L,QAAQ,kCAAkC,SAAU0L,GACnD,OAAQA,GACJ,IAAK,QAAS,MAAO,IACrB,IAAK,OAAQ,MAAO,IACpB,IAAK,OAAQ,MAAO,IACpB,IAAK,SAAU,MAAO,IACtB,IAAK,SAAU,MAAO,IAE1B,OAAOA,CACX,GAqBJ,CACA,KAAO5B,EAAMnU,IACTya,MACItG,GAAOnU,KAFG,CAKd,MAAM6V,EAAS9Q,EAAQ+Q,WAAW3B,GAElC,GADAkG,EAAa,GACE,KAAXxE,EACA,OAAOZ,EAAK,cAEhB,GAAId,GAAOnU,EACP,OAAOiV,EAAK,2BAEhB,MAAMiH,EAAanX,EAAQ+Q,WAAW3B,GACtC,GAAmB,KAAf+H,EAAuC,CACvC7B,EAAa,GACbM,EAAa,MACb,QACJ,CACA,GAAmB,KAAfuB,EAA0C,CAE1C,GADA7B,EAAa,GACTK,EAAoB,MAAO,CAC3BC,EAAa,UACb,QACJ,CACAA,EAAa,KACb,QACJ,CACA,GAAmB,KAAfuB,EAA+B,CAG/B,GAFA7B,EAAa,GACbI,IACIC,EAAoB,SAAU,CAC9BC,EAAa,KACb,QACJ,CACA,GAAID,EAAoB,QAAS,CAC7BC,EAAa,KACbQ,IACA,QACJ,CACA,GAAIT,EAAoB,SAAU,CAC9BC,EAAa,KACbS,IACA,QACJ,CACA,OAAOnG,EAAK,wBAChB,CACA,IAAIgH,EAAMJ,IACV,OAAQI,EAAI3W,MACR,IAAK,OAvPK,IAAVqP,EACAsG,IAEe,IAAVtG,EACLuG,KAGAtG,EAAM,CAAC,EACiB,OAApBwF,IACAxF,EAAIwF,GAAmB,CACnB9F,SAAUA,EACVkB,KAAMA,EACNC,KAAMA,IAGdV,EAAU,EAAoBH,IA0OtBqH,EAAIH,UACJX,IAEJ,SACJ,IAAK,QA/NK,IAAVxG,EACAsG,IAEe,IAAVtG,EACLuG,KAGAtG,EAAM,GACNG,EAAU,EAAmBH,IAyNrBqH,EAAIH,UACJV,IAEJ,SACJ,IAAK,MA/MME,EAgNGU,EAAcC,GA/MlB,IAAVtH,EAOOM,EAAK,oBANG,OAAX6F,EACO7F,EAAK,kBAEhB6F,EAASQ,EA4ML,SACJ,IAAK,SACDD,EAAaW,EAAcC,IAC3B,SACJ,IAAK,OACDV,EAAWlG,WAAW2G,EAAcC,KACpC,SACJ,IAAK,UACDR,EAActF,SAAS6F,EAAcC,GAAM,KAC3C,SACJ,IAAK,OACDP,EAAW,IAAI9L,KAAKoM,EAAcC,KAClC,SACJ,IAAK,OACDN,EAAWK,EAAcC,IACzB,SACJ,IAAK,OACDD,EAAcC,GACdL,GAAW,GACX,SACJ,IAAK,QACDI,EAAcC,GACdL,GAAW,GACX,SAER,IAAI,SAAShC,KAAKqC,EAAI3W,MAGtB,OAAO2P,EAAK,yBAA2BgH,EAAI3W,KAC/C,CA9OA,IAAmBgW,EA+OnB,OAAO1G,CACX,CAlcA5c,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtDP,EAAQsiB,WAAatiB,EAAQqiB,uBAAoB,EAIjDriB,EAAQqiB,kBAHR,SAA2BjV,EAASuP,EAAU8F,GAC1C,OAAOD,EAAOpV,EAASuP,EAAU8F,EACrC,EAQAziB,EAAQsiB,WAHR,SAAoBlV,GAChB,OAAOoV,EAAOpV,EAAS,KAAM,KACjC,C,gBCXA/M,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtDP,EAAQkf,kBAAe,EACvB,MAAMne,EAAY,EAAQ,KAmE1Bf,EAAQkf,aAlER,MACIhb,YAAYmb,EAAOmF,GACfpkB,KAAKokB,gBAAkBA,EACvBpkB,KAAKqkB,UAAY,IAAI/e,IACrBtF,KAAKskB,aAAe,IAAIhf,IACxBtF,KAAKukB,mBAAqB,IAAIjf,IAC9BtF,KAAKwkB,OAASvF,CAClB,CACA1V,UACI,IAAK,MAAMxC,KAAW/G,KAAKqkB,UAAUjf,SACjC2B,EAAQwC,SAEhB,CACA6V,SAASH,GACLjf,KAAKwkB,OAASvF,CAClB,CACAI,cACI,OAAOrf,KAAKwkB,OAAOnF,aACvB,CAIAe,WAAWrZ,EAASkD,GAChBjK,KAAKskB,aAAanhB,IAAI4D,EAAQ5C,UAAW4C,GACrCkD,GACAjK,KAAKukB,mBAAmBphB,IAAI4D,EAAQ5C,UAAW8F,EAEvD,CAIAe,OAAO7G,GACH,OAAOnE,KAAKskB,aAAaxf,IAAIX,EACjC,CAIA4F,WAAW0a,GACP,OAAOzkB,KAAKukB,mBAAmBzf,IAAI2f,EACvC,CAIAnY,cACI,OAAOtM,KAAKwkB,OAAOlY,aACvB,CAIA4B,WAAWV,GACP,OAAOxN,KAAKwkB,OAAOxf,MAAMwI,EAC7B,CAIAoS,0BAA0Bzb,EAAWgE,EAAiBnE,EAAmBoE,EAAYC,GACjF,IAAKrI,KAAKqkB,UAAUvQ,IAAI3P,GAAY,CAChC,IAAIkc,EAAargB,KAAKskB,aAAaxf,IAAIX,GACvC,IAAKkc,EACD,OAAO,KAEXrgB,KAAKqkB,UAAUlhB,IAAIgB,EAAWxD,EAAUsF,cAAc9B,EAAWkc,EAAYlY,EAAiBnE,EAAmBoE,EAAYC,EAA0BrI,WAAYA,KAAKokB,iBAC5K,CACA,OAAOpkB,KAAKqkB,UAAUvf,IAAIX,EAC9B,E,gBCnEJlE,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtDP,EAAQ8kB,aAAe9kB,EAAQ+kB,iBAAmB/kB,EAAQglB,aAAehlB,EAAQwH,YAAcxH,EAAQiX,eAAiBjX,EAAQka,aAAela,EAAQilB,gBAAkBjlB,EAAQklB,UAAYllB,EAAQmlB,YAAcnlB,EAAQolB,KAAOplB,EAAQkL,eAAiBlL,EAAQgL,iBAAmBhL,EAAQyX,YAAczX,EAAQ0Z,eAAY,EAChU,MAAMzV,EAAU,EAAQ,KAClB6a,EAAwB,EAAQ,KAChCuG,EAAsB,UACtBC,EAAuB,WACRC,OAAO,UAE5BvlB,EAAQ0Z,WAAa,EAErB1Z,EAAQyX,aAAe,EAIvBzX,EAAQgL,iBAHR,SAA0BD,GACtB,OAAOA,CACX,EAKA/K,EAAQkL,eAHR,SAAwBH,GACpB,OAAOA,CACX,EAEA,MAAMqa,EACFlhB,YAAYshB,EAAWza,EAAI4C,EAAM2M,GAC7Bla,KAAKolB,UAAYA,EACjBplB,KAAK2K,GAAKA,EACV3K,KAAKqlB,MAAQ9X,GAAQ,KACrBvN,KAAKslB,iBAAmBzhB,EAAQ0hB,YAAYC,YAAYxlB,KAAKqlB,OAC7DrlB,KAAKylB,aAAevL,GAAe,KACnCla,KAAK0lB,wBAA0B7hB,EAAQ0hB,YAAYC,YAAYxlB,KAAKylB,aACxE,CACItO,gBACA,MAAMwO,EAAW3lB,KAAKolB,UAAY,GAAGvhB,EAAQ+hB,SAAS5lB,KAAKolB,UAAU7I,aAAavc,KAAKolB,UAAU3H,OAAS,UAC1G,MAAO,GAAGzd,KAAK8D,YAAYyJ,QAAQvN,KAAK2K,QAAQgb,GACpD,CACAhZ,QAAQxB,EAAUmM,GACd,OAAKtX,KAAKslB,kBAAmC,OAAftlB,KAAKqlB,OAA+B,OAAbla,GAAwC,OAAnBmM,EAGnEzT,EAAQ0hB,YAAYM,gBAAgB7lB,KAAKqlB,MAAOla,EAAUmM,GAFtDtX,KAAKqlB,KAGpB,CACAlL,eAAehP,EAAUmM,GACrB,OAAKtX,KAAK0lB,yBAAiD,OAAtB1lB,KAAKylB,aAGnC5hB,EAAQ0hB,YAAYM,gBAAgB7lB,KAAKylB,aAActa,EAAUmM,GAF7DtX,KAAKylB,YAGpB,EAEJ7lB,EAAQolB,KAAOA,EACf,MAAMD,UAAoBC,EACtBlhB,YAAYshB,EAAWza,EAAI4C,EAAM2M,EAAa0B,GAC1CkK,MAAMV,EAAWza,EAAI4C,EAAM2M,GAC3Bla,KAAK4b,6BAA+BA,CACxC,CACArS,UAEA,CACAwc,gBAAgBhf,EAASif,GACrB,MAAM,IAAI7gB,MAAM,iBACpB,CACA2V,QAAQ/T,EAAS4T,GACb,MAAM,IAAIxV,MAAM,iBACpB,CACA6V,UAAUjU,EAAS4T,EAAgBC,EAAQC,GACvC,MAAM,IAAI1V,MAAM,iBACpB,EAEJvF,EAAQmlB,YAAcA,EACtB,MAAMD,UAAkBE,EACpBlhB,YAAYshB,EAAWza,EAAI4C,EAAMvI,EAAO0V,GACpCoL,MAAMV,EAAWza,EAAI4C,EAAM,MAC3BvN,KAAKimB,OAAS,IAAIrB,EAAa5f,EAAOhF,KAAK2K,IAC3C3K,KAAK0a,SAAWA,EAChB1a,KAAKkmB,wBAA0B,IACnC,CACA3c,UACQvJ,KAAKkmB,0BACLlmB,KAAKkmB,wBAAwB3c,UAC7BvJ,KAAKkmB,wBAA0B,KAEvC,CACIzL,uBACA,MAAO,GAAGza,KAAKimB,OAAO5J,QAC1B,CACA0J,gBAAgBhf,EAASif,GACrBA,EAAI5kB,KAAKpB,KAAKimB,OAClB,CACAnL,QAAQ/T,EAAS4T,GACb,OAAO3a,KAAKmmB,2BAA2Bpf,GAAS+T,QAAQ/T,EAC5D,CACAiU,UAAUjU,EAAS4T,EAAgBC,EAAQC,GACvC,OAAO7a,KAAKmmB,2BAA2Bpf,GAASiU,UAAUjU,EAAS6T,EAAQC,EAC/E,CACAsL,2BAA2Bpf,GAKvB,OAJK/G,KAAKkmB,0BACNlmB,KAAKkmB,wBAA0B,IAAIvB,EACnC3kB,KAAK+lB,gBAAgBhf,EAAS/G,KAAKkmB,0BAEhClmB,KAAKkmB,uBAChB,EAEJtmB,EAAQklB,UAAYA,EACpB,MAAMD,UAAwBG,EAC1BlhB,YAAYshB,EAAWza,EAAI4C,EAAM2M,EAAa5M,GAC1CwY,MAAMV,EAAWza,EAAI4C,EAAM2M,GAC3Bla,KAAKsN,SAAWA,EAASA,SACzBtN,KAAKomB,mBAAqB9Y,EAAS8Y,mBACnCpmB,KAAKkmB,wBAA0B,IACnC,CACA3c,UACQvJ,KAAKkmB,0BACLlmB,KAAKkmB,wBAAwB3c,UAC7BvJ,KAAKkmB,wBAA0B,KAEvC,CACAH,gBAAgBhf,EAASif,GACrB,IAAK,MAAMK,KAAWrmB,KAAKsN,SACVvG,EAAQ8D,QAAQwb,GACxBN,gBAAgBhf,EAASif,EAEtC,CACAlL,QAAQ/T,EAAS4T,GACb,OAAO3a,KAAKmmB,2BAA2Bpf,GAAS+T,QAAQ/T,EAC5D,CACAiU,UAAUjU,EAAS4T,EAAgBC,EAAQC,GACvC,OAAO7a,KAAKmmB,2BAA2Bpf,GAASiU,UAAUjU,EAAS6T,EAAQC,EAC/E,CACAsL,2BAA2Bpf,GAKvB,OAJK/G,KAAKkmB,0BACNlmB,KAAKkmB,wBAA0B,IAAIvB,EACnC3kB,KAAK+lB,gBAAgBhf,EAAS/G,KAAKkmB,0BAEhClmB,KAAKkmB,uBAChB,EAEJtmB,EAAQilB,gBAAkBA,EAC1B,MAAM/K,UAAqBkL,EACvBlhB,YAAYshB,EAAWza,EAAI4C,EAAM2M,EAAaoM,EAAOrM,EAAevC,EAAK+B,EAAa8M,EAAqBjZ,GACvGwY,MAAMV,EAAWza,EAAI4C,EAAM2M,GAC3Bla,KAAKwmB,OAAS,IAAI5B,EAAa0B,EAAOtmB,KAAK2K,IAC3C3K,KAAKia,cAAgBA,EACrBja,KAAKymB,KAAO,IAAI7B,EAAalN,GAAY,KAAW,GACpD1X,KAAKoa,qBAAuBpa,KAAKymB,KAAKC,kBACtC1mB,KAAKyZ,YAAcA,EACnBzZ,KAAKumB,oBAAsBA,IAAuB,EAClDvmB,KAAKsN,SAAWA,EAASA,SACzBtN,KAAKomB,mBAAqB9Y,EAAS8Y,mBACnCpmB,KAAKkmB,wBAA0B,IACnC,CACA3c,UACQvJ,KAAKkmB,0BACLlmB,KAAKkmB,wBAAwB3c,UAC7BvJ,KAAKkmB,wBAA0B,KAEvC,CACIlM,uBACA,MAAO,GAAGha,KAAKwmB,OAAOnK,QAC1B,CACI7C,qBACA,MAAO,GAAGxZ,KAAKymB,KAAKpK,QACxB,CACAhC,iCAAiClP,EAAUmM,GACvC,OAAOtX,KAAKymB,KAAKE,sBAAsBxb,EAAUmM,EACrD,CACAyO,gBAAgBhf,EAASif,GACrBA,EAAI5kB,KAAKpB,KAAKwmB,OAClB,CACA1L,QAAQ/T,EAAS4T,GACb,OAAO3a,KAAKmmB,2BAA2Bpf,EAAS4T,GAAgBG,QAAQ/T,EAC5E,CACAiU,UAAUjU,EAAS4T,EAAgBC,EAAQC,GACvC,OAAO7a,KAAKmmB,2BAA2Bpf,EAAS4T,GAAgBK,UAAUjU,EAAS6T,EAAQC,EAC/F,CACAsL,2BAA2Bpf,EAAS4T,GAChC,IAAK3a,KAAKkmB,wBAAyB,CAC/BlmB,KAAKkmB,wBAA0B,IAAIvB,EACnC,IAAK,MAAM0B,KAAWrmB,KAAKsN,SACVvG,EAAQ8D,QAAQwb,GACxBN,gBAAgBhf,EAAS/G,KAAKkmB,yBAEnClmB,KAAKumB,oBACLvmB,KAAKkmB,wBAAwB9kB,KAAKpB,KAAKymB,KAAKC,kBAAoB1mB,KAAKymB,KAAKrZ,QAAUpN,KAAKymB,MAGzFzmB,KAAKkmB,wBAAwBU,QAAQ5mB,KAAKymB,KAAKC,kBAAoB1mB,KAAKymB,KAAKrZ,QAAUpN,KAAKymB,KAEpG,CASA,OARIzmB,KAAKymB,KAAKC,oBACN1mB,KAAKumB,oBACLvmB,KAAKkmB,wBAAwBW,UAAU7mB,KAAKkmB,wBAAwB9jB,SAAW,EAAGuY,GAGlF3a,KAAKkmB,wBAAwBW,UAAU,EAAGlM,IAG3C3a,KAAKkmB,uBAChB,EAEJtmB,EAAQka,aAAeA,EACvB,MAAMjD,UAAuBmO,EACzBlhB,YAAYshB,EAAWza,EAAI4C,EAAM2M,EAAaoM,EAAOrM,EAAe6M,EAAQrP,EAAenK,GACvFwY,MAAMV,EAAWza,EAAI4C,EAAM2M,GAC3Bla,KAAKwmB,OAAS,IAAI5B,EAAa0B,EAAOtmB,KAAK2K,IAC3C3K,KAAKia,cAAgBA,EACrBja,KAAKyX,cAAgBA,EACrBzX,KAAK8mB,OAAS,IAAIlC,EAAakC,EAAQlnB,EAAQyX,aAC/CrX,KAAKsa,uBAAyBta,KAAK8mB,OAAOJ,kBAC1C1mB,KAAKsN,SAAWA,EAASA,SACzBtN,KAAKomB,mBAAqB9Y,EAAS8Y,mBACnCpmB,KAAKkmB,wBAA0B,KAC/BlmB,KAAK+mB,6BAA+B,IACxC,CACAxd,UACQvJ,KAAKkmB,0BACLlmB,KAAKkmB,wBAAwB3c,UAC7BvJ,KAAKkmB,wBAA0B,MAE/BlmB,KAAK+mB,+BACL/mB,KAAK+mB,6BAA6Bxd,UAClCvJ,KAAK+mB,6BAA+B,KAE5C,CACI/M,uBACA,MAAO,GAAGha,KAAKwmB,OAAOnK,QAC1B,CACIjF,uBACA,MAAO,GAAGpX,KAAK8mB,OAAOzK,QAC1B,CACA9B,mCAAmCpP,EAAUmM,GACzC,OAAOtX,KAAK8mB,OAAOH,sBAAsBxb,EAAUmM,EACvD,CACAyO,gBAAgBhf,EAASif,GACrBA,EAAI5kB,KAAKpB,KAAKwmB,OAClB,CACA1L,QAAQ/T,EAAS4T,GACb,OAAO3a,KAAKmmB,2BAA2Bpf,GAAS+T,QAAQ/T,EAC5D,CACAiU,UAAUjU,EAAS4T,EAAgBC,EAAQC,GACvC,OAAO7a,KAAKmmB,2BAA2Bpf,GAASiU,UAAUjU,EAAS6T,EAAQC,EAC/E,CACAsL,2BAA2Bpf,GACvB,IAAK/G,KAAKkmB,wBAAyB,CAC/BlmB,KAAKkmB,wBAA0B,IAAIvB,EACnC,IAAK,MAAM0B,KAAWrmB,KAAKsN,SACVvG,EAAQ8D,QAAQwb,GACxBN,gBAAgBhf,EAAS/G,KAAKkmB,wBAE3C,CACA,OAAOlmB,KAAKkmB,uBAChB,CACAjL,aAAalU,EAAS4T,GAClB,OAAO3a,KAAKgnB,gCAAgCjgB,EAAS4T,GAAgBG,QAAQ/T,EACjF,CACAmU,eAAenU,EAAS4T,EAAgBC,EAAQC,GAC5C,OAAO7a,KAAKgnB,gCAAgCjgB,EAAS4T,GAAgBK,UAAUjU,EAAS6T,EAAQC,EACpG,CACAmM,gCAAgCjgB,EAAS4T,GAQrC,OAPK3a,KAAK+mB,+BACN/mB,KAAK+mB,6BAA+B,IAAIpC,EACxC3kB,KAAK+mB,6BAA6B3lB,KAAKpB,KAAK8mB,OAAOJ,kBAAoB1mB,KAAK8mB,OAAO1Z,QAAUpN,KAAK8mB,SAElG9mB,KAAK8mB,OAAOJ,mBACZ1mB,KAAK+mB,6BAA6BF,UAAU,EAAGlM,GAAkC,KAE9E3a,KAAK+mB,4BAChB,EAEJnnB,EAAQiX,eAAiBA,EACzB,MAAMzP,EACFsG,yBAAyBuZ,EAAQ7B,EAAW7X,EAAM2M,EAAa0B,GAC3D,OAAOqL,EAAOvc,cAAcC,GACjB,IAAIoa,EAAYK,EAAWza,EAAI4C,EAAM2M,EAAa0B,IAEjE,CACAlO,yBAAyBwZ,EAAMD,EAAQ3f,GAuBnC,OAtBK4f,EAAKvc,IACNsc,EAAOvc,cAAcC,IAEjB,GADAuc,EAAKvc,GAAKA,EACNuc,EAAKliB,MACL,OAAO,IAAI8f,EAAUoC,EAAK7Z,wBAAyB6Z,EAAKvc,GAAIuc,EAAK3Z,KAAM2Z,EAAKliB,MAAOoC,EAAY+f,iBAAiBD,EAAKxM,SAAUuM,EAAQ3f,IAE3I,QAA0B,IAAf4f,EAAKZ,MAAuB,CAC/BY,EAAK5f,aACLA,EAAazD,EAAQ+Q,aAAa,CAAC,EAAGtN,EAAY4f,EAAK5f,aAE3D,IAAIgG,EAAW4Z,EAAK5Z,SAIpB,YAHwB,IAAbA,GAA4B4Z,EAAKrS,UACxCvH,EAAW,CAAC,CAAEuH,QAASqS,EAAKrS,WAEzB,IAAIgQ,EAAgBqC,EAAK7Z,wBAAyB6Z,EAAKvc,GAAIuc,EAAK3Z,KAAM2Z,EAAKhN,YAAa9S,EAAYggB,iBAAiB9Z,EAAU2Z,EAAQ3f,GAClJ,CACA,OAAI4f,EAAKG,MACE,IAAIxQ,EAAeqQ,EAAK7Z,wBAAyB6Z,EAAKvc,GAAIuc,EAAK3Z,KAAM2Z,EAAKhN,YAAagN,EAAKZ,MAAOlf,EAAY+f,iBAAiBD,EAAKjN,eAAiBiN,EAAKxM,SAAUuM,EAAQ3f,GAAa4f,EAAKG,MAAOjgB,EAAY+f,iBAAiBD,EAAKzP,eAAiByP,EAAKxM,SAAUuM,EAAQ3f,GAAaF,EAAYggB,iBAAiBF,EAAK5Z,SAAU2Z,EAAQ3f,IAErV,IAAIwS,EAAaoN,EAAK7Z,wBAAyB6Z,EAAKvc,GAAIuc,EAAK3Z,KAAM2Z,EAAKhN,YAAagN,EAAKZ,MAAOlf,EAAY+f,iBAAiBD,EAAKjN,eAAiBiN,EAAKxM,SAAUuM,EAAQ3f,GAAa4f,EAAKxP,IAAKtQ,EAAY+f,iBAAiBD,EAAKzN,aAAeyN,EAAKxM,SAAUuM,EAAQ3f,GAAa4f,EAAKX,oBAAqBnf,EAAYggB,iBAAiBF,EAAK5Z,SAAU2Z,EAAQ3f,GAAY,IAGzX4f,EAAKvc,EAChB,CACA+C,wBAAwBgN,EAAUuM,EAAQ3f,GACtC,IAAIpF,EAAI,GACR,GAAIwY,EAAU,CAEV,IAAI4M,EAAmB,EACvB,IAAK,MAAMC,KAAa7M,EAAU,CAC9B,GAAkB,4BAAd6M,EACA,SAEJ,MAAMC,EAAmBpJ,SAASmJ,EAAW,IACzCC,EAAmBF,IACnBA,EAAmBE,EAE3B,CAEA,IAAK,IAAI9lB,EAAI,EAAGA,GAAK4lB,EAAkB5lB,IACnCQ,EAAER,GAAK,KAGX,IAAK,MAAM6lB,KAAa7M,EAAU,CAC9B,GAAkB,4BAAd6M,EACA,SAEJ,MAAMC,EAAmBpJ,SAASmJ,EAAW,IAC7C,IAAI3L,EAA+B,EAC/BlB,EAAS6M,GAAWja,WACpBsO,EAA+BxU,EAAYC,kBAAkBqT,EAAS6M,GAAYN,EAAQ3f,IAE9FpF,EAAEslB,GAAoBpgB,EAAYqgB,kBAAkBR,EAAQvM,EAAS6M,GAAWla,wBAAyBqN,EAAS6M,GAAWha,KAAMmN,EAAS6M,GAAWrN,YAAa0B,EACxK,CACJ,CACA,OAAO1Z,CACX,CACAwL,wBAAwBJ,EAAU2Z,EAAQ3f,GACtC,IAAIpF,EAAI,GACR,GAAIoL,EACA,IAAK,IAAI5L,EAAI,EAAGuG,EAAMqF,EAASlL,OAAQV,EAAIuG,EAAKvG,IAAK,CACjD,MAAM2kB,EAAU/Y,EAAS5L,GACzB,IAAIyF,GAAU,EACd,GAAIkf,EAAQxR,QAAS,CACjB,MAAMjB,EAAY8K,EAAsBhM,aAAa2T,EAAQxR,SAC7D,OAAQjB,EAAUkB,MACd,KAAK,EACL,KAAK,EACD3N,EAASC,EAAYC,kBAAkBC,EAAW+e,EAAQxR,SAAUoS,EAAQ3f,GAC5E,MACJ,KAAK,EAED,IAAIogB,EAAoBpgB,EAAWsM,EAAUP,UACzCqU,IACAvgB,EAASC,EAAYC,kBAAkBqgB,EAAmBT,EAAQ3f,IAKtE,MACJ,KAAK,EACL,KAAK,EACD,MAAMqgB,EAAsB/T,EAAUzP,UAChCyjB,EAA4C,IAAnBhU,EAAUkB,KACnClB,EAAUP,SACV,KAEAwU,EAAkBZ,EAAOpd,mBAAmB8d,EAAqBrgB,GACvE,GAAIugB,EACA,GAAID,EAAwB,CACxB,IAAIE,EAAuBD,EAAgBvgB,WAAWsgB,GAClDE,IACA3gB,EAASC,EAAYC,kBAAkBygB,EAAsBb,EAAQY,EAAgBvgB,YAK7F,MAEIH,EAASC,EAAYC,kBAAkBwgB,EAAgBvgB,WAAW2E,MAAOgb,EAAQY,EAAgBvgB,YAQrH,MAEIH,EAASC,EAAYC,kBAAkBgf,EAASY,EAAQ3f,GAE5D,IAAgB,IAAZH,EAAe,CACf,MAAMN,EAAOogB,EAAOpc,QAAQ1D,GAC5B,IAAI4gB,GAAW,EAMf,IALIlhB,aAAgBge,GAAmBhe,aAAgBiT,GAAgBjT,aAAgBgQ,IAC/EhQ,EAAKuf,oBAA+C,IAAzBvf,EAAKyG,SAASlL,SACzC2lB,GAAW,GAGfA,EAEA,SAEJ7lB,EAAEd,KAAK+F,EACX,CACJ,CAEJ,MAAO,CACHmG,SAAUpL,EACVkkB,oBAAsB9Y,EAAWA,EAASlL,OAAS,KAAOF,EAAEE,OAEpE,EAEJxC,EAAQwH,YAAcA,EACtB,MAAMwd,EACF9gB,YAAYkkB,EAAc7gB,GACtB,GAAI6gB,EAAc,CACd,MAAM/f,EAAM+f,EAAa5lB,OACzB,IAAI6lB,EAAgB,EAChBC,EAAS,GACTC,GAAY,EAChB,IAAK,IAAI/L,EAAM,EAAGA,EAAMnU,EAAKmU,IAEzB,GAAW,OADA4L,EAAahH,OAAO5E,IAEvBA,EAAM,EAAInU,EAAK,CACf,MAAMmgB,EAASJ,EAAahH,OAAO5E,EAAM,GAC1B,MAAXgM,GACAF,EAAO9mB,KAAK4mB,EAAa3V,UAAU4V,EAAe7L,IAClD8L,EAAO9mB,KAAK,oBACZ6mB,EAAgB7L,EAAM,GAEN,MAAXgM,GAA6B,MAAXA,IACvBD,GAAY,GAEhB/L,GACJ,CAGRpc,KAAKmoB,UAAYA,EACK,IAAlBF,EAEAjoB,KAAKqc,OAAS2L,GAGdE,EAAO9mB,KAAK4mB,EAAa3V,UAAU4V,EAAehgB,IAClDjI,KAAKqc,OAAS6L,EAAOtiB,KAAK,IAElC,MAEI5F,KAAKmoB,WAAY,EACjBnoB,KAAKqc,OAAS2L,EAEdhoB,KAAKmoB,UACLnoB,KAAKqoB,aAAeroB,KAAKsoB,oBAGzBtoB,KAAKqoB,aAAe,KAExBroB,KAAKmH,OAASA,EACdnH,KAAK0mB,kBAAoBzB,EAAoBpD,KAAK7hB,KAAKqc,OAE3D,CACAjP,QACI,OAAO,IAAIwX,EAAa5kB,KAAKqc,OAAQrc,KAAKmH,OAC9C,CACA0f,UAAU0B,GACFvoB,KAAKqc,SAAWkM,IAGpBvoB,KAAKqc,OAASkM,EACVvoB,KAAKmoB,YACLnoB,KAAKqoB,aAAeroB,KAAKsoB,qBAEjC,CACA3B,sBAAsBxb,EAAUmM,GAC5B,IAAIkR,EAAiBlR,EAAe9R,KAAKijB,GAC9Btd,EAASkH,UAAUoW,EAAQlR,MAAOkR,EAAQ/Q,OAGrD,OADAwN,EAAqBtd,UAAY,EAC1B5H,KAAKqc,OAAO/J,QAAQ4S,GAAsB,CAAClgB,EAAO0jB,IAC9C7kB,EAAQ4B,uBAAuB+iB,EAAepK,SAASsK,EAAI,MAAQ,KAElF,CACAJ,oBACI,IAIIlM,EAAKnU,EAAK0gB,EAAIP,EAJdQ,EAAe,GACfC,EAAe,GACfC,EAAe,GACfC,EAAe,GAEnB,IAAK3M,EAAM,EAAGnU,EAAMjI,KAAKqc,OAAOja,OAAQga,EAAMnU,EAAKmU,IAC/CuM,EAAK3oB,KAAKqc,OAAO2E,OAAO5E,GACxBwM,EAAaxM,GAAOuM,EACpBE,EAAazM,GAAOuM,EACpBG,EAAa1M,GAAOuM,EACpBI,EAAa3M,GAAOuM,EACT,OAAPA,GACIvM,EAAM,EAAInU,IACVmgB,EAASpoB,KAAKqc,OAAO2E,OAAO5E,EAAM,GACnB,MAAXgM,GACAQ,EAAaxM,EAAM,GAAK,IACxByM,EAAazM,EAAM,GAAK,IACxB0M,EAAa1M,EAAM,GAAK,IACxB2M,EAAa3M,EAAM,GAAK,KAER,MAAXgM,GACLQ,EAAaxM,EAAM,GAAK,IACxByM,EAAazM,EAAM,GAAK,IACxB0M,EAAa1M,EAAM,GAAK,IACxB2M,EAAa3M,EAAM,GAAK,MAGxBwM,EAAaxM,EAAM,GAAKgM,EACxBS,EAAazM,EAAM,GAAKgM,EACxBU,EAAa1M,EAAM,GAAKgM,EACxBW,EAAa3M,EAAM,GAAKgM,GAE5BhM,KAIZ,MAAO,CACH4M,MAAOJ,EAAahjB,KAAK,IACzBqjB,MAAOJ,EAAajjB,KAAK,IACzBsjB,MAAOJ,EAAaljB,KAAK,IACzBujB,MAAOJ,EAAanjB,KAAK,IAEjC,CACAwjB,eAAexO,EAAQC,GACnB,OAAK7a,KAAKmoB,WAAcnoB,KAAKqoB,aAGzBzN,EACIC,EACO7a,KAAKqoB,aAAac,MAGlBnpB,KAAKqoB,aAAaa,MAIzBrO,EACO7a,KAAKqoB,aAAaY,MAGlBjpB,KAAKqoB,aAAaW,MAftBhpB,KAAKqc,MAkBpB,EAEJzc,EAAQglB,aAAeA,EACvB,MAAMD,EACF7gB,cACI9D,KAAKqpB,OAAS,GACdrpB,KAAKspB,aAAc,EACnBtpB,KAAKupB,QAAU,KACfvpB,KAAKqoB,aAAe,CAChBW,MAAO,KACPC,MAAO,KACPC,MAAO,KACPC,MAAO,KAEf,CACA5f,UACIvJ,KAAKwpB,gBACT,CACAA,iBACQxpB,KAAKupB,UACLvpB,KAAKupB,QAAQhgB,UACbvJ,KAAKupB,QAAU,MAEfvpB,KAAKqoB,aAAaW,QAClBhpB,KAAKqoB,aAAaW,MAAMzf,UACxBvJ,KAAKqoB,aAAaW,MAAQ,MAE1BhpB,KAAKqoB,aAAaY,QAClBjpB,KAAKqoB,aAAaY,MAAM1f,UACxBvJ,KAAKqoB,aAAaY,MAAQ,MAE1BjpB,KAAKqoB,aAAaa,QAClBlpB,KAAKqoB,aAAaa,MAAM3f,UACxBvJ,KAAKqoB,aAAaa,MAAQ,MAE1BlpB,KAAKqoB,aAAac,QAClBnpB,KAAKqoB,aAAac,MAAM5f,UACxBvJ,KAAKqoB,aAAac,MAAQ,KAElC,CACA/nB,KAAKqoB,GACDzpB,KAAKqpB,OAAOjoB,KAAKqoB,GACjBzpB,KAAKspB,YAActpB,KAAKspB,aAAeG,EAAKtB,SAChD,CACAvB,QAAQ6C,GACJzpB,KAAKqpB,OAAOzC,QAAQ6C,GACpBzpB,KAAKspB,YAActpB,KAAKspB,aAAeG,EAAKtB,SAChD,CACA/lB,SACI,OAAOpC,KAAKqpB,OAAOjnB,MACvB,CACAykB,UAAU6C,EAAOnB,GACTvoB,KAAKqpB,OAAOK,GAAOrN,SAAWkM,IAE9BvoB,KAAKwpB,iBACLxpB,KAAKqpB,OAAOK,GAAO7C,UAAU0B,GAErC,CACAzN,QAAQvS,GACJ,IAAKvI,KAAKupB,QAAS,CACf,IAAII,EAAU3pB,KAAKqpB,OAAO7jB,KAAIokB,GAAKA,EAAEvN,SACrCrc,KAAKupB,QAAU,IAAI7E,EAAanc,EAASohB,EAAS3pB,KAAKqpB,OAAO7jB,KAAIokB,GAAKA,EAAEziB,SAC7E,CACA,OAAOnH,KAAKupB,OAChB,CACAvO,UAAUzS,EAASqS,EAAQC,GACvB,OAAK7a,KAAKspB,YAIF1O,EACIC,GACK7a,KAAKqoB,aAAac,QACnBnpB,KAAKqoB,aAAac,MAAQnpB,KAAK6pB,gBAAgBthB,EAASqS,EAAQC,IAE7D7a,KAAKqoB,aAAac,QAGpBnpB,KAAKqoB,aAAaa,QACnBlpB,KAAKqoB,aAAaa,MAAQlpB,KAAK6pB,gBAAgBthB,EAASqS,EAAQC,IAE7D7a,KAAKqoB,aAAaa,OAIzBrO,GACK7a,KAAKqoB,aAAaY,QACnBjpB,KAAKqoB,aAAaY,MAAQjpB,KAAK6pB,gBAAgBthB,EAASqS,EAAQC,IAE7D7a,KAAKqoB,aAAaY,QAGpBjpB,KAAKqoB,aAAaW,QACnBhpB,KAAKqoB,aAAaW,MAAQhpB,KAAK6pB,gBAAgBthB,EAASqS,EAAQC,IAE7D7a,KAAKqoB,aAAaW,OA5B1BhpB,KAAK8a,QAAQvS,EAgC5B,CACAshB,gBAAgBthB,EAASqS,EAAQC,GAC7B,IAAI8O,EAAU3pB,KAAKqpB,OAAO7jB,KAAIokB,GAAKA,EAAER,eAAexO,EAAQC,KAC5D,OAAO,IAAI6J,EAAanc,EAASohB,EAAS3pB,KAAKqpB,OAAO7jB,KAAIokB,GAAKA,EAAEziB,SACrE,EAEJvH,EAAQ+kB,iBAAmBA,EAC3B,MAAMD,EACF5gB,YAAYyE,EAASohB,EAASjV,GAC1B1U,KAAK2pB,QAAUA,EACf3pB,KAAK0U,MAAQA,EACb1U,KAAK8pB,QAAUvhB,EAAQiB,kBAAkBmgB,EAC7C,CACApgB,UACwC,mBAAzBvJ,KAAK8pB,QAAQvgB,SACpBvJ,KAAK8pB,QAAQvgB,SAErB,CACApH,WACI,MAAMD,EAAI,GACV,IAAK,IAAIR,EAAI,EAAGuG,EAAMjI,KAAK0U,MAAMtS,OAAQV,EAAIuG,EAAKvG,IAC9CQ,EAAEd,KAAK,QAAUpB,KAAK0U,MAAMhT,GAAK,KAAO1B,KAAK2pB,QAAQjoB,IAEzD,OAAOQ,EAAE0D,KAAK,KAClB,CACAsR,kBAAkB6S,EAAQC,EAAe7O,GACrC,MAAMxU,EAAS3G,KAAK8pB,QAAQ5S,kBAAkB6S,EAAQC,EAAe7O,GACrE,OAAKxU,EAGE,CACHQ,OAAQnH,KAAK0U,MAAM/N,EAAO+iB,OAC1BpS,eAAgB3Q,EAAO2Q,gBAJhB,IAMf,EAEJ1X,EAAQ8kB,aAAeA,C,gBClqBvBzkB,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtDP,EAAQqqB,iBAAmBrqB,EAAQsqB,qBAAuBtqB,EAAQuqB,SAAWvqB,EAAQwqB,kBAAoBxqB,EAAQyqB,gBAAkBzqB,EAAQ0qB,WAAa1qB,EAAQ2qB,gBAAkB3qB,EAAQmO,WAAanO,EAAQmf,WAAQ,EACvN,MAAMlb,EAAU,EAAQ,KACxB,MAAMkb,EACFjb,YAAY0mB,EAAWC,EAAWC,GAC9B1qB,KAAKwqB,UAAYA,EACjBxqB,KAAKyqB,UAAYA,EACjBzqB,KAAK0qB,MAAQA,EACb1qB,KAAK2qB,iBAAmB,IAAI9mB,EAAQK,UAAUC,GAAcnE,KAAK0qB,MAAM1lB,MAAMb,IACjF,CACAuJ,0BAA0B2O,EAAQ6C,GAC9B,OAAOlf,KAAK4qB,sBAAsBN,EAAWjO,GAAS6C,EAC1D,CACAxR,6BAA6B2O,EAAQ6C,GACjC,OA2NR,SAAiC2L,EAAkBL,GAE/CK,EAAiBnlB,MAAK,CAAC8I,EAAGC,KACtB,IAAIvM,EAAI2B,EAAQinB,OAAOtc,EAAEzJ,MAAO0J,EAAE1J,OAClC,OAAU,IAAN7C,EACOA,GAEXA,EAAI2B,EAAQknB,UAAUvc,EAAEwc,aAAcvc,EAAEuc,cAC9B,IAAN9oB,EACOA,EAEJsM,EAAEkb,MAAQjb,EAAEib,MAAK,IAG5B,IAAIuB,EAAmB,EACnBC,EAAoB,UACpBC,EAAoB,UACxB,KAAON,EAAiBzoB,QAAU,GAAmC,KAA9ByoB,EAAiB,GAAG9lB,OAAc,CACrE,IAAIqmB,EAAmBP,EAAiBQ,SACJ,IAAhCD,EAAiB1oB,YACjBuoB,EAAmBG,EAAiB1oB,WAEJ,OAAhC0oB,EAAiBxoB,aACjBsoB,EAAoBE,EAAiBxoB,YAEL,OAAhCwoB,EAAiBtoB,aACjBqoB,EAAoBC,EAAiBtoB,WAE7C,CACA,IAAIoc,EAAW,IAAIiL,EAASK,GACxBc,EAAW,IAAIf,EAAgBU,EAAkB/L,EAASqM,MAAML,GAAoBhM,EAASqM,MAAMJ,IACnGzrB,EAAO,IAAIuqB,EAAiB,IAAIC,EAAqB,EAAG,MAAO,EAAgB,EAAG,GAAI,IAC1F,IAAK,IAAIxoB,EAAI,EAAGuG,EAAM4iB,EAAiBzoB,OAAQV,EAAIuG,EAAKvG,IAAK,CACzD,IAAImF,EAAOgkB,EAAiBnpB,GAC5BhC,EAAK8rB,OAAO,EAAG3kB,EAAK9B,MAAO8B,EAAKmkB,aAAcnkB,EAAKnE,UAAWwc,EAASqM,MAAM1kB,EAAKjE,YAAasc,EAASqM,MAAM1kB,EAAK/D,YACvH,CACA,OAAO,IAAIic,EAAMG,EAAUoM,EAAU5rB,EACzC,CAhQe+rB,CAAwBpP,EAAQ6C,EAC3C,CACAG,cACI,OAAOrf,KAAKwqB,UAAUnL,aAC1B,CACA/S,cACI,OAAOtM,KAAKyqB,SAChB,CACAzlB,MAAMwI,GACF,GAAkB,OAAdA,EACA,OAAOxN,KAAKyqB,UAEhB,MAAMtmB,EAAYqJ,EAAUrJ,UAEtBunB,EADuB1rB,KAAK2qB,iBAAiB7lB,IAAIX,GACZwnB,MAAMC,GA8DzD,SAAuCpe,EAAWwd,GAC9C,GAAqB,OAAjBA,EACA,OAAO,EAEX,IAAItB,EAAQ,EACRmC,EAAeb,EAAatB,GAChC,KAAOlc,GAAW,CACd,GAAIse,EAActe,EAAUrJ,UAAW0nB,GAAe,CAElD,GADAnC,IACIA,IAAUsB,EAAa5oB,OACvB,OAAO,EAEXypB,EAAeb,EAAatB,EAChC,CACAlc,EAAYA,EAAUrM,MAC1B,CACA,OAAO,CACX,CA/E+D4qB,CAA8Bve,EAAUrM,OAAQyqB,EAAEZ,gBACzG,OAAKU,EAGE,IAAInB,EAAgBmB,EAAchpB,UAAWgpB,EAAc9oB,WAAY8oB,EAAc5oB,YAFjF,IAGf,EAEJlD,EAAQmf,MAAQA,EAChB,MAAMhR,EACFjK,YAAY3C,EAAQgD,GAChBnE,KAAKmB,OAASA,EACdnB,KAAKmE,UAAYA,CACrB,CACAuJ,YAAYse,EAAMle,GACd,IAAK,MAAMP,KAAQO,EACfke,EAAO,IAAIje,EAAWie,EAAMze,GAEhC,OAAOye,CACX,CACAte,eAAeue,GACX,IAAItlB,EAAS,KACb,IAAK,IAAIjF,EAAI,EAAGA,EAAIuqB,EAAS7pB,OAAQV,IACjCiF,EAAS,IAAIoH,EAAWpH,EAAQslB,EAASvqB,IAE7C,OAAOiF,CACX,CACAvF,KAAK+C,GACD,OAAO,IAAI4J,EAAW/N,KAAMmE,EAChC,CACAmL,cACI,IAAIma,EAAOzpB,KACX,MAAM2G,EAAS,GACf,KAAO8iB,GACH9iB,EAAOvF,KAAKqoB,EAAKtlB,WACjBslB,EAAOA,EAAKtoB,OAGhB,OADAwF,EAAOrF,UACAqF,CACX,CACAxE,WACI,OAAOnC,KAAKsP,cAAc1J,KAAK,IACnC,CACAsmB,QAAQ3d,GACJ,OAAIvO,OAASuO,GAGO,OAAhBvO,KAAKmB,QAGFnB,KAAKmB,OAAO+qB,QAAQ3d,EAC/B,CACAgB,sBAAsBpC,GAClB,MAAMxG,EAAS,GACf,IAAI8iB,EAAOzpB,KACX,KAAOypB,GAAQA,IAAStc,GACpBxG,EAAOvF,KAAKqoB,EAAKtlB,WACjBslB,EAAOA,EAAKtoB,OAEhB,OAAOsoB,IAAStc,EAAOxG,EAAOrF,eAAYmO,CAC9C,EAqBJ,SAASqc,EAAc3nB,EAAW0nB,GAC9B,OAAOA,IAAiB1nB,GAAcA,EAAUgoB,WAAWN,IAAoD,MAAnC1nB,EAAU0nB,EAAazpB,OACvG,CArBAxC,EAAQmO,WAAaA,EAsBrB,MAAMwc,EACFzmB,YAAYpB,EAAW8J,EAAcC,GACjCzM,KAAK0C,UAAYA,EACjB1C,KAAKwM,aAAeA,EACpBxM,KAAKyM,aAAeA,CACxB,EAMJ,SAAS6d,EAAWjO,GAChB,IAAKA,EACD,MAAO,GAEX,IAAKA,EAAO+P,WAAa5X,MAAMC,QAAQ4H,EAAO+P,UAC1C,MAAO,GAEX,IAAIA,EAAW/P,EAAO+P,SAClBzlB,EAAS,GAAI0lB,EAAY,EAC7B,IAAK,IAAI3qB,EAAI,EAAGuG,EAAMmkB,EAAShqB,OAAQV,EAAIuG,EAAKvG,IAAK,CACjD,IAIIiG,EAJA2kB,EAAQF,EAAS1qB,GACrB,IAAK4qB,EAAMF,SACP,SAGJ,GAA2B,iBAAhBE,EAAMvnB,MAAoB,CACjC,IAAIwnB,EAASD,EAAMvnB,MAEnBwnB,EAASA,EAAOja,QAAQ,QAAS,IAEjCia,EAASA,EAAOja,QAAQ,QAAS,IACjC3K,EAAS4kB,EAAOvd,MAAM,IAC1B,MAEIrH,EADK6M,MAAMC,QAAQ6X,EAAMvnB,OAChBunB,EAAMvnB,MAGN,CAAC,IAEd,IAAIrC,GAAa,EACjB,GAAwC,iBAA7B4pB,EAAMF,SAAS1pB,UAAwB,CAC9CA,EAAY,EACZ,IAAIupB,EAAWK,EAAMF,SAAS1pB,UAAUsM,MAAM,KAC9C,IAAK,IAAIwd,EAAI,EAAGC,EAAOR,EAAS7pB,OAAQoqB,EAAIC,EAAMD,IAE9C,OADcP,EAASO,IAEnB,IAAK,SACD9pB,GAAwB,EACxB,MACJ,IAAK,OACDA,GAAwB,EACxB,MACJ,IAAK,YACDA,GAAwB,EACxB,MACJ,IAAK,gBACDA,GAAwB,EAIxC,CACA,IAAIE,EAAa,KACwB,iBAA9B0pB,EAAMF,SAASxpB,YAA2BiB,EAAQ6oB,gBAAgBJ,EAAMF,SAASxpB,cACxFA,EAAa0pB,EAAMF,SAASxpB,YAEhC,IAAIE,EAAa,KACwB,iBAA9BwpB,EAAMF,SAAStpB,YAA2Be,EAAQ6oB,gBAAgBJ,EAAMF,SAAStpB,cACxFA,EAAawpB,EAAMF,SAAStpB,YAEhC,IAAK,IAAI0pB,EAAI,EAAGC,EAAO9kB,EAAOvF,OAAQoqB,EAAIC,EAAMD,IAAK,CACjD,IACIP,EADStkB,EAAO6kB,GAAGxI,OACDhV,MAAM,KACxBjK,EAAQknB,EAASA,EAAS7pB,OAAS,GACnC4oB,EAAe,KACfiB,EAAS7pB,OAAS,IAClB4oB,EAAeiB,EAASU,MAAM,EAAGV,EAAS7pB,OAAS,GACnD4oB,EAAa1pB,WAEjBqF,EAAO0lB,KAAe,IAAIhC,EAAgBtlB,EAAOimB,EAActpB,EAAGgB,EAAWE,EAAYE,EAC7F,CACJ,CACA,OAAO6D,CACX,CA5EA/G,EAAQ2qB,gBAAkBA,EA6E1B3qB,EAAQ0qB,WAAaA,EACrB,MAAMD,EACFvmB,YAAYiB,EAAOimB,EAActB,EAAOhnB,EAAWE,EAAYE,GAC3D9C,KAAK+E,MAAQA,EACb/E,KAAKgrB,aAAeA,EACpBhrB,KAAK0pB,MAAQA,EACb1pB,KAAK0C,UAAYA,EACjB1C,KAAK4C,WAAaA,EAClB5C,KAAK8C,WAAaA,CACtB,EAEJlD,EAAQyqB,gBAAkBA,EAuB1BzqB,EAAQwqB,kBAtBR,SAA2B1nB,GACvB,IAAmB,IAAfA,EACA,MAAO,UAEX,IAAIkqB,EAAQ,GAgBZ,OAfgB,EAAZlqB,IACAkqB,GAAS,WAEG,EAAZlqB,IACAkqB,GAAS,SAEG,EAAZlqB,IACAkqB,GAAS,cAEG,EAAZlqB,IACAkqB,GAAS,kBAEC,KAAVA,IACAA,EAAQ,QAELA,EAAM5I,MACjB,EA2CA,MAAMmG,EACFrmB,YAAY0mB,GAIR,GAHAxqB,KAAK6sB,aAAe,EACpB7sB,KAAK8sB,UAAY,GACjB9sB,KAAK+sB,UAAY9sB,OAAOyV,OAAO,MAC3BlB,MAAMC,QAAQ+V,GAAY,CAC1BxqB,KAAKgtB,WAAY,EACjB,IAAK,IAAItrB,EAAI,EAAGuG,EAAMuiB,EAAUpoB,OAAQV,EAAIuG,EAAKvG,IAC7C1B,KAAK+sB,UAAUvC,EAAU9oB,IAAMA,EAC/B1B,KAAK8sB,UAAUprB,GAAK8oB,EAAU9oB,EAEtC,MAEI1B,KAAKgtB,WAAY,CAEzB,CACAzB,MAAM0B,GACF,GAAc,OAAVA,EACA,OAAO,EAEXA,EAAQA,EAAMC,cACd,IAAI/sB,EAAQH,KAAK+sB,UAAUE,GAC3B,GAAI9sB,EACA,OAAOA,EAEX,GAAIH,KAAKgtB,UACL,MAAM,IAAI7nB,MAAM,gCAAgC8nB,KAKpD,OAHA9sB,IAAUH,KAAK6sB,aACf7sB,KAAK+sB,UAAUE,GAAS9sB,EACxBH,KAAK8sB,UAAU3sB,GAAS8sB,EACjB9sB,CACX,CACAkf,cACI,OAAOrf,KAAK8sB,UAAUH,MAAM,EAChC,EAEJ/sB,EAAQuqB,SAAWA,EACnB,MAAMD,EACFpmB,YAAYqpB,EAAYnC,EAActoB,EAAWE,EAAYE,GACzD9C,KAAKmtB,WAAaA,EAClBntB,KAAKgrB,aAAeA,EACpBhrB,KAAK0C,UAAYA,EACjB1C,KAAK4C,WAAaA,EAClB5C,KAAK8C,WAAaA,CACtB,CACAsK,QACI,OAAO,IAAI8c,EAAqBlqB,KAAKmtB,WAAYntB,KAAKgrB,aAAchrB,KAAK0C,UAAW1C,KAAK4C,WAAY5C,KAAK8C,WAC9G,CACA4K,gBAAgB0f,GACZ,IAAIlrB,EAAI,GACR,IAAK,IAAIR,EAAI,EAAGuG,EAAMmlB,EAAIhrB,OAAQV,EAAIuG,EAAKvG,IACvCQ,EAAER,GAAK0rB,EAAI1rB,GAAG0L,QAElB,OAAOlL,CACX,CACAmrB,gBAAgBF,EAAYzqB,EAAWE,EAAYE,GAC3C9C,KAAKmtB,WAAaA,EAClBnqB,QAAQC,IAAI,wBAGZjD,KAAKmtB,WAAaA,GAGH,IAAfzqB,IACA1C,KAAK0C,UAAYA,GAEF,IAAfE,IACA5C,KAAK4C,WAAaA,GAEH,IAAfE,IACA9C,KAAK8C,WAAaA,EAE1B,EAEJlD,EAAQsqB,qBAAuBA,EAC/B,MAAMD,EACFnmB,YAAYwpB,EAAWC,EAAwB,GAAIC,EAAY,CAAC,GAC5DxtB,KAAKstB,UAAYA,EACjBttB,KAAKwtB,UAAYA,EACjBxtB,KAAKytB,uBAAyBF,CAClC,CACA7f,0BAA0B0f,GACtB,OAAmB,IAAfA,EAAIhrB,QAGRgrB,EAAI1nB,KAAK1F,KAAK0tB,mBAFHN,CAIf,CACA1f,yBAAyBc,EAAGC,GACxB,GAAID,EAAE2e,aAAe1e,EAAE0e,WAAY,CAC/B,MAAMQ,EAAgBnf,EAAEwc,aAClB4C,EAAgBnf,EAAEuc,aACxB,IAAI6C,EAAqC,OAAlBF,EAAyB,EAAIA,EAAcvrB,OAC9D0rB,EAAqC,OAAlBF,EAAyB,EAAIA,EAAcxrB,OAClE,GAAIyrB,IAAqBC,EACrB,IAAK,IAAIpsB,EAAI,EAAGA,EAAImsB,EAAkBnsB,IAAK,CACvC,MAAMqsB,EAAOJ,EAAcjsB,GAAGU,OACxB4rB,EAAOJ,EAAclsB,GAAGU,OAC9B,GAAI2rB,IAASC,EACT,OAAOA,EAAOD,CAEtB,CAEJ,OAAOD,EAAmBD,CAC9B,CACA,OAAOpf,EAAE0e,WAAa3e,EAAE2e,UAC5B,CACAnoB,MAAMD,GACF,GAAc,KAAVA,EACA,OAAOklB,EAAiBgE,mBAAmB,GAAGC,OAAOluB,KAAKstB,WAAWY,OAAOluB,KAAKytB,yBAErF,IACIU,EACAC,EAFAC,EAAWtpB,EAAM+J,QAAQ,KAW7B,OARkB,IAAduf,GACAF,EAAOppB,EACPqpB,EAAO,KAGPD,EAAOppB,EAAMsN,UAAU,EAAGgc,GAC1BD,EAAOrpB,EAAMsN,UAAUgc,EAAW,IAElCruB,KAAKwtB,UAAUvX,eAAekY,GACvBnuB,KAAKwtB,UAAUW,GAAMnpB,MAAMopB,GAE/BnE,EAAiBgE,mBAAmB,GAAGC,OAAOluB,KAAKstB,WAAWY,OAAOluB,KAAKytB,wBACrF,CACAjC,OAAO2B,EAAYpoB,EAAOimB,EAActoB,EAAWE,EAAYE,GAC3D,GAAc,KAAViC,EAEA,YADA/E,KAAKsuB,cAAcnB,EAAYnC,EAActoB,EAAWE,EAAYE,GAGxE,IACIqrB,EACAC,EASAG,EAXAF,EAAWtpB,EAAM+J,QAAQ,MAGX,IAAduf,GACAF,EAAOppB,EACPqpB,EAAO,KAGPD,EAAOppB,EAAMsN,UAAU,EAAGgc,GAC1BD,EAAOrpB,EAAMsN,UAAUgc,EAAW,IAGlCruB,KAAKwtB,UAAUvX,eAAekY,GAC9BI,EAAQvuB,KAAKwtB,UAAUW,IAGvBI,EAAQ,IAAItE,EAAiBjqB,KAAKstB,UAAUlgB,QAAS8c,EAAqBsE,SAASxuB,KAAKytB,yBACxFztB,KAAKwtB,UAAUW,GAAQI,GAE3BA,EAAM/C,OAAO2B,EAAa,EAAGiB,EAAMpD,EAActoB,EAAWE,EAAYE,EAC5E,CACAwrB,cAAcnB,EAAYnC,EAActoB,EAAWE,EAAYE,GAC3D,GAAqB,OAAjBkoB,EAAJ,CAMA,IAAK,IAAItpB,EAAI,EAAGuG,EAAMjI,KAAKytB,uBAAuBrrB,OAAQV,EAAIuG,EAAKvG,IAAK,CACpE,IAAImF,EAAO7G,KAAKytB,uBAAuB/rB,GACvC,GAA2D,IAAvDmC,EAAQknB,UAAUlkB,EAAKmkB,aAAcA,GAGrC,YADAnkB,EAAKwmB,gBAAgBF,EAAYzqB,EAAWE,EAAYE,EAGhE,EAGmB,IAAfJ,IACAA,EAAY1C,KAAKstB,UAAU5qB,WAEZ,IAAfE,IACAA,EAAa5C,KAAKstB,UAAU1qB,YAEb,IAAfE,IACAA,EAAa9C,KAAKstB,UAAUxqB,YAEhC9C,KAAKytB,uBAAuBrsB,KAAK,IAAI8oB,EAAqBiD,EAAYnC,EAActoB,EAAWE,EAAYE,GArB3G,MAFI9C,KAAKstB,UAAUD,gBAAgBF,EAAYzqB,EAAWE,EAAYE,EAwB1E,EAEJlD,EAAQqqB,iBAAmBA,C,cChc3B,SAASwE,EAAQC,GACb,OAAIla,MAAMC,QAAQia,GAQtB,SAAoBtB,GAChB,IAAIlrB,EAAI,GACR,IAAK,IAAIR,EAAI,EAAGuG,EAAMmlB,EAAIhrB,OAAQV,EAAIuG,EAAKvG,IACvCQ,EAAER,GAAK+sB,EAAQrB,EAAI1rB,IAEvB,OAAOQ,CACX,CAbeysB,CAAWD,GAEG,iBAAdA,EAYf,SAAkBE,GACd,IAAI1sB,EAAI,CAAC,EACT,IAAK,IAAI2R,KAAO+a,EACZ1sB,EAAE2R,GAAO4a,EAAQG,EAAI/a,IAEzB,OAAO3R,CACX,CAjBe2sB,CAASH,GAEbA,CACX,CAdAzuB,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtDP,EAAQuY,eAAiBvY,EAAQsE,SAAWtE,EAAQ6F,uBAAyB7F,EAAQ8sB,gBAAkB9sB,EAAQmrB,UAAYnrB,EAAQkrB,OAASlrB,EAAQ2lB,YAAc3lB,EAAQgmB,SAAWhmB,EAAQgV,aAAehV,EAAQwN,WAAQ,EAI5NxN,EAAQwN,MAHR,SAAeshB,GACX,OAAOD,EAAQC,EACnB,EAiCA9uB,EAAQgV,aARR,SAAsB3F,KAAWxF,GAM7B,OALAA,EAAQS,SAAQmS,IACZ,IAAK,IAAIxI,KAAOwI,EACZpN,EAAO4E,GAAOwI,EAAOxI,EACzB,IAEG5E,CACX,EAcArP,EAAQgmB,SAZR,SAASA,EAASoG,GACd,MAAM8C,GAAO9C,EAAK+C,YAAY,OAAS/C,EAAK+C,YAAY,MACxD,OAAY,IAARD,EACO9C,GAED8C,GAAQ9C,EAAK5pB,OAAS,EACrBwjB,EAASoG,EAAK3Z,UAAU,EAAG2Z,EAAK5pB,OAAS,IAGzC4pB,EAAK9jB,OAAc,GAAN4mB,EAE5B,EAEA,IAAIE,EAAyB,yCAkC7B,SAASlE,EAAOtc,EAAGC,GACf,OAAID,EAAIC,GACI,EAERD,EAAIC,EACG,EAEJ,CACX,CATA7O,EAAQ2lB,YAhCR,MACI7X,mBAAmBuhB,GACf,OAAoB,OAAhBA,IAGJD,EAAuBpnB,UAAY,EAC5BonB,EAAuBnN,KAAKoN,GACvC,CACAvhB,uBAAuBuhB,EAAaC,EAAe5X,GAC/C,OAAO2X,EAAY3c,QAAQ0c,GAAwB,CAAChqB,EAAO0kB,EAAOyF,EAAcC,KAC5E,IAAI3G,EAAUnR,EAAe8G,SAASsL,GAASyF,EAAc,KAC7D,IAAI1G,EAgBA,OAAOzjB,EAhBE,CACT,IAAI2B,EAASuoB,EAAc7c,UAAUoW,EAAQlR,MAAOkR,EAAQ/Q,KAE5D,KAAqB,MAAd/Q,EAAO,IACVA,EAASA,EAAO0L,UAAU,GAE9B,OAAQ+c,GACJ,IAAK,WACD,OAAOzoB,EAAO0oB,cAClB,IAAK,SACD,OAAO1oB,EAAOumB,cAClB,QACI,OAAOvmB,EAEnB,CAGA,GAER,GAYJ/G,EAAQkrB,OAASA,EAwBjBlrB,EAAQmrB,UAvBR,SAAmBvc,EAAGC,GAClB,GAAU,OAAND,GAAoB,OAANC,EACd,OAAO,EAEX,IAAKD,EACD,OAAQ,EAEZ,IAAKC,EACD,OAAO,EAEX,IAAI6gB,EAAO9gB,EAAEpM,OACTmtB,EAAO9gB,EAAErM,OACb,GAAIktB,IAASC,EAAM,CACf,IAAK,IAAI7tB,EAAI,EAAGA,EAAI4tB,EAAM5tB,IAAK,CAC3B,IAAIiP,EAAMma,EAAOtc,EAAE9M,GAAI+M,EAAE/M,IACzB,GAAY,IAARiP,EACA,OAAOA,CAEf,CACA,OAAO,CACX,CACA,OAAO2e,EAAOC,CAClB,EAqBA3vB,EAAQ8sB,gBAnBR,SAAyB8C,GACrB,SAAI,kBAAkB3N,KAAK2N,IAIvB,kBAAkB3N,KAAK2N,IAIvB,kBAAkB3N,KAAK2N,IAIvB,kBAAkB3N,KAAK2N,GAK/B,EAQA5vB,EAAQ6F,uBAHR,SAAgCtF,GAC5B,OAAOA,EAAMmS,QAAQ,0CAA2C,OACpE,EAgBA1S,EAAQsE,SAdR,MACIJ,YAAY2rB,GACRzvB,KAAKyvB,GAAKA,EACVzvB,KAAK0vB,MAAQ,IAAIpqB,GACrB,CACAR,IAAI+O,GACA,GAAI7T,KAAK0vB,MAAM5b,IAAID,GACf,OAAO7T,KAAK0vB,MAAM5qB,IAAI+O,GAE1B,MAAM1T,EAAQH,KAAKyvB,GAAG5b,GAEtB,OADA7T,KAAK0vB,MAAMvsB,IAAI0Q,EAAK1T,GACbA,CACX,GAGJP,EAAQuY,eAAwC,oBAAhBwX,YAE1B,WACE,OAAO9X,KAAKC,KAChB,EACE,WACE,OAAO6X,YAAY7X,KACvB,C,GC3KA8X,EAA2B,CAAC,E,OAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBrgB,IAAjBsgB,EACH,OAAOA,EAAanwB,QAGrB,IAAIC,EAAS+vB,EAAyBE,GAAY,CAGjDlwB,QAAS,CAAC,GAOX,OAHAowB,EAAoBF,GAAU5Z,KAAKrW,EAAOD,QAASC,EAAQA,EAAOD,QAASiwB,GAGpEhwB,EAAOD,OACf,CCnB0BiwB,CAAoB,I","sources":["webpack://vscodetextmate/webpack/universalModuleDefinition","webpack://vscodetextmate/./out/debug.js","webpack://vscodetextmate/./out/diffStateStacks.js","webpack://vscodetextmate/./out/encodedTokenAttributes.js","webpack://vscodetextmate/./out/grammar/basicScopesAttributeProvider.js","webpack://vscodetextmate/./out/grammar/grammar.js","webpack://vscodetextmate/./out/grammar/grammarDependencies.js","webpack://vscodetextmate/./out/grammar/index.js","webpack://vscodetextmate/./out/grammar/tokenizeString.js","webpack://vscodetextmate/./out/json.js","webpack://vscodetextmate/./out/main.js","webpack://vscodetextmate/./out/matcher.js","webpack://vscodetextmate/./out/onigLib.js","webpack://vscodetextmate/./out/parseRawGrammar.js","webpack://vscodetextmate/./out/plist.js","webpack://vscodetextmate/./out/registry.js","webpack://vscodetextmate/./out/rule.js","webpack://vscodetextmate/./out/theme.js","webpack://vscodetextmate/./out/utils.js","webpack://vscodetextmate/webpack/bootstrap","webpack://vscodetextmate/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vscodetextmate\"] = factory();\n\telse\n\t\troot[\"vscodetextmate\"] = factory();\n})(this, function() {\nreturn ","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UseOnigurumaFindOptions = exports.DebugFlags = void 0;\nexports.DebugFlags = {\n    InDebugMode: (typeof process !== 'undefined' && !!process.env['VSCODE_TEXTMATE_DEBUG'])\n};\nexports.UseOnigurumaFindOptions = false;\n//# sourceMappingURL=debug.js.map","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applyStateStackDiff = exports.diffStateStacksRefEq = void 0;\nconst grammar_1 = require(\"./grammar\");\nfunction diffStateStacksRefEq(first, second) {\n    let pops = 0;\n    const newFrames = [];\n    let curFirst = first;\n    let curSecond = second;\n    while (curFirst !== curSecond) {\n        if (curFirst && (!curSecond || curFirst.depth >= curSecond.depth)) {\n            // curFirst is certainly not contained in curSecond\n            pops++;\n            curFirst = curFirst.parent;\n        }\n        else {\n            // curSecond is certainly not contained in curFirst.\n            // Also, curSecond must be defined, as otherwise a previous case would match\n            newFrames.push(curSecond.toStateStackFrame());\n            curSecond = curSecond.parent;\n        }\n    }\n    return {\n        pops,\n        newFrames: newFrames.reverse(),\n    };\n}\nexports.diffStateStacksRefEq = diffStateStacksRefEq;\nfunction applyStateStackDiff(stack, diff) {\n    let curStack = stack;\n    for (let i = 0; i < diff.pops; i++) {\n        curStack = curStack.parent;\n    }\n    for (const frame of diff.newFrames) {\n        curStack = grammar_1.StateStackImpl.pushFrame(curStack, frame);\n    }\n    return curStack;\n}\nexports.applyStateStackDiff = applyStateStackDiff;\n//# sourceMappingURL=diffStateStacks.js.map","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toOptionalTokenType = exports.EncodedTokenAttributes = void 0;\nvar EncodedTokenAttributes;\n(function (EncodedTokenAttributes) {\n    function toBinaryStr(encodedTokenAttributes) {\n        let r = encodedTokenAttributes.toString(2);\n        while (r.length < 32) {\n            r = \"0\" + r;\n        }\n        return r;\n    }\n    EncodedTokenAttributes.toBinaryStr = toBinaryStr;\n    function print(encodedTokenAttributes) {\n        const languageId = EncodedTokenAttributes.getLanguageId(encodedTokenAttributes);\n        const tokenType = EncodedTokenAttributes.getTokenType(encodedTokenAttributes);\n        const fontStyle = EncodedTokenAttributes.getFontStyle(encodedTokenAttributes);\n        const foreground = EncodedTokenAttributes.getForeground(encodedTokenAttributes);\n        const background = EncodedTokenAttributes.getBackground(encodedTokenAttributes);\n        console.log({\n            languageId: languageId,\n            tokenType: tokenType,\n            fontStyle: fontStyle,\n            foreground: foreground,\n            background: background,\n        });\n    }\n    EncodedTokenAttributes.print = print;\n    function getLanguageId(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 255 /* LANGUAGEID_MASK */) >>>\n            0 /* LANGUAGEID_OFFSET */);\n    }\n    EncodedTokenAttributes.getLanguageId = getLanguageId;\n    function getTokenType(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 768 /* TOKEN_TYPE_MASK */) >>>\n            8 /* TOKEN_TYPE_OFFSET */);\n    }\n    EncodedTokenAttributes.getTokenType = getTokenType;\n    function containsBalancedBrackets(encodedTokenAttributes) {\n        return (encodedTokenAttributes & 1024 /* BALANCED_BRACKETS_MASK */) !== 0;\n    }\n    EncodedTokenAttributes.containsBalancedBrackets = containsBalancedBrackets;\n    function getFontStyle(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 30720 /* FONT_STYLE_MASK */) >>>\n            11 /* FONT_STYLE_OFFSET */);\n    }\n    EncodedTokenAttributes.getFontStyle = getFontStyle;\n    function getForeground(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 16744448 /* FOREGROUND_MASK */) >>>\n            15 /* FOREGROUND_OFFSET */);\n    }\n    EncodedTokenAttributes.getForeground = getForeground;\n    function getBackground(encodedTokenAttributes) {\n        return ((encodedTokenAttributes & 4278190080 /* BACKGROUND_MASK */) >>>\n            24 /* BACKGROUND_OFFSET */);\n    }\n    EncodedTokenAttributes.getBackground = getBackground;\n    /**\n     * Updates the fields in `metadata`.\n     * A value of `0`, `NotSet` or `null` indicates that the corresponding field should be left as is.\n     */\n    function set(encodedTokenAttributes, languageId, tokenType, containsBalancedBrackets, fontStyle, foreground, background) {\n        let _languageId = EncodedTokenAttributes.getLanguageId(encodedTokenAttributes);\n        let _tokenType = EncodedTokenAttributes.getTokenType(encodedTokenAttributes);\n        let _containsBalancedBracketsBit = EncodedTokenAttributes.containsBalancedBrackets(encodedTokenAttributes) ? 1 : 0;\n        let _fontStyle = EncodedTokenAttributes.getFontStyle(encodedTokenAttributes);\n        let _foreground = EncodedTokenAttributes.getForeground(encodedTokenAttributes);\n        let _background = EncodedTokenAttributes.getBackground(encodedTokenAttributes);\n        if (languageId !== 0) {\n            _languageId = languageId;\n        }\n        if (tokenType !== 8 /* NotSet */) {\n            _tokenType = fromOptionalTokenType(tokenType);\n        }\n        if (containsBalancedBrackets !== null) {\n            _containsBalancedBracketsBit = containsBalancedBrackets ? 1 : 0;\n        }\n        if (fontStyle !== -1 /* NotSet */) {\n            _fontStyle = fontStyle;\n        }\n        if (foreground !== 0) {\n            _foreground = foreground;\n        }\n        if (background !== 0) {\n            _background = background;\n        }\n        return (((_languageId << 0 /* LANGUAGEID_OFFSET */) |\n            (_tokenType << 8 /* TOKEN_TYPE_OFFSET */) |\n            (_containsBalancedBracketsBit <<\n                10 /* BALANCED_BRACKETS_OFFSET */) |\n            (_fontStyle << 11 /* FONT_STYLE_OFFSET */) |\n            (_foreground << 15 /* FOREGROUND_OFFSET */) |\n            (_background << 24 /* BACKGROUND_OFFSET */)) >>>\n            0);\n    }\n    EncodedTokenAttributes.set = set;\n})(EncodedTokenAttributes = exports.EncodedTokenAttributes || (exports.EncodedTokenAttributes = {}));\nfunction toOptionalTokenType(standardType) {\n    return standardType;\n}\nexports.toOptionalTokenType = toOptionalTokenType;\nfunction fromOptionalTokenType(standardType) {\n    return standardType;\n}\n//# sourceMappingURL=encodedTokenAttributes.js.map","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BasicScopeAttributesProvider = exports.BasicScopeAttributes = void 0;\nconst utils_1 = require(\"../utils\");\nclass BasicScopeAttributes {\n    constructor(languageId, tokenType) {\n        this.languageId = languageId;\n        this.tokenType = tokenType;\n    }\n}\nexports.BasicScopeAttributes = BasicScopeAttributes;\nclass BasicScopeAttributesProvider {\n    constructor(initialLanguageId, embeddedLanguages) {\n        this._getBasicScopeAttributes = new utils_1.CachedFn((scopeName) => {\n            const languageId = this._scopeToLanguage(scopeName);\n            const standardTokenType = this._toStandardTokenType(scopeName);\n            return new BasicScopeAttributes(languageId, standardTokenType);\n        });\n        this._defaultAttributes = new BasicScopeAttributes(initialLanguageId, 8 /* NotSet */);\n        this._embeddedLanguagesMatcher = new ScopeMatcher(Object.entries(embeddedLanguages || {}));\n    }\n    getDefaultAttributes() {\n        return this._defaultAttributes;\n    }\n    getBasicScopeAttributes(scopeName) {\n        if (scopeName === null) {\n            return BasicScopeAttributesProvider._NULL_SCOPE_METADATA;\n        }\n        return this._getBasicScopeAttributes.get(scopeName);\n    }\n    /**\n     * Given a produced TM scope, return the language that token describes or null if unknown.\n     * e.g. source.html => html, source.css.embedded.html => css, punctuation.definition.tag.html => null\n     */\n    _scopeToLanguage(scope) {\n        return this._embeddedLanguagesMatcher.match(scope) || 0;\n    }\n    _toStandardTokenType(scopeName) {\n        const m = scopeName.match(BasicScopeAttributesProvider.STANDARD_TOKEN_TYPE_REGEXP);\n        if (!m) {\n            return 8 /* NotSet */;\n        }\n        switch (m[1]) {\n            case \"comment\":\n                return 1 /* Comment */;\n            case \"string\":\n                return 2 /* String */;\n            case \"regex\":\n                return 3 /* RegEx */;\n            case \"meta.embedded\":\n                return 0 /* Other */;\n        }\n        throw new Error(\"Unexpected match for standard token type!\");\n    }\n}\nexports.BasicScopeAttributesProvider = BasicScopeAttributesProvider;\nBasicScopeAttributesProvider._NULL_SCOPE_METADATA = new BasicScopeAttributes(0, 0);\nBasicScopeAttributesProvider.STANDARD_TOKEN_TYPE_REGEXP = /\\b(comment|string|regex|meta\\.embedded)\\b/;\nclass ScopeMatcher {\n    constructor(values) {\n        if (values.length === 0) {\n            this.values = null;\n            this.scopesRegExp = null;\n        }\n        else {\n            this.values = new Map(values);\n            // create the regex\n            const escapedScopes = values.map(([scopeName, value]) => utils_1.escapeRegExpCharacters(scopeName));\n            escapedScopes.sort();\n            escapedScopes.reverse(); // Longest scope first\n            this.scopesRegExp = new RegExp(`^((${escapedScopes.join(\")|(\")}))($|\\\\.)`, \"\");\n        }\n    }\n    match(scope) {\n        if (!this.scopesRegExp) {\n            return undefined;\n        }\n        const m = scope.match(this.scopesRegExp);\n        if (!m) {\n            // no scopes matched\n            return undefined;\n        }\n        return this.values.get(m[1]);\n    }\n}\n//# sourceMappingURL=basicScopesAttributeProvider.js.map","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LineTokens = exports.BalancedBracketSelectors = exports.StateStackImpl = exports.AttributedScopeStack = exports.Grammar = exports.createGrammar = void 0;\nconst debug_1 = require(\"../debug\");\nconst encodedTokenAttributes_1 = require(\"../encodedTokenAttributes\");\nconst matcher_1 = require(\"../matcher\");\nconst onigLib_1 = require(\"../onigLib\");\nconst rule_1 = require(\"../rule\");\nconst theme_1 = require(\"../theme\");\nconst utils_1 = require(\"../utils\");\nconst basicScopesAttributeProvider_1 = require(\"./basicScopesAttributeProvider\");\nconst tokenizeString_1 = require(\"./tokenizeString\");\nfunction createGrammar(scopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, onigLib) {\n    return new Grammar(scopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, onigLib); //TODO\n}\nexports.createGrammar = createGrammar;\nfunction collectInjections(result, selector, rule, ruleFactoryHelper, grammar) {\n    const matchers = matcher_1.createMatchers(selector, nameMatcher);\n    const ruleId = rule_1.RuleFactory.getCompiledRuleId(rule, ruleFactoryHelper, grammar.repository);\n    for (const matcher of matchers) {\n        result.push({\n            debugSelector: selector,\n            matcher: matcher.matcher,\n            ruleId: ruleId,\n            grammar: grammar,\n            priority: matcher.priority\n        });\n    }\n}\nfunction nameMatcher(identifers, scopes) {\n    if (scopes.length < identifers.length) {\n        return false;\n    }\n    let lastIndex = 0;\n    return identifers.every(identifier => {\n        for (let i = lastIndex; i < scopes.length; i++) {\n            if (scopesAreMatching(scopes[i], identifier)) {\n                lastIndex = i + 1;\n                return true;\n            }\n        }\n        return false;\n    });\n}\nfunction scopesAreMatching(thisScopeName, scopeName) {\n    if (!thisScopeName) {\n        return false;\n    }\n    if (thisScopeName === scopeName) {\n        return true;\n    }\n    const len = scopeName.length;\n    return thisScopeName.length > len && thisScopeName.substr(0, len) === scopeName && thisScopeName[len] === '.';\n}\nclass Grammar {\n    constructor(_rootScopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, _onigLib) {\n        this._rootScopeName = _rootScopeName;\n        this.balancedBracketSelectors = balancedBracketSelectors;\n        this._onigLib = _onigLib;\n        this._basicScopeAttributesProvider = new basicScopesAttributeProvider_1.BasicScopeAttributesProvider(initialLanguage, embeddedLanguages);\n        this._rootId = -1;\n        this._lastRuleId = 0;\n        this._ruleId2desc = [null];\n        this._includedGrammars = {};\n        this._grammarRepository = grammarRepository;\n        this._grammar = initGrammar(grammar, null);\n        this._injections = null;\n        this._tokenTypeMatchers = [];\n        if (tokenTypes) {\n            for (const selector of Object.keys(tokenTypes)) {\n                const matchers = matcher_1.createMatchers(selector, nameMatcher);\n                for (const matcher of matchers) {\n                    this._tokenTypeMatchers.push({\n                        matcher: matcher.matcher,\n                        type: tokenTypes[selector],\n                    });\n                }\n            }\n        }\n    }\n    get themeProvider() { return this._grammarRepository; }\n    dispose() {\n        for (const rule of this._ruleId2desc) {\n            if (rule) {\n                rule.dispose();\n            }\n        }\n    }\n    createOnigScanner(sources) {\n        return this._onigLib.createOnigScanner(sources);\n    }\n    createOnigString(sources) {\n        return this._onigLib.createOnigString(sources);\n    }\n    getMetadataForScope(scope) {\n        return this._basicScopeAttributesProvider.getBasicScopeAttributes(scope);\n    }\n    _collectInjections() {\n        const grammarRepository = {\n            lookup: (scopeName) => {\n                if (scopeName === this._rootScopeName) {\n                    return this._grammar;\n                }\n                return this.getExternalGrammar(scopeName);\n            },\n            injections: (scopeName) => {\n                return this._grammarRepository.injections(scopeName);\n            },\n        };\n        const result = [];\n        const scopeName = this._rootScopeName;\n        const grammar = grammarRepository.lookup(scopeName);\n        if (grammar) {\n            // add injections from the current grammar\n            const rawInjections = grammar.injections;\n            if (rawInjections) {\n                for (let expression in rawInjections) {\n                    collectInjections(result, expression, rawInjections[expression], this, grammar);\n                }\n            }\n            // add injection grammars contributed for the current scope\n            const injectionScopeNames = this._grammarRepository.injections(scopeName);\n            if (injectionScopeNames) {\n                injectionScopeNames.forEach((injectionScopeName) => {\n                    const injectionGrammar = this.getExternalGrammar(injectionScopeName);\n                    if (injectionGrammar) {\n                        const selector = injectionGrammar.injectionSelector;\n                        if (selector) {\n                            collectInjections(result, selector, injectionGrammar, this, injectionGrammar);\n                        }\n                    }\n                });\n            }\n        }\n        result.sort((i1, i2) => i1.priority - i2.priority); // sort by priority\n        return result;\n    }\n    getInjections() {\n        if (this._injections === null) {\n            this._injections = this._collectInjections();\n            if (debug_1.DebugFlags.InDebugMode && this._injections.length > 0) {\n                console.log(`Grammar ${this._rootScopeName} contains the following injections:`);\n                for (const injection of this._injections) {\n                    console.log(`  - ${injection.debugSelector}`);\n                }\n            }\n        }\n        return this._injections;\n    }\n    registerRule(factory) {\n        const id = ++this._lastRuleId;\n        const result = factory(rule_1.ruleIdFromNumber(id));\n        this._ruleId2desc[id] = result;\n        return result;\n    }\n    getRule(ruleId) {\n        return this._ruleId2desc[rule_1.ruleIdToNumber(ruleId)];\n    }\n    getExternalGrammar(scopeName, repository) {\n        if (this._includedGrammars[scopeName]) {\n            return this._includedGrammars[scopeName];\n        }\n        else if (this._grammarRepository) {\n            const rawIncludedGrammar = this._grammarRepository.lookup(scopeName);\n            if (rawIncludedGrammar) {\n                // console.log('LOADED GRAMMAR ' + pattern.include);\n                this._includedGrammars[scopeName] = initGrammar(rawIncludedGrammar, repository && repository.$base);\n                return this._includedGrammars[scopeName];\n            }\n        }\n        return undefined;\n    }\n    tokenizeLine(lineText, prevState, timeLimit = 0) {\n        const r = this._tokenize(lineText, prevState, false, timeLimit);\n        return {\n            tokens: r.lineTokens.getResult(r.ruleStack, r.lineLength),\n            ruleStack: r.ruleStack,\n            stoppedEarly: r.stoppedEarly,\n        };\n    }\n    tokenizeLine2(lineText, prevState, timeLimit = 0) {\n        const r = this._tokenize(lineText, prevState, true, timeLimit);\n        return {\n            tokens: r.lineTokens.getBinaryResult(r.ruleStack, r.lineLength),\n            ruleStack: r.ruleStack,\n            stoppedEarly: r.stoppedEarly,\n        };\n    }\n    _tokenize(lineText, prevState, emitBinaryTokens, timeLimit) {\n        if (this._rootId === -1) {\n            this._rootId = rule_1.RuleFactory.getCompiledRuleId(this._grammar.repository.$self, this, this._grammar.repository);\n            // This ensures ids are deterministic, and thus equal in renderer and webworker.\n            this.getInjections();\n        }\n        let isFirstLine;\n        if (!prevState || prevState === StateStackImpl.NULL) {\n            isFirstLine = true;\n            const rawDefaultMetadata = this._basicScopeAttributesProvider.getDefaultAttributes();\n            const defaultStyle = this.themeProvider.getDefaults();\n            const defaultMetadata = encodedTokenAttributes_1.EncodedTokenAttributes.set(0, rawDefaultMetadata.languageId, rawDefaultMetadata.tokenType, null, defaultStyle.fontStyle, defaultStyle.foregroundId, defaultStyle.backgroundId);\n            const rootScopeName = this.getRule(this._rootId).getName(null, null);\n            let scopeList;\n            if (rootScopeName) {\n                scopeList = AttributedScopeStack.createRootAndLookUpScopeName(rootScopeName, defaultMetadata, this);\n            }\n            else {\n                scopeList = AttributedScopeStack.createRoot(\"unknown\", defaultMetadata);\n            }\n            prevState = new StateStackImpl(null, this._rootId, -1, -1, false, null, scopeList, scopeList);\n        }\n        else {\n            isFirstLine = false;\n            prevState.reset();\n        }\n        lineText = lineText + \"\\n\";\n        const onigLineText = this.createOnigString(lineText);\n        const lineLength = onigLineText.content.length;\n        const lineTokens = new LineTokens(emitBinaryTokens, lineText, this._tokenTypeMatchers, this.balancedBracketSelectors);\n        const r = tokenizeString_1._tokenizeString(this, onigLineText, isFirstLine, 0, prevState, lineTokens, true, timeLimit);\n        onigLib_1.disposeOnigString(onigLineText);\n        return {\n            lineLength: lineLength,\n            lineTokens: lineTokens,\n            ruleStack: r.stack,\n            stoppedEarly: r.stoppedEarly,\n        };\n    }\n}\nexports.Grammar = Grammar;\nfunction initGrammar(grammar, base) {\n    grammar = utils_1.clone(grammar);\n    grammar.repository = grammar.repository || {};\n    grammar.repository.$self = {\n        $vscodeTextmateLocation: grammar.$vscodeTextmateLocation,\n        patterns: grammar.patterns,\n        name: grammar.scopeName\n    };\n    grammar.repository.$base = base || grammar.repository.$self;\n    return grammar;\n}\nclass AttributedScopeStack {\n    /**\n     * Invariant:\n     * ```\n     * if (parent && !scopePath.extends(parent.scopePath)) {\n     * \tthrow new Error();\n     * }\n     * ```\n     */\n    constructor(parent, scopePath, tokenAttributes) {\n        this.parent = parent;\n        this.scopePath = scopePath;\n        this.tokenAttributes = tokenAttributes;\n    }\n    static fromExtension(namesScopeList, contentNameScopesList) {\n        let current = namesScopeList;\n        let scopeNames = namesScopeList?.scopePath ?? null;\n        for (const frame of contentNameScopesList) {\n            scopeNames = theme_1.ScopeStack.push(scopeNames, frame.scopeNames);\n            current = new AttributedScopeStack(current, scopeNames, frame.encodedTokenAttributes);\n        }\n        return current;\n    }\n    static createRoot(scopeName, tokenAttributes) {\n        return new AttributedScopeStack(null, new theme_1.ScopeStack(null, scopeName), tokenAttributes);\n    }\n    static createRootAndLookUpScopeName(scopeName, tokenAttributes, grammar) {\n        const rawRootMetadata = grammar.getMetadataForScope(scopeName);\n        const scopePath = new theme_1.ScopeStack(null, scopeName);\n        const rootStyle = grammar.themeProvider.themeMatch(scopePath);\n        const resolvedTokenAttributes = AttributedScopeStack.mergeAttributes(tokenAttributes, rawRootMetadata, rootStyle);\n        return new AttributedScopeStack(null, scopePath, resolvedTokenAttributes);\n    }\n    get scopeName() { return this.scopePath.scopeName; }\n    toString() {\n        return this.getScopeNames().join(' ');\n    }\n    equals(other) {\n        return AttributedScopeStack.equals(this, other);\n    }\n    static equals(a, b) {\n        do {\n            if (a === b) {\n                return true;\n            }\n            if (!a && !b) {\n                // End of list reached for both\n                return true;\n            }\n            if (!a || !b) {\n                // End of list reached only for one\n                return false;\n            }\n            if (a.scopeName !== b.scopeName || a.tokenAttributes !== b.tokenAttributes) {\n                return false;\n            }\n            // Go to previous pair\n            a = a.parent;\n            b = b.parent;\n        } while (true);\n    }\n    static mergeAttributes(existingTokenAttributes, basicScopeAttributes, styleAttributes) {\n        let fontStyle = -1 /* NotSet */;\n        let foreground = 0;\n        let background = 0;\n        if (styleAttributes !== null) {\n            fontStyle = styleAttributes.fontStyle;\n            foreground = styleAttributes.foregroundId;\n            background = styleAttributes.backgroundId;\n        }\n        return encodedTokenAttributes_1.EncodedTokenAttributes.set(existingTokenAttributes, basicScopeAttributes.languageId, basicScopeAttributes.tokenType, null, fontStyle, foreground, background);\n    }\n    pushAttributed(scopePath, grammar) {\n        if (scopePath === null) {\n            return this;\n        }\n        if (scopePath.indexOf(' ') === -1) {\n            // This is the common case and much faster\n            return AttributedScopeStack._pushAttributed(this, scopePath, grammar);\n        }\n        const scopes = scopePath.split(/ /g);\n        let result = this;\n        for (const scope of scopes) {\n            result = AttributedScopeStack._pushAttributed(result, scope, grammar);\n        }\n        return result;\n    }\n    static _pushAttributed(target, scopeName, grammar) {\n        const rawMetadata = grammar.getMetadataForScope(scopeName);\n        const newPath = target.scopePath.push(scopeName);\n        const scopeThemeMatchResult = grammar.themeProvider.themeMatch(newPath);\n        const metadata = AttributedScopeStack.mergeAttributes(target.tokenAttributes, rawMetadata, scopeThemeMatchResult);\n        return new AttributedScopeStack(target, newPath, metadata);\n    }\n    getScopeNames() {\n        return this.scopePath.getSegments();\n    }\n    getExtensionIfDefined(base) {\n        const result = [];\n        let self = this;\n        while (self && self !== base) {\n            result.push({\n                encodedTokenAttributes: self.tokenAttributes,\n                scopeNames: self.scopePath.getExtensionIfDefined(self.parent?.scopePath ?? null),\n            });\n            self = self.parent;\n        }\n        return self === base ? result.reverse() : undefined;\n    }\n}\nexports.AttributedScopeStack = AttributedScopeStack;\n/**\n * Represents a \"pushed\" state on the stack (as a linked list element).\n */\nclass StateStackImpl {\n    /**\n     * Invariant:\n     * ```\n     * if (contentNameScopesList !== nameScopesList && contentNameScopesList?.parent !== nameScopesList) {\n     * \tthrow new Error();\n     * }\n     * if (this.parent && !nameScopesList.extends(this.parent.contentNameScopesList)) {\n     * \tthrow new Error();\n     * }\n     * ```\n     */\n    constructor(\n    /**\n     * The previous state on the stack (or null for the root state).\n     */\n    parent, \n    /**\n     * The state (rule) that this element represents.\n     */\n    ruleId, enterPos, anchorPos, \n    /**\n     * The state has entered and captured \\n. This means that the next line should have an anchorPosition of 0.\n     */\n    beginRuleCapturedEOL, \n    /**\n     * The \"pop\" (end) condition for this state in case that it was dynamically generated through captured text.\n     */\n    endRule, \n    /**\n     * The list of scopes containing the \"name\" for this state.\n     */\n    nameScopesList, \n    /**\n     * The list of scopes containing the \"contentName\" (besides \"name\") for this state.\n     * This list **must** contain as an element `scopeName`.\n     */\n    contentNameScopesList) {\n        this.parent = parent;\n        this.ruleId = ruleId;\n        this.beginRuleCapturedEOL = beginRuleCapturedEOL;\n        this.endRule = endRule;\n        this.nameScopesList = nameScopesList;\n        this.contentNameScopesList = contentNameScopesList;\n        this._stackElementBrand = undefined;\n        this.depth = this.parent ? this.parent.depth + 1 : 1;\n        this._enterPos = enterPos;\n        this._anchorPos = anchorPos;\n    }\n    equals(other) {\n        if (other === null) {\n            return false;\n        }\n        return StateStackImpl._equals(this, other);\n    }\n    static _equals(a, b) {\n        if (a === b) {\n            return true;\n        }\n        if (!this._structuralEquals(a, b)) {\n            return false;\n        }\n        return AttributedScopeStack.equals(a.contentNameScopesList, b.contentNameScopesList);\n    }\n    /**\n     * A structural equals check. Does not take into account `scopes`.\n     */\n    static _structuralEquals(a, b) {\n        do {\n            if (a === b) {\n                return true;\n            }\n            if (!a && !b) {\n                // End of list reached for both\n                return true;\n            }\n            if (!a || !b) {\n                // End of list reached only for one\n                return false;\n            }\n            if (a.depth !== b.depth ||\n                a.ruleId !== b.ruleId ||\n                a.endRule !== b.endRule) {\n                return false;\n            }\n            // Go to previous pair\n            a = a.parent;\n            b = b.parent;\n        } while (true);\n    }\n    clone() {\n        return this;\n    }\n    static _reset(el) {\n        while (el) {\n            el._enterPos = -1;\n            el._anchorPos = -1;\n            el = el.parent;\n        }\n    }\n    reset() {\n        StateStackImpl._reset(this);\n    }\n    pop() {\n        return this.parent;\n    }\n    safePop() {\n        if (this.parent) {\n            return this.parent;\n        }\n        return this;\n    }\n    push(ruleId, enterPos, anchorPos, beginRuleCapturedEOL, endRule, nameScopesList, contentNameScopesList) {\n        return new StateStackImpl(this, ruleId, enterPos, anchorPos, beginRuleCapturedEOL, endRule, nameScopesList, contentNameScopesList);\n    }\n    getEnterPos() {\n        return this._enterPos;\n    }\n    getAnchorPos() {\n        return this._anchorPos;\n    }\n    getRule(grammar) {\n        return grammar.getRule(this.ruleId);\n    }\n    toString() {\n        const r = [];\n        this._writeString(r, 0);\n        return \"[\" + r.join(\",\") + \"]\";\n    }\n    _writeString(res, outIndex) {\n        if (this.parent) {\n            outIndex = this.parent._writeString(res, outIndex);\n        }\n        res[outIndex++] = `(${this.ruleId}, ${this.nameScopesList?.toString()}, ${this.contentNameScopesList?.toString()})`;\n        return outIndex;\n    }\n    withContentNameScopesList(contentNameScopeStack) {\n        if (this.contentNameScopesList === contentNameScopeStack) {\n            return this;\n        }\n        return this.parent.push(this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, this.endRule, this.nameScopesList, contentNameScopeStack);\n    }\n    withEndRule(endRule) {\n        if (this.endRule === endRule) {\n            return this;\n        }\n        return new StateStackImpl(this.parent, this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, endRule, this.nameScopesList, this.contentNameScopesList);\n    }\n    // Used to warn of endless loops\n    hasSameRuleAs(other) {\n        let el = this;\n        while (el && el._enterPos === other._enterPos) {\n            if (el.ruleId === other.ruleId) {\n                return true;\n            }\n            el = el.parent;\n        }\n        return false;\n    }\n    toStateStackFrame() {\n        return {\n            ruleId: rule_1.ruleIdToNumber(this.ruleId),\n            beginRuleCapturedEOL: this.beginRuleCapturedEOL,\n            endRule: this.endRule,\n            nameScopesList: this.nameScopesList?.getExtensionIfDefined(this.parent?.nameScopesList ?? null) ?? [],\n            contentNameScopesList: this.contentNameScopesList?.getExtensionIfDefined(this.nameScopesList) ?? [],\n        };\n    }\n    static pushFrame(self, frame) {\n        const namesScopeList = AttributedScopeStack.fromExtension(self?.nameScopesList ?? null, frame.nameScopesList);\n        return new StateStackImpl(self, rule_1.ruleIdFromNumber(frame.ruleId), frame.enterPos ?? -1, frame.anchorPos ?? -1, frame.beginRuleCapturedEOL, frame.endRule, namesScopeList, AttributedScopeStack.fromExtension(namesScopeList, frame.contentNameScopesList));\n    }\n}\nexports.StateStackImpl = StateStackImpl;\n// TODO remove me\nStateStackImpl.NULL = new StateStackImpl(null, 0, 0, 0, false, null, null, null);\nclass BalancedBracketSelectors {\n    constructor(balancedBracketScopes, unbalancedBracketScopes) {\n        this.allowAny = false;\n        this.balancedBracketScopes = balancedBracketScopes.flatMap((selector) => {\n            if (selector === '*') {\n                this.allowAny = true;\n                return [];\n            }\n            return matcher_1.createMatchers(selector, nameMatcher).map((m) => m.matcher);\n        });\n        this.unbalancedBracketScopes = unbalancedBracketScopes.flatMap((selector) => matcher_1.createMatchers(selector, nameMatcher).map((m) => m.matcher));\n    }\n    get matchesAlways() {\n        return this.allowAny && this.unbalancedBracketScopes.length === 0;\n    }\n    get matchesNever() {\n        return this.balancedBracketScopes.length === 0 && !this.allowAny;\n    }\n    match(scopes) {\n        for (const excluder of this.unbalancedBracketScopes) {\n            if (excluder(scopes)) {\n                return false;\n            }\n        }\n        for (const includer of this.balancedBracketScopes) {\n            if (includer(scopes)) {\n                return true;\n            }\n        }\n        return this.allowAny;\n    }\n}\nexports.BalancedBracketSelectors = BalancedBracketSelectors;\nclass LineTokens {\n    constructor(emitBinaryTokens, lineText, tokenTypeOverrides, balancedBracketSelectors) {\n        this.balancedBracketSelectors = balancedBracketSelectors;\n        this._emitBinaryTokens = emitBinaryTokens;\n        this._tokenTypeOverrides = tokenTypeOverrides;\n        if (debug_1.DebugFlags.InDebugMode) {\n            this._lineText = lineText;\n        }\n        else {\n            this._lineText = null;\n        }\n        this._tokens = [];\n        this._binaryTokens = [];\n        this._lastTokenEndIndex = 0;\n    }\n    produce(stack, endIndex) {\n        this.produceFromScopes(stack.contentNameScopesList, endIndex);\n    }\n    produceFromScopes(scopesList, endIndex) {\n        if (this._lastTokenEndIndex >= endIndex) {\n            return;\n        }\n        if (this._emitBinaryTokens) {\n            let metadata = scopesList?.tokenAttributes ?? 0;\n            let containsBalancedBrackets = false;\n            if (this.balancedBracketSelectors?.matchesAlways) {\n                containsBalancedBrackets = true;\n            }\n            if (this._tokenTypeOverrides.length > 0 || (this.balancedBracketSelectors && !this.balancedBracketSelectors.matchesAlways && !this.balancedBracketSelectors.matchesNever)) {\n                // Only generate scope array when required to improve performance\n                const scopes = scopesList?.getScopeNames() ?? [];\n                for (const tokenType of this._tokenTypeOverrides) {\n                    if (tokenType.matcher(scopes)) {\n                        metadata = encodedTokenAttributes_1.EncodedTokenAttributes.set(metadata, 0, encodedTokenAttributes_1.toOptionalTokenType(tokenType.type), null, -1 /* NotSet */, 0, 0);\n                    }\n                }\n                if (this.balancedBracketSelectors) {\n                    containsBalancedBrackets = this.balancedBracketSelectors.match(scopes);\n                }\n            }\n            if (containsBalancedBrackets) {\n                metadata = encodedTokenAttributes_1.EncodedTokenAttributes.set(metadata, 0, 8 /* NotSet */, containsBalancedBrackets, -1 /* NotSet */, 0, 0);\n            }\n            if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 1] === metadata) {\n                // no need to push a token with the same metadata\n                this._lastTokenEndIndex = endIndex;\n                return;\n            }\n            if (debug_1.DebugFlags.InDebugMode) {\n                const scopes = scopesList?.getScopeNames() ?? [];\n                console.log('  token: |' + this._lineText.substring(this._lastTokenEndIndex, endIndex).replace(/\\n$/, '\\\\n') + '|');\n                for (let k = 0; k < scopes.length; k++) {\n                    console.log('      * ' + scopes[k]);\n                }\n            }\n            this._binaryTokens.push(this._lastTokenEndIndex);\n            this._binaryTokens.push(metadata);\n            this._lastTokenEndIndex = endIndex;\n            return;\n        }\n        const scopes = scopesList?.getScopeNames() ?? [];\n        if (debug_1.DebugFlags.InDebugMode) {\n            console.log('  token: |' + this._lineText.substring(this._lastTokenEndIndex, endIndex).replace(/\\n$/, '\\\\n') + '|');\n            for (let k = 0; k < scopes.length; k++) {\n                console.log('      * ' + scopes[k]);\n            }\n        }\n        this._tokens.push({\n            startIndex: this._lastTokenEndIndex,\n            endIndex: endIndex,\n            // value: lineText.substring(lastTokenEndIndex, endIndex),\n            scopes: scopes\n        });\n        this._lastTokenEndIndex = endIndex;\n    }\n    getResult(stack, lineLength) {\n        if (this._tokens.length > 0 && this._tokens[this._tokens.length - 1].startIndex === lineLength - 1) {\n            // pop produced token for newline\n            this._tokens.pop();\n        }\n        if (this._tokens.length === 0) {\n            this._lastTokenEndIndex = -1;\n            this.produce(stack, lineLength);\n            this._tokens[this._tokens.length - 1].startIndex = 0;\n        }\n        return this._tokens;\n    }\n    getBinaryResult(stack, lineLength) {\n        if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 2] === lineLength - 1) {\n            // pop produced token for newline\n            this._binaryTokens.pop();\n            this._binaryTokens.pop();\n        }\n        if (this._binaryTokens.length === 0) {\n            this._lastTokenEndIndex = -1;\n            this.produce(stack, lineLength);\n            this._binaryTokens[this._binaryTokens.length - 2] = 0;\n        }\n        const result = new Uint32Array(this._binaryTokens.length);\n        for (let i = 0, len = this._binaryTokens.length; i < len; i++) {\n            result[i] = this._binaryTokens[i];\n        }\n        return result;\n    }\n}\nexports.LineTokens = LineTokens;\n//# sourceMappingURL=grammar.js.map","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseInclude = exports.TopLevelRepositoryReference = exports.TopLevelReference = exports.RelativeReference = exports.SelfReference = exports.BaseReference = exports.ScopeDependencyProcessor = exports.ExternalReferenceCollector = exports.TopLevelRepositoryRuleReference = exports.TopLevelRuleReference = void 0;\nconst utils_1 = require(\"../utils\");\n/**\n * References the top level rule of a grammar with the given scope name.\n*/\nclass TopLevelRuleReference {\n    constructor(scopeName) {\n        this.scopeName = scopeName;\n    }\n    toKey() {\n        return this.scopeName;\n    }\n}\nexports.TopLevelRuleReference = TopLevelRuleReference;\n/**\n * References a rule of a grammar in the top level repository section with the given name.\n*/\nclass TopLevelRepositoryRuleReference {\n    constructor(scopeName, ruleName) {\n        this.scopeName = scopeName;\n        this.ruleName = ruleName;\n    }\n    toKey() {\n        return `${this.scopeName}#${this.ruleName}`;\n    }\n}\nexports.TopLevelRepositoryRuleReference = TopLevelRepositoryRuleReference;\nclass ExternalReferenceCollector {\n    constructor() {\n        this._references = [];\n        this._seenReferenceKeys = new Set();\n        this.visitedRule = new Set();\n    }\n    get references() {\n        return this._references;\n    }\n    add(reference) {\n        const key = reference.toKey();\n        if (this._seenReferenceKeys.has(key)) {\n            return;\n        }\n        this._seenReferenceKeys.add(key);\n        this._references.push(reference);\n    }\n}\nexports.ExternalReferenceCollector = ExternalReferenceCollector;\nclass ScopeDependencyProcessor {\n    constructor(repo, initialScopeName) {\n        this.repo = repo;\n        this.initialScopeName = initialScopeName;\n        this.seenFullScopeRequests = new Set();\n        this.seenPartialScopeRequests = new Set();\n        this.seenFullScopeRequests.add(this.initialScopeName);\n        this.Q = [new TopLevelRuleReference(this.initialScopeName)];\n    }\n    processQueue() {\n        const q = this.Q;\n        this.Q = [];\n        const deps = new ExternalReferenceCollector();\n        for (const dep of q) {\n            collectReferencesOfReference(dep, this.initialScopeName, this.repo, deps);\n        }\n        for (const dep of deps.references) {\n            if (dep instanceof TopLevelRuleReference) {\n                if (this.seenFullScopeRequests.has(dep.scopeName)) {\n                    // already processed\n                    continue;\n                }\n                this.seenFullScopeRequests.add(dep.scopeName);\n                this.Q.push(dep);\n            }\n            else {\n                if (this.seenFullScopeRequests.has(dep.scopeName)) {\n                    // already processed in full\n                    continue;\n                }\n                if (this.seenPartialScopeRequests.has(dep.toKey())) {\n                    // already processed\n                    continue;\n                }\n                this.seenPartialScopeRequests.add(dep.toKey());\n                this.Q.push(dep);\n            }\n        }\n    }\n}\nexports.ScopeDependencyProcessor = ScopeDependencyProcessor;\nfunction collectReferencesOfReference(reference, baseGrammarScopeName, repo, result) {\n    const selfGrammar = repo.lookup(reference.scopeName);\n    if (!selfGrammar) {\n        if (reference.scopeName === baseGrammarScopeName) {\n            throw new Error(`No grammar provided for <${baseGrammarScopeName}>`);\n        }\n        return;\n    }\n    const baseGrammar = repo.lookup(baseGrammarScopeName);\n    if (reference instanceof TopLevelRuleReference) {\n        collectExternalReferencesInTopLevelRule({ baseGrammar, selfGrammar }, result);\n    }\n    else {\n        collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, { baseGrammar, selfGrammar, repository: selfGrammar.repository }, result);\n    }\n    const injections = repo.injections(reference.scopeName);\n    if (injections) {\n        for (const injection of injections) {\n            result.add(new TopLevelRuleReference(injection));\n        }\n    }\n}\nfunction collectExternalReferencesInTopLevelRepositoryRule(ruleName, context, result) {\n    if (context.repository && context.repository[ruleName]) {\n        const rule = context.repository[ruleName];\n        collectExternalReferencesInRules([rule], context, result);\n    }\n}\nfunction collectExternalReferencesInTopLevelRule(context, result) {\n    if (context.selfGrammar.patterns && Array.isArray(context.selfGrammar.patterns)) {\n        collectExternalReferencesInRules(context.selfGrammar.patterns, { ...context, repository: context.selfGrammar.repository }, result);\n    }\n    if (context.selfGrammar.injections) {\n        collectExternalReferencesInRules(Object.values(context.selfGrammar.injections), { ...context, repository: context.selfGrammar.repository }, result);\n    }\n}\nfunction collectExternalReferencesInRules(rules, context, result) {\n    for (const rule of rules) {\n        if (result.visitedRule.has(rule)) {\n            continue;\n        }\n        result.visitedRule.add(rule);\n        const patternRepository = rule.repository ? utils_1.mergeObjects({}, context.repository, rule.repository) : context.repository;\n        if (Array.isArray(rule.patterns)) {\n            collectExternalReferencesInRules(rule.patterns, { ...context, repository: patternRepository }, result);\n        }\n        const include = rule.include;\n        if (!include) {\n            continue;\n        }\n        const reference = parseInclude(include);\n        switch (reference.kind) {\n            case 0 /* Base */:\n                collectExternalReferencesInTopLevelRule({ ...context, selfGrammar: context.baseGrammar }, result);\n                break;\n            case 1 /* Self */:\n                collectExternalReferencesInTopLevelRule(context, result);\n                break;\n            case 2 /* RelativeReference */:\n                collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, { ...context, repository: patternRepository }, result);\n                break;\n            case 3 /* TopLevelReference */:\n            case 4 /* TopLevelRepositoryReference */:\n                const selfGrammar = reference.scopeName === context.selfGrammar.scopeName\n                    ? context.selfGrammar\n                    : reference.scopeName === context.baseGrammar.scopeName\n                        ? context.baseGrammar\n                        : undefined;\n                if (selfGrammar) {\n                    const newContext = { baseGrammar: context.baseGrammar, selfGrammar, repository: patternRepository };\n                    if (reference.kind === 4 /* TopLevelRepositoryReference */) {\n                        collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, newContext, result);\n                    }\n                    else {\n                        collectExternalReferencesInTopLevelRule(newContext, result);\n                    }\n                }\n                else {\n                    if (reference.kind === 4 /* TopLevelRepositoryReference */) {\n                        result.add(new TopLevelRepositoryRuleReference(reference.scopeName, reference.ruleName));\n                    }\n                    else {\n                        result.add(new TopLevelRuleReference(reference.scopeName));\n                    }\n                }\n                break;\n        }\n    }\n}\nclass BaseReference {\n    constructor() {\n        this.kind = 0 /* Base */;\n    }\n}\nexports.BaseReference = BaseReference;\nclass SelfReference {\n    constructor() {\n        this.kind = 1 /* Self */;\n    }\n}\nexports.SelfReference = SelfReference;\nclass RelativeReference {\n    constructor(ruleName) {\n        this.ruleName = ruleName;\n        this.kind = 2 /* RelativeReference */;\n    }\n}\nexports.RelativeReference = RelativeReference;\nclass TopLevelReference {\n    constructor(scopeName) {\n        this.scopeName = scopeName;\n        this.kind = 3 /* TopLevelReference */;\n    }\n}\nexports.TopLevelReference = TopLevelReference;\nclass TopLevelRepositoryReference {\n    constructor(scopeName, ruleName) {\n        this.scopeName = scopeName;\n        this.ruleName = ruleName;\n        this.kind = 4 /* TopLevelRepositoryReference */;\n    }\n}\nexports.TopLevelRepositoryReference = TopLevelRepositoryReference;\nfunction parseInclude(include) {\n    if (include === '$base') {\n        return new BaseReference();\n    }\n    else if (include === '$self') {\n        return new SelfReference();\n    }\n    const indexOfSharp = include.indexOf(\"#\");\n    if (indexOfSharp === -1) {\n        return new TopLevelReference(include);\n    }\n    else if (indexOfSharp === 0) {\n        return new RelativeReference(include.substring(1));\n    }\n    else {\n        const scopeName = include.substring(0, indexOfSharp);\n        const ruleName = include.substring(indexOfSharp + 1);\n        return new TopLevelRepositoryReference(scopeName, ruleName);\n    }\n}\nexports.parseInclude = parseInclude;\n//# sourceMappingURL=grammarDependencies.js.map","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./grammar\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LocalStackElement = exports._tokenizeString = void 0;\nconst debug_1 = require(\"../debug\");\nconst onigLib_1 = require(\"../onigLib\");\nconst rule_1 = require(\"../rule\");\nconst utils_1 = require(\"../utils\");\nclass TokenizeStringResult {\n    constructor(stack, stoppedEarly) {\n        this.stack = stack;\n        this.stoppedEarly = stoppedEarly;\n    }\n}\n/**\n * Tokenize a string\n * @param grammar\n * @param lineText\n * @param isFirstLine\n * @param linePos\n * @param stack\n * @param lineTokens\n * @param checkWhileConditions\n * @param timeLimit Use `0` to indicate no time limit\n * @returns the StackElement or StackElement.TIME_LIMIT_REACHED if the time limit has been reached\n */\nfunction _tokenizeString(grammar, lineText, isFirstLine, linePos, stack, lineTokens, checkWhileConditions, timeLimit) {\n    const lineLength = lineText.content.length;\n    let STOP = false;\n    let anchorPosition = -1;\n    if (checkWhileConditions) {\n        const whileCheckResult = _checkWhileConditions(grammar, lineText, isFirstLine, linePos, stack, lineTokens);\n        stack = whileCheckResult.stack;\n        linePos = whileCheckResult.linePos;\n        isFirstLine = whileCheckResult.isFirstLine;\n        anchorPosition = whileCheckResult.anchorPosition;\n    }\n    const startTime = Date.now();\n    while (!STOP) {\n        if (timeLimit !== 0) {\n            const elapsedTime = Date.now() - startTime;\n            if (elapsedTime > timeLimit) {\n                return new TokenizeStringResult(stack, true);\n            }\n        }\n        scanNext(); // potentially modifies linePos && anchorPosition\n    }\n    return new TokenizeStringResult(stack, false);\n    function scanNext() {\n        if (debug_1.DebugFlags.InDebugMode) {\n            console.log(\"\");\n            console.log(`@@scanNext ${linePos}: |${lineText.content\n                .substr(linePos)\n                .replace(/\\n$/, \"\\\\n\")}|`);\n        }\n        const r = matchRuleOrInjections(grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n        if (!r) {\n            if (debug_1.DebugFlags.InDebugMode) {\n                console.log(\"  no more matches.\");\n            }\n            // No match\n            lineTokens.produce(stack, lineLength);\n            STOP = true;\n            return;\n        }\n        const captureIndices = r.captureIndices;\n        const matchedRuleId = r.matchedRuleId;\n        const hasAdvanced = captureIndices && captureIndices.length > 0\n            ? captureIndices[0].end > linePos\n            : false;\n        if (matchedRuleId === rule_1.endRuleId) {\n            // We matched the `end` for this rule => pop it\n            const poppedRule = stack.getRule(grammar);\n            if (debug_1.DebugFlags.InDebugMode) {\n                console.log(\"  popping \" +\n                    poppedRule.debugName +\n                    \" - \" +\n                    poppedRule.debugEndRegExp);\n            }\n            lineTokens.produce(stack, captureIndices[0].start);\n            stack = stack.withContentNameScopesList(stack.nameScopesList);\n            handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, poppedRule.endCaptures, captureIndices);\n            lineTokens.produce(stack, captureIndices[0].end);\n            // pop\n            const popped = stack;\n            stack = stack.parent;\n            anchorPosition = popped.getAnchorPos();\n            if (!hasAdvanced && popped.getEnterPos() === linePos) {\n                // Grammar pushed & popped a rule without advancing\n                if (debug_1.DebugFlags.InDebugMode) {\n                    console.error(\"[1] - Grammar is in an endless loop - Grammar pushed & popped a rule without advancing\");\n                }\n                // See https://github.com/Microsoft/vscode-textmate/issues/12\n                // Let's assume this was a mistake by the grammar author and the intent was to continue in this state\n                stack = popped;\n                lineTokens.produce(stack, lineLength);\n                STOP = true;\n                return;\n            }\n        }\n        else {\n            // We matched a rule!\n            const _rule = grammar.getRule(matchedRuleId);\n            lineTokens.produce(stack, captureIndices[0].start);\n            const beforePush = stack;\n            // push it on the stack rule\n            const scopeName = _rule.getName(lineText.content, captureIndices);\n            const nameScopesList = stack.contentNameScopesList.pushAttributed(scopeName, grammar);\n            stack = stack.push(matchedRuleId, linePos, anchorPosition, captureIndices[0].end === lineLength, null, nameScopesList, nameScopesList);\n            if (_rule instanceof rule_1.BeginEndRule) {\n                const pushedRule = _rule;\n                if (debug_1.DebugFlags.InDebugMode) {\n                    console.log(\"  pushing \" +\n                        pushedRule.debugName +\n                        \" - \" +\n                        pushedRule.debugBeginRegExp);\n                }\n                handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, pushedRule.beginCaptures, captureIndices);\n                lineTokens.produce(stack, captureIndices[0].end);\n                anchorPosition = captureIndices[0].end;\n                const contentName = pushedRule.getContentName(lineText.content, captureIndices);\n                const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);\n                stack = stack.withContentNameScopesList(contentNameScopesList);\n                if (pushedRule.endHasBackReferences) {\n                    stack = stack.withEndRule(pushedRule.getEndWithResolvedBackReferences(lineText.content, captureIndices));\n                }\n                if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {\n                    // Grammar pushed the same rule without advancing\n                    if (debug_1.DebugFlags.InDebugMode) {\n                        console.error(\"[2] - Grammar is in an endless loop - Grammar pushed the same rule without advancing\");\n                    }\n                    stack = stack.pop();\n                    lineTokens.produce(stack, lineLength);\n                    STOP = true;\n                    return;\n                }\n            }\n            else if (_rule instanceof rule_1.BeginWhileRule) {\n                const pushedRule = _rule;\n                if (debug_1.DebugFlags.InDebugMode) {\n                    console.log(\"  pushing \" + pushedRule.debugName);\n                }\n                handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, pushedRule.beginCaptures, captureIndices);\n                lineTokens.produce(stack, captureIndices[0].end);\n                anchorPosition = captureIndices[0].end;\n                const contentName = pushedRule.getContentName(lineText.content, captureIndices);\n                const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);\n                stack = stack.withContentNameScopesList(contentNameScopesList);\n                if (pushedRule.whileHasBackReferences) {\n                    stack = stack.withEndRule(pushedRule.getWhileWithResolvedBackReferences(lineText.content, captureIndices));\n                }\n                if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {\n                    // Grammar pushed the same rule without advancing\n                    if (debug_1.DebugFlags.InDebugMode) {\n                        console.error(\"[3] - Grammar is in an endless loop - Grammar pushed the same rule without advancing\");\n                    }\n                    stack = stack.pop();\n                    lineTokens.produce(stack, lineLength);\n                    STOP = true;\n                    return;\n                }\n            }\n            else {\n                const matchingRule = _rule;\n                if (debug_1.DebugFlags.InDebugMode) {\n                    console.log(\"  matched \" +\n                        matchingRule.debugName +\n                        \" - \" +\n                        matchingRule.debugMatchRegExp);\n                }\n                handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, matchingRule.captures, captureIndices);\n                lineTokens.produce(stack, captureIndices[0].end);\n                // pop rule immediately since it is a MatchRule\n                stack = stack.pop();\n                if (!hasAdvanced) {\n                    // Grammar is not advancing, nor is it pushing/popping\n                    if (debug_1.DebugFlags.InDebugMode) {\n                        console.error(\"[4] - Grammar is in an endless loop - Grammar is not advancing, nor is it pushing/popping\");\n                    }\n                    stack = stack.safePop();\n                    lineTokens.produce(stack, lineLength);\n                    STOP = true;\n                    return;\n                }\n            }\n        }\n        if (captureIndices[0].end > linePos) {\n            // Advance stream\n            linePos = captureIndices[0].end;\n            isFirstLine = false;\n        }\n    }\n}\nexports._tokenizeString = _tokenizeString;\n/**\n * Walk the stack from bottom to top, and check each while condition in this order.\n * If any fails, cut off the entire stack above the failed while condition. While conditions\n * may also advance the linePosition.\n */\nfunction _checkWhileConditions(grammar, lineText, isFirstLine, linePos, stack, lineTokens) {\n    let anchorPosition = (stack.beginRuleCapturedEOL ? 0 : -1);\n    const whileRules = [];\n    for (let node = stack; node; node = node.pop()) {\n        const nodeRule = node.getRule(grammar);\n        if (nodeRule instanceof rule_1.BeginWhileRule) {\n            whileRules.push({\n                rule: nodeRule,\n                stack: node\n            });\n        }\n    }\n    for (let whileRule = whileRules.pop(); whileRule; whileRule = whileRules.pop()) {\n        const { ruleScanner, findOptions } = prepareRuleWhileSearch(whileRule.rule, grammar, whileRule.stack.endRule, isFirstLine, linePos === anchorPosition);\n        const r = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n        if (debug_1.DebugFlags.InDebugMode) {\n            console.log('  scanning for while rule');\n            console.log(ruleScanner.toString());\n        }\n        if (r) {\n            const matchedRuleId = r.ruleId;\n            if (matchedRuleId !== rule_1.whileRuleId) {\n                // we shouldn't end up here\n                stack = whileRule.stack.pop();\n                break;\n            }\n            if (r.captureIndices && r.captureIndices.length) {\n                lineTokens.produce(whileRule.stack, r.captureIndices[0].start);\n                handleCaptures(grammar, lineText, isFirstLine, whileRule.stack, lineTokens, whileRule.rule.whileCaptures, r.captureIndices);\n                lineTokens.produce(whileRule.stack, r.captureIndices[0].end);\n                anchorPosition = r.captureIndices[0].end;\n                if (r.captureIndices[0].end > linePos) {\n                    linePos = r.captureIndices[0].end;\n                    isFirstLine = false;\n                }\n            }\n        }\n        else {\n            if (debug_1.DebugFlags.InDebugMode) {\n                console.log('  popping ' + whileRule.rule.debugName + ' - ' + whileRule.rule.debugWhileRegExp);\n            }\n            stack = whileRule.stack.pop();\n            break;\n        }\n    }\n    return { stack: stack, linePos: linePos, anchorPosition: anchorPosition, isFirstLine: isFirstLine };\n}\nfunction matchRuleOrInjections(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n    // Look for normal grammar rule\n    const matchResult = matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n    // Look for injected rules\n    const injections = grammar.getInjections();\n    if (injections.length === 0) {\n        // No injections whatsoever => early return\n        return matchResult;\n    }\n    const injectionResult = matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n    if (!injectionResult) {\n        // No injections matched => early return\n        return matchResult;\n    }\n    if (!matchResult) {\n        // Only injections matched => early return\n        return injectionResult;\n    }\n    // Decide if `matchResult` or `injectionResult` should win\n    const matchResultScore = matchResult.captureIndices[0].start;\n    const injectionResultScore = injectionResult.captureIndices[0].start;\n    if (injectionResultScore < matchResultScore || (injectionResult.priorityMatch && injectionResultScore === matchResultScore)) {\n        // injection won!\n        return injectionResult;\n    }\n    return matchResult;\n}\nfunction matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n    const rule = stack.getRule(grammar);\n    const { ruleScanner, findOptions } = prepareRuleSearch(rule, grammar, stack.endRule, isFirstLine, linePos === anchorPosition);\n    let perfStart = 0;\n    if (debug_1.DebugFlags.InDebugMode) {\n        perfStart = utils_1.performanceNow();\n    }\n    const r = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n    if (debug_1.DebugFlags.InDebugMode) {\n        const elapsedMillis = utils_1.performanceNow() - perfStart;\n        if (elapsedMillis > 5) {\n            console.warn(`Rule ${rule.debugName} (${rule.id}) matching took ${elapsedMillis} against '${lineText}'`);\n        }\n        console.log(`  scanning for (linePos: ${linePos}, anchorPosition: ${anchorPosition})`);\n        console.log(ruleScanner.toString());\n        if (r) {\n            console.log(`matched rule id: ${r.ruleId} from ${r.captureIndices[0].start} to ${r.captureIndices[0].end}`);\n        }\n    }\n    if (r) {\n        return {\n            captureIndices: r.captureIndices,\n            matchedRuleId: r.ruleId\n        };\n    }\n    return null;\n}\nfunction matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n    // The lower the better\n    let bestMatchRating = Number.MAX_VALUE;\n    let bestMatchCaptureIndices = null;\n    let bestMatchRuleId;\n    let bestMatchResultPriority = 0;\n    const scopes = stack.contentNameScopesList.getScopeNames();\n    for (let i = 0, len = injections.length; i < len; i++) {\n        const injection = injections[i];\n        if (!injection.matcher(scopes)) {\n            // injection selector doesn't match stack\n            continue;\n        }\n        const rule = grammar.getRule(injection.ruleId);\n        const { ruleScanner, findOptions } = prepareRuleSearch(rule, grammar, null, isFirstLine, linePos === anchorPosition);\n        const matchResult = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n        if (!matchResult) {\n            continue;\n        }\n        if (debug_1.DebugFlags.InDebugMode) {\n            console.log(`  matched injection: ${injection.debugSelector}`);\n            console.log(ruleScanner.toString());\n        }\n        const matchRating = matchResult.captureIndices[0].start;\n        if (matchRating >= bestMatchRating) {\n            // Injections are sorted by priority, so the previous injection had a better or equal priority\n            continue;\n        }\n        bestMatchRating = matchRating;\n        bestMatchCaptureIndices = matchResult.captureIndices;\n        bestMatchRuleId = matchResult.ruleId;\n        bestMatchResultPriority = injection.priority;\n        if (bestMatchRating === linePos) {\n            // No more need to look at the rest of the injections.\n            break;\n        }\n    }\n    if (bestMatchCaptureIndices) {\n        return {\n            priorityMatch: bestMatchResultPriority === -1,\n            captureIndices: bestMatchCaptureIndices,\n            matchedRuleId: bestMatchRuleId\n        };\n    }\n    return null;\n}\nfunction prepareRuleSearch(rule, grammar, endRegexSource, allowA, allowG) {\n    if (debug_1.UseOnigurumaFindOptions) {\n        const ruleScanner = rule.compile(grammar, endRegexSource);\n        const findOptions = getFindOptions(allowA, allowG);\n        return { ruleScanner, findOptions };\n    }\n    const ruleScanner = rule.compileAG(grammar, endRegexSource, allowA, allowG);\n    return { ruleScanner, findOptions: 0 /* None */ };\n}\nfunction prepareRuleWhileSearch(rule, grammar, endRegexSource, allowA, allowG) {\n    if (debug_1.UseOnigurumaFindOptions) {\n        const ruleScanner = rule.compileWhile(grammar, endRegexSource);\n        const findOptions = getFindOptions(allowA, allowG);\n        return { ruleScanner, findOptions };\n    }\n    const ruleScanner = rule.compileWhileAG(grammar, endRegexSource, allowA, allowG);\n    return { ruleScanner, findOptions: 0 /* None */ };\n}\nfunction getFindOptions(allowA, allowG) {\n    let options = 0 /* None */;\n    if (!allowA) {\n        options |= 1 /* NotBeginString */;\n    }\n    if (!allowG) {\n        options |= 4 /* NotBeginPosition */;\n    }\n    return options;\n}\nfunction handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, captures, captureIndices) {\n    if (captures.length === 0) {\n        return;\n    }\n    const lineTextContent = lineText.content;\n    const len = Math.min(captures.length, captureIndices.length);\n    const localStack = [];\n    const maxEnd = captureIndices[0].end;\n    for (let i = 0; i < len; i++) {\n        const captureRule = captures[i];\n        if (captureRule === null) {\n            // Not interested\n            continue;\n        }\n        const captureIndex = captureIndices[i];\n        if (captureIndex.length === 0) {\n            // Nothing really captured\n            continue;\n        }\n        if (captureIndex.start > maxEnd) {\n            // Capture going beyond consumed string\n            break;\n        }\n        // pop captures while needed\n        while (localStack.length > 0 && localStack[localStack.length - 1].endPos <= captureIndex.start) {\n            // pop!\n            lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);\n            localStack.pop();\n        }\n        if (localStack.length > 0) {\n            lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, captureIndex.start);\n        }\n        else {\n            lineTokens.produce(stack, captureIndex.start);\n        }\n        if (captureRule.retokenizeCapturedWithRuleId) {\n            // the capture requires additional matching\n            const scopeName = captureRule.getName(lineTextContent, captureIndices);\n            const nameScopesList = stack.contentNameScopesList.pushAttributed(scopeName, grammar);\n            const contentName = captureRule.getContentName(lineTextContent, captureIndices);\n            const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);\n            const stackClone = stack.push(captureRule.retokenizeCapturedWithRuleId, captureIndex.start, -1, false, null, nameScopesList, contentNameScopesList);\n            const onigSubStr = grammar.createOnigString(lineTextContent.substring(0, captureIndex.end));\n            _tokenizeString(grammar, onigSubStr, (isFirstLine && captureIndex.start === 0), captureIndex.start, stackClone, lineTokens, false, /* no time limit */ 0);\n            onigLib_1.disposeOnigString(onigSubStr);\n            continue;\n        }\n        const captureRuleScopeName = captureRule.getName(lineTextContent, captureIndices);\n        if (captureRuleScopeName !== null) {\n            // push\n            const base = localStack.length > 0 ? localStack[localStack.length - 1].scopes : stack.contentNameScopesList;\n            const captureRuleScopesList = base.pushAttributed(captureRuleScopeName, grammar);\n            localStack.push(new LocalStackElement(captureRuleScopesList, captureIndex.end));\n        }\n    }\n    while (localStack.length > 0) {\n        // pop!\n        lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);\n        localStack.pop();\n    }\n}\nclass LocalStackElement {\n    constructor(scopes, endPos) {\n        this.scopes = scopes;\n        this.endPos = endPos;\n    }\n}\nexports.LocalStackElement = LocalStackElement;\n//# sourceMappingURL=tokenizeString.js.map","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseJSON = void 0;\nfunction doFail(streamState, msg) {\n    // console.log('Near offset ' + streamState.pos + ': ' + msg + ' ~~~' + streamState.source.substr(streamState.pos, 50) + '~~~');\n    throw new Error('Near offset ' + streamState.pos + ': ' + msg + ' ~~~' + streamState.source.substr(streamState.pos, 50) + '~~~');\n}\nfunction parseJSON(source, filename, withMetadata) {\n    let streamState = new JSONStreamState(source);\n    let token = new JSONToken();\n    let state = 0 /* ROOT_STATE */;\n    let cur = null;\n    let stateStack = [];\n    let objStack = [];\n    function pushState() {\n        stateStack.push(state);\n        objStack.push(cur);\n    }\n    function popState() {\n        state = stateStack.pop();\n        cur = objStack.pop();\n    }\n    function fail(msg) {\n        doFail(streamState, msg);\n    }\n    while (nextJSONToken(streamState, token)) {\n        if (state === 0 /* ROOT_STATE */) {\n            if (cur !== null) {\n                fail('too many constructs in root');\n            }\n            if (token.type === 3 /* LEFT_CURLY_BRACKET */) {\n                cur = {};\n                if (withMetadata) {\n                    cur.$vscodeTextmateLocation = token.toLocation(filename);\n                }\n                pushState();\n                state = 1 /* DICT_STATE */;\n                continue;\n            }\n            if (token.type === 2 /* LEFT_SQUARE_BRACKET */) {\n                cur = [];\n                pushState();\n                state = 4 /* ARR_STATE */;\n                continue;\n            }\n            fail('unexpected token in root');\n        }\n        if (state === 2 /* DICT_STATE_COMMA */) {\n            if (token.type === 5 /* RIGHT_CURLY_BRACKET */) {\n                popState();\n                continue;\n            }\n            if (token.type === 7 /* COMMA */) {\n                state = 3 /* DICT_STATE_NO_CLOSE */;\n                continue;\n            }\n            fail('expected , or }');\n        }\n        if (state === 1 /* DICT_STATE */ || state === 3 /* DICT_STATE_NO_CLOSE */) {\n            if (state === 1 /* DICT_STATE */ && token.type === 5 /* RIGHT_CURLY_BRACKET */) {\n                popState();\n                continue;\n            }\n            if (token.type === 1 /* STRING */) {\n                let keyValue = token.value;\n                if (!nextJSONToken(streamState, token) || token.type !== 6 /* COLON */) {\n                    fail('expected colon');\n                }\n                if (!nextJSONToken(streamState, token)) {\n                    fail('expected value');\n                }\n                state = 2 /* DICT_STATE_COMMA */;\n                if (token.type === 1 /* STRING */) {\n                    cur[keyValue] = token.value;\n                    continue;\n                }\n                if (token.type === 8 /* NULL */) {\n                    cur[keyValue] = null;\n                    continue;\n                }\n                if (token.type === 9 /* TRUE */) {\n                    cur[keyValue] = true;\n                    continue;\n                }\n                if (token.type === 10 /* FALSE */) {\n                    cur[keyValue] = false;\n                    continue;\n                }\n                if (token.type === 11 /* NUMBER */) {\n                    cur[keyValue] = parseFloat(token.value);\n                    continue;\n                }\n                if (token.type === 2 /* LEFT_SQUARE_BRACKET */) {\n                    let newArr = [];\n                    cur[keyValue] = newArr;\n                    pushState();\n                    state = 4 /* ARR_STATE */;\n                    cur = newArr;\n                    continue;\n                }\n                if (token.type === 3 /* LEFT_CURLY_BRACKET */) {\n                    let newDict = {};\n                    if (withMetadata) {\n                        newDict.$vscodeTextmateLocation = token.toLocation(filename);\n                    }\n                    cur[keyValue] = newDict;\n                    pushState();\n                    state = 1 /* DICT_STATE */;\n                    cur = newDict;\n                    continue;\n                }\n            }\n            fail('unexpected token in dict');\n        }\n        if (state === 5 /* ARR_STATE_COMMA */) {\n            if (token.type === 4 /* RIGHT_SQUARE_BRACKET */) {\n                popState();\n                continue;\n            }\n            if (token.type === 7 /* COMMA */) {\n                state = 6 /* ARR_STATE_NO_CLOSE */;\n                continue;\n            }\n            fail('expected , or ]');\n        }\n        if (state === 4 /* ARR_STATE */ || state === 6 /* ARR_STATE_NO_CLOSE */) {\n            if (state === 4 /* ARR_STATE */ && token.type === 4 /* RIGHT_SQUARE_BRACKET */) {\n                popState();\n                continue;\n            }\n            state = 5 /* ARR_STATE_COMMA */;\n            if (token.type === 1 /* STRING */) {\n                cur.push(token.value);\n                continue;\n            }\n            if (token.type === 8 /* NULL */) {\n                cur.push(null);\n                continue;\n            }\n            if (token.type === 9 /* TRUE */) {\n                cur.push(true);\n                continue;\n            }\n            if (token.type === 10 /* FALSE */) {\n                cur.push(false);\n                continue;\n            }\n            if (token.type === 11 /* NUMBER */) {\n                cur.push(parseFloat(token.value));\n                continue;\n            }\n            if (token.type === 2 /* LEFT_SQUARE_BRACKET */) {\n                let newArr = [];\n                cur.push(newArr);\n                pushState();\n                state = 4 /* ARR_STATE */;\n                cur = newArr;\n                continue;\n            }\n            if (token.type === 3 /* LEFT_CURLY_BRACKET */) {\n                let newDict = {};\n                if (withMetadata) {\n                    newDict.$vscodeTextmateLocation = token.toLocation(filename);\n                }\n                cur.push(newDict);\n                pushState();\n                state = 1 /* DICT_STATE */;\n                cur = newDict;\n                continue;\n            }\n            fail('unexpected token in array');\n        }\n        fail('unknown state');\n    }\n    if (objStack.length !== 0) {\n        fail('unclosed constructs');\n    }\n    return cur;\n}\nexports.parseJSON = parseJSON;\nclass JSONStreamState {\n    constructor(source) {\n        this.source = source;\n        this.pos = 0;\n        this.len = source.length;\n        this.line = 1;\n        this.char = 0;\n    }\n}\nclass JSONToken {\n    constructor() {\n        this.value = null;\n        this.type = 0 /* UNKNOWN */;\n        this.offset = -1;\n        this.len = -1;\n        this.line = -1;\n        this.char = -1;\n    }\n    toLocation(filename) {\n        return {\n            filename: filename,\n            line: this.line,\n            char: this.char\n        };\n    }\n}\n/**\n * precondition: the string is known to be valid JSON (https://www.ietf.org/rfc/rfc4627.txt)\n */\nfunction nextJSONToken(_state, _out) {\n    _out.value = null;\n    _out.type = 0 /* UNKNOWN */;\n    _out.offset = -1;\n    _out.len = -1;\n    _out.line = -1;\n    _out.char = -1;\n    let source = _state.source;\n    let pos = _state.pos;\n    let len = _state.len;\n    let line = _state.line;\n    let char = _state.char;\n    //------------------------ skip whitespace\n    let chCode;\n    do {\n        if (pos >= len) {\n            return false; /*EOS*/\n        }\n        chCode = source.charCodeAt(pos);\n        if (chCode === 32 /* SPACE */ || chCode === 9 /* HORIZONTAL_TAB */ || chCode === 13 /* CARRIAGE_RETURN */) {\n            // regular whitespace\n            pos++;\n            char++;\n            continue;\n        }\n        if (chCode === 10 /* LINE_FEED */) {\n            // newline\n            pos++;\n            line++;\n            char = 0;\n            continue;\n        }\n        // not whitespace\n        break;\n    } while (true);\n    _out.offset = pos;\n    _out.line = line;\n    _out.char = char;\n    if (chCode === 34 /* QUOTATION_MARK */) {\n        //------------------------ strings\n        _out.type = 1 /* STRING */;\n        pos++;\n        char++;\n        do {\n            if (pos >= len) {\n                return false; /*EOS*/\n            }\n            chCode = source.charCodeAt(pos);\n            pos++;\n            char++;\n            if (chCode === 92 /* BACKSLASH */) {\n                // skip next char\n                pos++;\n                char++;\n                continue;\n            }\n            if (chCode === 34 /* QUOTATION_MARK */) {\n                // end of the string\n                break;\n            }\n        } while (true);\n        _out.value = source.substring(_out.offset + 1, pos - 1).replace(/\\\\u([0-9A-Fa-f]{4})/g, (_, m0) => {\n            return String.fromCodePoint(parseInt(m0, 16));\n        }).replace(/\\\\(.)/g, (_, m0) => {\n            switch (m0) {\n                case '\"': return '\"';\n                case '\\\\': return '\\\\';\n                case '/': return '/';\n                case 'b': return '\\b';\n                case 'f': return '\\f';\n                case 'n': return '\\n';\n                case 'r': return '\\r';\n                case 't': return '\\t';\n                default: doFail(_state, 'invalid escape sequence');\n            }\n            throw new Error('unreachable');\n        });\n    }\n    else if (chCode === 91 /* LEFT_SQUARE_BRACKET */) {\n        _out.type = 2 /* LEFT_SQUARE_BRACKET */;\n        pos++;\n        char++;\n    }\n    else if (chCode === 123 /* LEFT_CURLY_BRACKET */) {\n        _out.type = 3 /* LEFT_CURLY_BRACKET */;\n        pos++;\n        char++;\n    }\n    else if (chCode === 93 /* RIGHT_SQUARE_BRACKET */) {\n        _out.type = 4 /* RIGHT_SQUARE_BRACKET */;\n        pos++;\n        char++;\n    }\n    else if (chCode === 125 /* RIGHT_CURLY_BRACKET */) {\n        _out.type = 5 /* RIGHT_CURLY_BRACKET */;\n        pos++;\n        char++;\n    }\n    else if (chCode === 58 /* COLON */) {\n        _out.type = 6 /* COLON */;\n        pos++;\n        char++;\n    }\n    else if (chCode === 44 /* COMMA */) {\n        _out.type = 7 /* COMMA */;\n        pos++;\n        char++;\n    }\n    else if (chCode === 110 /* n */) {\n        //------------------------ null\n        _out.type = 8 /* NULL */;\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 117 /* u */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 108 /* l */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 108 /* l */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n    }\n    else if (chCode === 116 /* t */) {\n        //------------------------ true\n        _out.type = 9 /* TRUE */;\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 114 /* r */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 117 /* u */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 101 /* e */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n    }\n    else if (chCode === 102 /* f */) {\n        //------------------------ false\n        _out.type = 10 /* FALSE */;\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 97 /* a */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 108 /* l */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 115 /* s */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n        chCode = source.charCodeAt(pos);\n        if (chCode !== 101 /* e */) {\n            return false; /* INVALID */\n        }\n        pos++;\n        char++;\n    }\n    else {\n        //------------------------ numbers\n        _out.type = 11 /* NUMBER */;\n        do {\n            if (pos >= len) {\n                return false; /*EOS*/\n            }\n            chCode = source.charCodeAt(pos);\n            if (chCode === 46 /* DOT */\n                || (chCode >= 48 /* D0 */ && chCode <= 57 /* D9 */)\n                || (chCode === 101 /* e */ || chCode === 69 /* E */)\n                || (chCode === 45 /* MINUS */ || chCode === 43 /* PLUS */)) {\n                // looks like a piece of a number\n                pos++;\n                char++;\n                continue;\n            }\n            // pos--; char--;\n            break;\n        } while (true);\n    }\n    _out.len = pos - _out.offset;\n    if (_out.value === null) {\n        _out.value = source.substr(_out.offset, _out.len);\n    }\n    _state.pos = pos;\n    _state.line = line;\n    _state.char = char;\n    // console.log('PRODUCING TOKEN: ', _out.value, JSONTokenType[_out.type]);\n    return true;\n}\n//# sourceMappingURL=json.js.map","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applyStateStackDiff = exports.diffStateStacksRefEq = exports.parseRawGrammar = exports.INITIAL = exports.Registry = void 0;\nconst grammar_1 = require(\"./grammar\");\nconst grammarReader = require(\"./parseRawGrammar\");\nconst registry_1 = require(\"./registry\");\nconst theme_1 = require(\"./theme\");\nconst grammarDependencies_1 = require(\"./grammar/grammarDependencies\");\nconst diffStateStacks_1 = require(\"./diffStateStacks\");\nObject.defineProperty(exports, \"applyStateStackDiff\", { enumerable: true, get: function () { return diffStateStacks_1.applyStateStackDiff; } });\nObject.defineProperty(exports, \"diffStateStacksRefEq\", { enumerable: true, get: function () { return diffStateStacks_1.diffStateStacksRefEq; } });\n__exportStar(require(\"./onigLib\"), exports);\n/**\n * The registry that will hold all grammars.\n */\nclass Registry {\n    constructor(options) {\n        this._options = options;\n        this._syncRegistry = new registry_1.SyncRegistry(theme_1.Theme.createFromRawTheme(options.theme, options.colorMap), options.onigLib);\n        this._ensureGrammarCache = new Map();\n    }\n    dispose() {\n        this._syncRegistry.dispose();\n    }\n    /**\n     * Change the theme. Once called, no previous `ruleStack` should be used anymore.\n     */\n    setTheme(theme, colorMap) {\n        this._syncRegistry.setTheme(theme_1.Theme.createFromRawTheme(theme, colorMap));\n    }\n    /**\n     * Returns a lookup array for color ids.\n     */\n    getColorMap() {\n        return this._syncRegistry.getColorMap();\n    }\n    /**\n     * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n     * Please do not use language id 0.\n     */\n    loadGrammarWithEmbeddedLanguages(initialScopeName, initialLanguage, embeddedLanguages) {\n        return this.loadGrammarWithConfiguration(initialScopeName, initialLanguage, { embeddedLanguages });\n    }\n    /**\n     * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n     * Please do not use language id 0.\n     */\n    loadGrammarWithConfiguration(initialScopeName, initialLanguage, configuration) {\n        return this._loadGrammar(initialScopeName, initialLanguage, configuration.embeddedLanguages, configuration.tokenTypes, new grammar_1.BalancedBracketSelectors(configuration.balancedBracketSelectors || [], configuration.unbalancedBracketSelectors || []));\n    }\n    /**\n     * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n     */\n    loadGrammar(initialScopeName) {\n        return this._loadGrammar(initialScopeName, 0, null, null, null);\n    }\n    async _loadGrammar(initialScopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors) {\n        const dependencyProcessor = new grammarDependencies_1.ScopeDependencyProcessor(this._syncRegistry, initialScopeName);\n        while (dependencyProcessor.Q.length > 0) {\n            await Promise.all(dependencyProcessor.Q.map((request) => this._loadSingleGrammar(request.scopeName)));\n            dependencyProcessor.processQueue();\n        }\n        return this._grammarForScopeName(initialScopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors);\n    }\n    async _loadSingleGrammar(scopeName) {\n        if (!this._ensureGrammarCache.has(scopeName)) {\n            this._ensureGrammarCache.set(scopeName, this._doLoadSingleGrammar(scopeName));\n        }\n        return this._ensureGrammarCache.get(scopeName);\n    }\n    async _doLoadSingleGrammar(scopeName) {\n        const grammar = await this._options.loadGrammar(scopeName);\n        if (grammar) {\n            const injections = typeof this._options.getInjections === \"function\" ? this._options.getInjections(scopeName) : undefined;\n            this._syncRegistry.addGrammar(grammar, injections);\n        }\n    }\n    /**\n     * Adds a rawGrammar.\n     */\n    async addGrammar(rawGrammar, injections = [], initialLanguage = 0, embeddedLanguages = null) {\n        this._syncRegistry.addGrammar(rawGrammar, injections);\n        return (await this._grammarForScopeName(rawGrammar.scopeName, initialLanguage, embeddedLanguages));\n    }\n    /**\n     * Get the grammar for `scopeName`. The grammar must first be created via `loadGrammar` or `addGrammar`.\n     */\n    _grammarForScopeName(scopeName, initialLanguage = 0, embeddedLanguages = null, tokenTypes = null, balancedBracketSelectors = null) {\n        return this._syncRegistry.grammarForScopeName(scopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors);\n    }\n}\nexports.Registry = Registry;\nexports.INITIAL = grammar_1.StateStackImpl.NULL;\nexports.parseRawGrammar = grammarReader.parseRawGrammar;\n//# sourceMappingURL=main.js.map","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMatchers = void 0;\nfunction createMatchers(selector, matchesName) {\n    const results = [];\n    const tokenizer = newTokenizer(selector);\n    let token = tokenizer.next();\n    while (token !== null) {\n        let priority = 0;\n        if (token.length === 2 && token.charAt(1) === ':') {\n            switch (token.charAt(0)) {\n                case 'R':\n                    priority = 1;\n                    break;\n                case 'L':\n                    priority = -1;\n                    break;\n                default:\n                    console.log(`Unknown priority ${token} in scope selector`);\n            }\n            token = tokenizer.next();\n        }\n        let matcher = parseConjunction();\n        results.push({ matcher, priority });\n        if (token !== ',') {\n            break;\n        }\n        token = tokenizer.next();\n    }\n    return results;\n    function parseOperand() {\n        if (token === '-') {\n            token = tokenizer.next();\n            const expressionToNegate = parseOperand();\n            return matcherInput => !!expressionToNegate && !expressionToNegate(matcherInput);\n        }\n        if (token === '(') {\n            token = tokenizer.next();\n            const expressionInParents = parseInnerExpression();\n            if (token === ')') {\n                token = tokenizer.next();\n            }\n            return expressionInParents;\n        }\n        if (isIdentifier(token)) {\n            const identifiers = [];\n            do {\n                identifiers.push(token);\n                token = tokenizer.next();\n            } while (isIdentifier(token));\n            return matcherInput => matchesName(identifiers, matcherInput);\n        }\n        return null;\n    }\n    function parseConjunction() {\n        const matchers = [];\n        let matcher = parseOperand();\n        while (matcher) {\n            matchers.push(matcher);\n            matcher = parseOperand();\n        }\n        return matcherInput => matchers.every(matcher => matcher(matcherInput)); // and\n    }\n    function parseInnerExpression() {\n        const matchers = [];\n        let matcher = parseConjunction();\n        while (matcher) {\n            matchers.push(matcher);\n            if (token === '|' || token === ',') {\n                do {\n                    token = tokenizer.next();\n                } while (token === '|' || token === ','); // ignore subsequent commas\n            }\n            else {\n                break;\n            }\n            matcher = parseConjunction();\n        }\n        return matcherInput => matchers.some(matcher => matcher(matcherInput)); // or\n    }\n}\nexports.createMatchers = createMatchers;\nfunction isIdentifier(token) {\n    return !!token && !!token.match(/[\\w\\.:]+/);\n}\nfunction newTokenizer(input) {\n    let regex = /([LR]:|[\\w\\.:][\\w\\.:\\-]*|[\\,\\|\\-\\(\\)])/g;\n    let match = regex.exec(input);\n    return {\n        next: () => {\n            if (!match) {\n                return null;\n            }\n            const res = match[0];\n            match = regex.exec(input);\n            return res;\n        }\n    };\n}\n//# sourceMappingURL=matcher.js.map","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.disposeOnigString = void 0;\nfunction disposeOnigString(str) {\n    if (typeof str.dispose === 'function') {\n        str.dispose();\n    }\n}\nexports.disposeOnigString = disposeOnigString;\n//# sourceMappingURL=onigLib.js.map","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseRawGrammar = void 0;\nconst plist = require(\"./plist\");\nconst debug_1 = require(\"./debug\");\nconst json_1 = require(\"./json\");\nfunction parseRawGrammar(content, filePath = null) {\n    if (filePath !== null && /\\.json$/.test(filePath)) {\n        return parseJSONGrammar(content, filePath);\n    }\n    return parsePLISTGrammar(content, filePath);\n}\nexports.parseRawGrammar = parseRawGrammar;\nfunction parseJSONGrammar(contents, filename) {\n    if (debug_1.DebugFlags.InDebugMode) {\n        return json_1.parseJSON(contents, filename, true);\n    }\n    return JSON.parse(contents);\n}\nfunction parsePLISTGrammar(contents, filename) {\n    if (debug_1.DebugFlags.InDebugMode) {\n        return plist.parseWithLocation(contents, filename, '$vscodeTextmateLocation');\n    }\n    return plist.parsePLIST(contents);\n}\n//# sourceMappingURL=parseRawGrammar.js.map","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parsePLIST = exports.parseWithLocation = void 0;\nfunction parseWithLocation(content, filename, locationKeyName) {\n    return _parse(content, filename, locationKeyName);\n}\nexports.parseWithLocation = parseWithLocation;\n/**\n * A very fast plist parser\n */\nfunction parsePLIST(content) {\n    return _parse(content, null, null);\n}\nexports.parsePLIST = parsePLIST;\nfunction _parse(content, filename, locationKeyName) {\n    const len = content.length;\n    let pos = 0;\n    let line = 1;\n    let char = 0;\n    // Skip UTF8 BOM\n    if (len > 0 && content.charCodeAt(0) === 65279 /* BOM */) {\n        pos = 1;\n    }\n    function advancePosBy(by) {\n        if (locationKeyName === null) {\n            pos = pos + by;\n        }\n        else {\n            while (by > 0) {\n                let chCode = content.charCodeAt(pos);\n                if (chCode === 10 /* LINE_FEED */) {\n                    pos++;\n                    line++;\n                    char = 0;\n                }\n                else {\n                    pos++;\n                    char++;\n                }\n                by--;\n            }\n        }\n    }\n    function advancePosTo(to) {\n        if (locationKeyName === null) {\n            pos = to;\n        }\n        else {\n            advancePosBy(to - pos);\n        }\n    }\n    function skipWhitespace() {\n        while (pos < len) {\n            let chCode = content.charCodeAt(pos);\n            if (chCode !== 32 /* SPACE */ && chCode !== 9 /* TAB */ && chCode !== 13 /* CARRIAGE_RETURN */ && chCode !== 10 /* LINE_FEED */) {\n                break;\n            }\n            advancePosBy(1);\n        }\n    }\n    function advanceIfStartsWith(str) {\n        if (content.substr(pos, str.length) === str) {\n            advancePosBy(str.length);\n            return true;\n        }\n        return false;\n    }\n    function advanceUntil(str) {\n        let nextOccurence = content.indexOf(str, pos);\n        if (nextOccurence !== -1) {\n            advancePosTo(nextOccurence + str.length);\n        }\n        else {\n            // EOF\n            advancePosTo(len);\n        }\n    }\n    function captureUntil(str) {\n        let nextOccurence = content.indexOf(str, pos);\n        if (nextOccurence !== -1) {\n            let r = content.substring(pos, nextOccurence);\n            advancePosTo(nextOccurence + str.length);\n            return r;\n        }\n        else {\n            // EOF\n            let r = content.substr(pos);\n            advancePosTo(len);\n            return r;\n        }\n    }\n    let state = 0 /* ROOT_STATE */;\n    let cur = null;\n    let stateStack = [];\n    let objStack = [];\n    let curKey = null;\n    function pushState(newState, newCur) {\n        stateStack.push(state);\n        objStack.push(cur);\n        state = newState;\n        cur = newCur;\n    }\n    function popState() {\n        if (stateStack.length === 0) {\n            return fail('illegal state stack');\n        }\n        state = stateStack.pop();\n        cur = objStack.pop();\n    }\n    function fail(msg) {\n        throw new Error('Near offset ' + pos + ': ' + msg + ' ~~~' + content.substr(pos, 50) + '~~~');\n    }\n    const dictState = {\n        enterDict: function () {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            let newDict = {};\n            if (locationKeyName !== null) {\n                newDict[locationKeyName] = {\n                    filename: filename,\n                    line: line,\n                    char: char\n                };\n            }\n            cur[curKey] = newDict;\n            curKey = null;\n            pushState(1 /* DICT_STATE */, newDict);\n        },\n        enterArray: function () {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            let newArr = [];\n            cur[curKey] = newArr;\n            curKey = null;\n            pushState(2 /* ARR_STATE */, newArr);\n        }\n    };\n    const arrState = {\n        enterDict: function () {\n            let newDict = {};\n            if (locationKeyName !== null) {\n                newDict[locationKeyName] = {\n                    filename: filename,\n                    line: line,\n                    char: char\n                };\n            }\n            cur.push(newDict);\n            pushState(1 /* DICT_STATE */, newDict);\n        },\n        enterArray: function () {\n            let newArr = [];\n            cur.push(newArr);\n            pushState(2 /* ARR_STATE */, newArr);\n        }\n    };\n    function enterDict() {\n        if (state === 1 /* DICT_STATE */) {\n            dictState.enterDict();\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            arrState.enterDict();\n        }\n        else { // ROOT_STATE\n            cur = {};\n            if (locationKeyName !== null) {\n                cur[locationKeyName] = {\n                    filename: filename,\n                    line: line,\n                    char: char\n                };\n            }\n            pushState(1 /* DICT_STATE */, cur);\n        }\n    }\n    function leaveDict() {\n        if (state === 1 /* DICT_STATE */) {\n            popState();\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            return fail('unexpected </dict>');\n        }\n        else { // ROOT_STATE\n            return fail('unexpected </dict>');\n        }\n    }\n    function enterArray() {\n        if (state === 1 /* DICT_STATE */) {\n            dictState.enterArray();\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            arrState.enterArray();\n        }\n        else { // ROOT_STATE\n            cur = [];\n            pushState(2 /* ARR_STATE */, cur);\n        }\n    }\n    function leaveArray() {\n        if (state === 1 /* DICT_STATE */) {\n            return fail('unexpected </array>');\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            popState();\n        }\n        else { // ROOT_STATE\n            return fail('unexpected </array>');\n        }\n    }\n    function acceptKey(val) {\n        if (state === 1 /* DICT_STATE */) {\n            if (curKey !== null) {\n                return fail('too many <key>');\n            }\n            curKey = val;\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            return fail('unexpected <key>');\n        }\n        else { // ROOT_STATE\n            return fail('unexpected <key>');\n        }\n    }\n    function acceptString(val) {\n        if (state === 1 /* DICT_STATE */) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function acceptReal(val) {\n        if (isNaN(val)) {\n            return fail('cannot parse float');\n        }\n        if (state === 1 /* DICT_STATE */) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function acceptInteger(val) {\n        if (isNaN(val)) {\n            return fail('cannot parse integer');\n        }\n        if (state === 1 /* DICT_STATE */) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function acceptDate(val) {\n        if (state === 1 /* DICT_STATE */) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function acceptData(val) {\n        if (state === 1 /* DICT_STATE */) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function acceptBool(val) {\n        if (state === 1 /* DICT_STATE */) {\n            if (curKey === null) {\n                return fail('missing <key>');\n            }\n            cur[curKey] = val;\n            curKey = null;\n        }\n        else if (state === 2 /* ARR_STATE */) {\n            cur.push(val);\n        }\n        else { // ROOT_STATE\n            cur = val;\n        }\n    }\n    function escapeVal(str) {\n        return str.replace(/&#([0-9]+);/g, function (_, m0) {\n            return String.fromCodePoint(parseInt(m0, 10));\n        }).replace(/&#x([0-9a-f]+);/g, function (_, m0) {\n            return String.fromCodePoint(parseInt(m0, 16));\n        }).replace(/&amp;|&lt;|&gt;|&quot;|&apos;/g, function (_) {\n            switch (_) {\n                case '&amp;': return '&';\n                case '&lt;': return '<';\n                case '&gt;': return '>';\n                case '&quot;': return '\"';\n                case '&apos;': return '\\'';\n            }\n            return _;\n        });\n    }\n    function parseOpenTag() {\n        let r = captureUntil('>');\n        let isClosed = false;\n        if (r.charCodeAt(r.length - 1) === 47 /* SLASH */) {\n            isClosed = true;\n            r = r.substring(0, r.length - 1);\n        }\n        return {\n            name: r.trim(),\n            isClosed: isClosed\n        };\n    }\n    function parseTagValue(tag) {\n        if (tag.isClosed) {\n            return '';\n        }\n        let val = captureUntil('</');\n        advanceUntil('>');\n        return escapeVal(val);\n    }\n    while (pos < len) {\n        skipWhitespace();\n        if (pos >= len) {\n            break;\n        }\n        const chCode = content.charCodeAt(pos);\n        advancePosBy(1);\n        if (chCode !== 60 /* LESS_THAN */) {\n            return fail('expected <');\n        }\n        if (pos >= len) {\n            return fail('unexpected end of input');\n        }\n        const peekChCode = content.charCodeAt(pos);\n        if (peekChCode === 63 /* QUESTION_MARK */) {\n            advancePosBy(1);\n            advanceUntil('?>');\n            continue;\n        }\n        if (peekChCode === 33 /* EXCLAMATION_MARK */) {\n            advancePosBy(1);\n            if (advanceIfStartsWith('--')) {\n                advanceUntil('-->');\n                continue;\n            }\n            advanceUntil('>');\n            continue;\n        }\n        if (peekChCode === 47 /* SLASH */) {\n            advancePosBy(1);\n            skipWhitespace();\n            if (advanceIfStartsWith('plist')) {\n                advanceUntil('>');\n                continue;\n            }\n            if (advanceIfStartsWith('dict')) {\n                advanceUntil('>');\n                leaveDict();\n                continue;\n            }\n            if (advanceIfStartsWith('array')) {\n                advanceUntil('>');\n                leaveArray();\n                continue;\n            }\n            return fail('unexpected closed tag');\n        }\n        let tag = parseOpenTag();\n        switch (tag.name) {\n            case 'dict':\n                enterDict();\n                if (tag.isClosed) {\n                    leaveDict();\n                }\n                continue;\n            case 'array':\n                enterArray();\n                if (tag.isClosed) {\n                    leaveArray();\n                }\n                continue;\n            case 'key':\n                acceptKey(parseTagValue(tag));\n                continue;\n            case 'string':\n                acceptString(parseTagValue(tag));\n                continue;\n            case 'real':\n                acceptReal(parseFloat(parseTagValue(tag)));\n                continue;\n            case 'integer':\n                acceptInteger(parseInt(parseTagValue(tag), 10));\n                continue;\n            case 'date':\n                acceptDate(new Date(parseTagValue(tag)));\n                continue;\n            case 'data':\n                acceptData(parseTagValue(tag));\n                continue;\n            case 'true':\n                parseTagValue(tag);\n                acceptBool(true);\n                continue;\n            case 'false':\n                parseTagValue(tag);\n                acceptBool(false);\n                continue;\n        }\n        if (/^plist/.test(tag.name)) {\n            continue;\n        }\n        return fail('unexpected opened tag ' + tag.name);\n    }\n    return cur;\n}\n//# sourceMappingURL=plist.js.map","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SyncRegistry = void 0;\nconst grammar_1 = require(\"./grammar\");\nclass SyncRegistry {\n    constructor(theme, _onigLibPromise) {\n        this._onigLibPromise = _onigLibPromise;\n        this._grammars = new Map();\n        this._rawGrammars = new Map();\n        this._injectionGrammars = new Map();\n        this._theme = theme;\n    }\n    dispose() {\n        for (const grammar of this._grammars.values()) {\n            grammar.dispose();\n        }\n    }\n    setTheme(theme) {\n        this._theme = theme;\n    }\n    getColorMap() {\n        return this._theme.getColorMap();\n    }\n    /**\n     * Add `grammar` to registry and return a list of referenced scope names\n     */\n    addGrammar(grammar, injectionScopeNames) {\n        this._rawGrammars.set(grammar.scopeName, grammar);\n        if (injectionScopeNames) {\n            this._injectionGrammars.set(grammar.scopeName, injectionScopeNames);\n        }\n    }\n    /**\n     * Lookup a raw grammar.\n     */\n    lookup(scopeName) {\n        return this._rawGrammars.get(scopeName);\n    }\n    /**\n     * Returns the injections for the given grammar\n     */\n    injections(targetScope) {\n        return this._injectionGrammars.get(targetScope);\n    }\n    /**\n     * Get the default theme settings\n     */\n    getDefaults() {\n        return this._theme.getDefaults();\n    }\n    /**\n     * Match a scope in the theme.\n     */\n    themeMatch(scopePath) {\n        return this._theme.match(scopePath);\n    }\n    /**\n     * Lookup a grammar.\n     */\n    async grammarForScopeName(scopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors) {\n        if (!this._grammars.has(scopeName)) {\n            let rawGrammar = this._rawGrammars.get(scopeName);\n            if (!rawGrammar) {\n                return null;\n            }\n            this._grammars.set(scopeName, grammar_1.createGrammar(scopeName, rawGrammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, this, await this._onigLibPromise));\n        }\n        return this._grammars.get(scopeName);\n    }\n}\nexports.SyncRegistry = SyncRegistry;\n//# sourceMappingURL=registry.js.map","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CompiledRule = exports.RegExpSourceList = exports.RegExpSource = exports.RuleFactory = exports.BeginWhileRule = exports.BeginEndRule = exports.IncludeOnlyRule = exports.MatchRule = exports.CaptureRule = exports.Rule = exports.ruleIdToNumber = exports.ruleIdFromNumber = exports.whileRuleId = exports.endRuleId = void 0;\nconst utils_1 = require(\"./utils\");\nconst grammarDependencies_1 = require(\"./grammar/grammarDependencies\");\nconst HAS_BACK_REFERENCES = /\\\\(\\d+)/;\nconst BACK_REFERENCING_END = /\\\\(\\d+)/g;\nconst ruleIdSymbol = Symbol('RuleId');\n// This is a special constant to indicate that the end regexp matched.\nexports.endRuleId = -1;\n// This is a special constant to indicate that the while regexp matched.\nexports.whileRuleId = -2;\nfunction ruleIdFromNumber(id) {\n    return id;\n}\nexports.ruleIdFromNumber = ruleIdFromNumber;\nfunction ruleIdToNumber(id) {\n    return id;\n}\nexports.ruleIdToNumber = ruleIdToNumber;\nclass Rule {\n    constructor($location, id, name, contentName) {\n        this.$location = $location;\n        this.id = id;\n        this._name = name || null;\n        this._nameIsCapturing = utils_1.RegexSource.hasCaptures(this._name);\n        this._contentName = contentName || null;\n        this._contentNameIsCapturing = utils_1.RegexSource.hasCaptures(this._contentName);\n    }\n    get debugName() {\n        const location = this.$location ? `${utils_1.basename(this.$location.filename)}:${this.$location.line}` : 'unknown';\n        return `${this.constructor.name}#${this.id} @ ${location}`;\n    }\n    getName(lineText, captureIndices) {\n        if (!this._nameIsCapturing || this._name === null || lineText === null || captureIndices === null) {\n            return this._name;\n        }\n        return utils_1.RegexSource.replaceCaptures(this._name, lineText, captureIndices);\n    }\n    getContentName(lineText, captureIndices) {\n        if (!this._contentNameIsCapturing || this._contentName === null) {\n            return this._contentName;\n        }\n        return utils_1.RegexSource.replaceCaptures(this._contentName, lineText, captureIndices);\n    }\n}\nexports.Rule = Rule;\nclass CaptureRule extends Rule {\n    constructor($location, id, name, contentName, retokenizeCapturedWithRuleId) {\n        super($location, id, name, contentName);\n        this.retokenizeCapturedWithRuleId = retokenizeCapturedWithRuleId;\n    }\n    dispose() {\n        // nothing to dispose\n    }\n    collectPatterns(grammar, out) {\n        throw new Error('Not supported!');\n    }\n    compile(grammar, endRegexSource) {\n        throw new Error('Not supported!');\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        throw new Error('Not supported!');\n    }\n}\nexports.CaptureRule = CaptureRule;\nclass MatchRule extends Rule {\n    constructor($location, id, name, match, captures) {\n        super($location, id, name, null);\n        this._match = new RegExpSource(match, this.id);\n        this.captures = captures;\n        this._cachedCompiledPatterns = null;\n    }\n    dispose() {\n        if (this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns.dispose();\n            this._cachedCompiledPatterns = null;\n        }\n    }\n    get debugMatchRegExp() {\n        return `${this._match.source}`;\n    }\n    collectPatterns(grammar, out) {\n        out.push(this._match);\n    }\n    compile(grammar, endRegexSource) {\n        return this._getCachedCompiledPatterns(grammar).compile(grammar);\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledPatterns(grammar) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            this.collectPatterns(grammar, this._cachedCompiledPatterns);\n        }\n        return this._cachedCompiledPatterns;\n    }\n}\nexports.MatchRule = MatchRule;\nclass IncludeOnlyRule extends Rule {\n    constructor($location, id, name, contentName, patterns) {\n        super($location, id, name, contentName);\n        this.patterns = patterns.patterns;\n        this.hasMissingPatterns = patterns.hasMissingPatterns;\n        this._cachedCompiledPatterns = null;\n    }\n    dispose() {\n        if (this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns.dispose();\n            this._cachedCompiledPatterns = null;\n        }\n    }\n    collectPatterns(grammar, out) {\n        for (const pattern of this.patterns) {\n            const rule = grammar.getRule(pattern);\n            rule.collectPatterns(grammar, out);\n        }\n    }\n    compile(grammar, endRegexSource) {\n        return this._getCachedCompiledPatterns(grammar).compile(grammar);\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledPatterns(grammar) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            this.collectPatterns(grammar, this._cachedCompiledPatterns);\n        }\n        return this._cachedCompiledPatterns;\n    }\n}\nexports.IncludeOnlyRule = IncludeOnlyRule;\nclass BeginEndRule extends Rule {\n    constructor($location, id, name, contentName, begin, beginCaptures, end, endCaptures, applyEndPatternLast, patterns) {\n        super($location, id, name, contentName);\n        this._begin = new RegExpSource(begin, this.id);\n        this.beginCaptures = beginCaptures;\n        this._end = new RegExpSource(end ? end : '\\uFFFF', -1);\n        this.endHasBackReferences = this._end.hasBackReferences;\n        this.endCaptures = endCaptures;\n        this.applyEndPatternLast = applyEndPatternLast || false;\n        this.patterns = patterns.patterns;\n        this.hasMissingPatterns = patterns.hasMissingPatterns;\n        this._cachedCompiledPatterns = null;\n    }\n    dispose() {\n        if (this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns.dispose();\n            this._cachedCompiledPatterns = null;\n        }\n    }\n    get debugBeginRegExp() {\n        return `${this._begin.source}`;\n    }\n    get debugEndRegExp() {\n        return `${this._end.source}`;\n    }\n    getEndWithResolvedBackReferences(lineText, captureIndices) {\n        return this._end.resolveBackReferences(lineText, captureIndices);\n    }\n    collectPatterns(grammar, out) {\n        out.push(this._begin);\n    }\n    compile(grammar, endRegexSource) {\n        return this._getCachedCompiledPatterns(grammar, endRegexSource).compile(grammar);\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledPatterns(grammar, endRegexSource).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledPatterns(grammar, endRegexSource) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            for (const pattern of this.patterns) {\n                const rule = grammar.getRule(pattern);\n                rule.collectPatterns(grammar, this._cachedCompiledPatterns);\n            }\n            if (this.applyEndPatternLast) {\n                this._cachedCompiledPatterns.push(this._end.hasBackReferences ? this._end.clone() : this._end);\n            }\n            else {\n                this._cachedCompiledPatterns.unshift(this._end.hasBackReferences ? this._end.clone() : this._end);\n            }\n        }\n        if (this._end.hasBackReferences) {\n            if (this.applyEndPatternLast) {\n                this._cachedCompiledPatterns.setSource(this._cachedCompiledPatterns.length() - 1, endRegexSource);\n            }\n            else {\n                this._cachedCompiledPatterns.setSource(0, endRegexSource);\n            }\n        }\n        return this._cachedCompiledPatterns;\n    }\n}\nexports.BeginEndRule = BeginEndRule;\nclass BeginWhileRule extends Rule {\n    constructor($location, id, name, contentName, begin, beginCaptures, _while, whileCaptures, patterns) {\n        super($location, id, name, contentName);\n        this._begin = new RegExpSource(begin, this.id);\n        this.beginCaptures = beginCaptures;\n        this.whileCaptures = whileCaptures;\n        this._while = new RegExpSource(_while, exports.whileRuleId);\n        this.whileHasBackReferences = this._while.hasBackReferences;\n        this.patterns = patterns.patterns;\n        this.hasMissingPatterns = patterns.hasMissingPatterns;\n        this._cachedCompiledPatterns = null;\n        this._cachedCompiledWhilePatterns = null;\n    }\n    dispose() {\n        if (this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns.dispose();\n            this._cachedCompiledPatterns = null;\n        }\n        if (this._cachedCompiledWhilePatterns) {\n            this._cachedCompiledWhilePatterns.dispose();\n            this._cachedCompiledWhilePatterns = null;\n        }\n    }\n    get debugBeginRegExp() {\n        return `${this._begin.source}`;\n    }\n    get debugWhileRegExp() {\n        return `${this._while.source}`;\n    }\n    getWhileWithResolvedBackReferences(lineText, captureIndices) {\n        return this._while.resolveBackReferences(lineText, captureIndices);\n    }\n    collectPatterns(grammar, out) {\n        out.push(this._begin);\n    }\n    compile(grammar, endRegexSource) {\n        return this._getCachedCompiledPatterns(grammar).compile(grammar);\n    }\n    compileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledPatterns(grammar) {\n        if (!this._cachedCompiledPatterns) {\n            this._cachedCompiledPatterns = new RegExpSourceList();\n            for (const pattern of this.patterns) {\n                const rule = grammar.getRule(pattern);\n                rule.collectPatterns(grammar, this._cachedCompiledPatterns);\n            }\n        }\n        return this._cachedCompiledPatterns;\n    }\n    compileWhile(grammar, endRegexSource) {\n        return this._getCachedCompiledWhilePatterns(grammar, endRegexSource).compile(grammar);\n    }\n    compileWhileAG(grammar, endRegexSource, allowA, allowG) {\n        return this._getCachedCompiledWhilePatterns(grammar, endRegexSource).compileAG(grammar, allowA, allowG);\n    }\n    _getCachedCompiledWhilePatterns(grammar, endRegexSource) {\n        if (!this._cachedCompiledWhilePatterns) {\n            this._cachedCompiledWhilePatterns = new RegExpSourceList();\n            this._cachedCompiledWhilePatterns.push(this._while.hasBackReferences ? this._while.clone() : this._while);\n        }\n        if (this._while.hasBackReferences) {\n            this._cachedCompiledWhilePatterns.setSource(0, endRegexSource ? endRegexSource : '\\uFFFF');\n        }\n        return this._cachedCompiledWhilePatterns;\n    }\n}\nexports.BeginWhileRule = BeginWhileRule;\nclass RuleFactory {\n    static createCaptureRule(helper, $location, name, contentName, retokenizeCapturedWithRuleId) {\n        return helper.registerRule((id) => {\n            return new CaptureRule($location, id, name, contentName, retokenizeCapturedWithRuleId);\n        });\n    }\n    static getCompiledRuleId(desc, helper, repository) {\n        if (!desc.id) {\n            helper.registerRule((id) => {\n                desc.id = id;\n                if (desc.match) {\n                    return new MatchRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.match, RuleFactory._compileCaptures(desc.captures, helper, repository));\n                }\n                if (typeof desc.begin === 'undefined') {\n                    if (desc.repository) {\n                        repository = utils_1.mergeObjects({}, repository, desc.repository);\n                    }\n                    let patterns = desc.patterns;\n                    if (typeof patterns === 'undefined' && desc.include) {\n                        patterns = [{ include: desc.include }];\n                    }\n                    return new IncludeOnlyRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, RuleFactory._compilePatterns(patterns, helper, repository));\n                }\n                if (desc.while) {\n                    return new BeginWhileRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, desc.begin, RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository), desc.while, RuleFactory._compileCaptures(desc.whileCaptures || desc.captures, helper, repository), RuleFactory._compilePatterns(desc.patterns, helper, repository));\n                }\n                return new BeginEndRule(desc.$vscodeTextmateLocation, desc.id, desc.name, desc.contentName, desc.begin, RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository), desc.end, RuleFactory._compileCaptures(desc.endCaptures || desc.captures, helper, repository), desc.applyEndPatternLast, RuleFactory._compilePatterns(desc.patterns, helper, repository));\n            });\n        }\n        return desc.id;\n    }\n    static _compileCaptures(captures, helper, repository) {\n        let r = [];\n        if (captures) {\n            // Find the maximum capture id\n            let maximumCaptureId = 0;\n            for (const captureId in captures) {\n                if (captureId === '$vscodeTextmateLocation') {\n                    continue;\n                }\n                const numericCaptureId = parseInt(captureId, 10);\n                if (numericCaptureId > maximumCaptureId) {\n                    maximumCaptureId = numericCaptureId;\n                }\n            }\n            // Initialize result\n            for (let i = 0; i <= maximumCaptureId; i++) {\n                r[i] = null;\n            }\n            // Fill out result\n            for (const captureId in captures) {\n                if (captureId === '$vscodeTextmateLocation') {\n                    continue;\n                }\n                const numericCaptureId = parseInt(captureId, 10);\n                let retokenizeCapturedWithRuleId = 0;\n                if (captures[captureId].patterns) {\n                    retokenizeCapturedWithRuleId = RuleFactory.getCompiledRuleId(captures[captureId], helper, repository);\n                }\n                r[numericCaptureId] = RuleFactory.createCaptureRule(helper, captures[captureId].$vscodeTextmateLocation, captures[captureId].name, captures[captureId].contentName, retokenizeCapturedWithRuleId);\n            }\n        }\n        return r;\n    }\n    static _compilePatterns(patterns, helper, repository) {\n        let r = [];\n        if (patterns) {\n            for (let i = 0, len = patterns.length; i < len; i++) {\n                const pattern = patterns[i];\n                let ruleId = -1;\n                if (pattern.include) {\n                    const reference = grammarDependencies_1.parseInclude(pattern.include);\n                    switch (reference.kind) {\n                        case 0 /* Base */:\n                        case 1 /* Self */:\n                            ruleId = RuleFactory.getCompiledRuleId(repository[pattern.include], helper, repository);\n                            break;\n                        case 2 /* RelativeReference */:\n                            // Local include found in `repository`\n                            let localIncludedRule = repository[reference.ruleName];\n                            if (localIncludedRule) {\n                                ruleId = RuleFactory.getCompiledRuleId(localIncludedRule, helper, repository);\n                            }\n                            else {\n                                // console.warn('CANNOT find rule for scopeName: ' + pattern.include + ', I am: ', repository['$base'].name);\n                            }\n                            break;\n                        case 3 /* TopLevelReference */:\n                        case 4 /* TopLevelRepositoryReference */:\n                            const externalGrammarName = reference.scopeName;\n                            const externalGrammarInclude = reference.kind === 4 /* TopLevelRepositoryReference */\n                                ? reference.ruleName\n                                : null;\n                            // External include\n                            const externalGrammar = helper.getExternalGrammar(externalGrammarName, repository);\n                            if (externalGrammar) {\n                                if (externalGrammarInclude) {\n                                    let externalIncludedRule = externalGrammar.repository[externalGrammarInclude];\n                                    if (externalIncludedRule) {\n                                        ruleId = RuleFactory.getCompiledRuleId(externalIncludedRule, helper, externalGrammar.repository);\n                                    }\n                                    else {\n                                        // console.warn('CANNOT find rule for scopeName: ' + pattern.include + ', I am: ', repository['$base'].name);\n                                    }\n                                }\n                                else {\n                                    ruleId = RuleFactory.getCompiledRuleId(externalGrammar.repository.$self, helper, externalGrammar.repository);\n                                }\n                            }\n                            else {\n                                // console.warn('CANNOT find grammar for scopeName: ' + pattern.include + ', I am: ', repository['$base'].name);\n                            }\n                            break;\n                    }\n                }\n                else {\n                    ruleId = RuleFactory.getCompiledRuleId(pattern, helper, repository);\n                }\n                if (ruleId !== -1) {\n                    const rule = helper.getRule(ruleId);\n                    let skipRule = false;\n                    if (rule instanceof IncludeOnlyRule || rule instanceof BeginEndRule || rule instanceof BeginWhileRule) {\n                        if (rule.hasMissingPatterns && rule.patterns.length === 0) {\n                            skipRule = true;\n                        }\n                    }\n                    if (skipRule) {\n                        // console.log('REMOVING RULE ENTIRELY DUE TO EMPTY PATTERNS THAT ARE MISSING');\n                        continue;\n                    }\n                    r.push(ruleId);\n                }\n            }\n        }\n        return {\n            patterns: r,\n            hasMissingPatterns: ((patterns ? patterns.length : 0) !== r.length)\n        };\n    }\n}\nexports.RuleFactory = RuleFactory;\nclass RegExpSource {\n    constructor(regExpSource, ruleId) {\n        if (regExpSource) {\n            const len = regExpSource.length;\n            let lastPushedPos = 0;\n            let output = [];\n            let hasAnchor = false;\n            for (let pos = 0; pos < len; pos++) {\n                const ch = regExpSource.charAt(pos);\n                if (ch === '\\\\') {\n                    if (pos + 1 < len) {\n                        const nextCh = regExpSource.charAt(pos + 1);\n                        if (nextCh === 'z') {\n                            output.push(regExpSource.substring(lastPushedPos, pos));\n                            output.push('$(?!\\\\n)(?<!\\\\n)');\n                            lastPushedPos = pos + 2;\n                        }\n                        else if (nextCh === 'A' || nextCh === 'G') {\n                            hasAnchor = true;\n                        }\n                        pos++;\n                    }\n                }\n            }\n            this.hasAnchor = hasAnchor;\n            if (lastPushedPos === 0) {\n                // No \\z hit\n                this.source = regExpSource;\n            }\n            else {\n                output.push(regExpSource.substring(lastPushedPos, len));\n                this.source = output.join('');\n            }\n        }\n        else {\n            this.hasAnchor = false;\n            this.source = regExpSource;\n        }\n        if (this.hasAnchor) {\n            this._anchorCache = this._buildAnchorCache();\n        }\n        else {\n            this._anchorCache = null;\n        }\n        this.ruleId = ruleId;\n        this.hasBackReferences = HAS_BACK_REFERENCES.test(this.source);\n        // console.log('input: ' + regExpSource + ' => ' + this.source + ', ' + this.hasAnchor);\n    }\n    clone() {\n        return new RegExpSource(this.source, this.ruleId);\n    }\n    setSource(newSource) {\n        if (this.source === newSource) {\n            return;\n        }\n        this.source = newSource;\n        if (this.hasAnchor) {\n            this._anchorCache = this._buildAnchorCache();\n        }\n    }\n    resolveBackReferences(lineText, captureIndices) {\n        let capturedValues = captureIndices.map((capture) => {\n            return lineText.substring(capture.start, capture.end);\n        });\n        BACK_REFERENCING_END.lastIndex = 0;\n        return this.source.replace(BACK_REFERENCING_END, (match, g1) => {\n            return utils_1.escapeRegExpCharacters(capturedValues[parseInt(g1, 10)] || '');\n        });\n    }\n    _buildAnchorCache() {\n        let A0_G0_result = [];\n        let A0_G1_result = [];\n        let A1_G0_result = [];\n        let A1_G1_result = [];\n        let pos, len, ch, nextCh;\n        for (pos = 0, len = this.source.length; pos < len; pos++) {\n            ch = this.source.charAt(pos);\n            A0_G0_result[pos] = ch;\n            A0_G1_result[pos] = ch;\n            A1_G0_result[pos] = ch;\n            A1_G1_result[pos] = ch;\n            if (ch === '\\\\') {\n                if (pos + 1 < len) {\n                    nextCh = this.source.charAt(pos + 1);\n                    if (nextCh === 'A') {\n                        A0_G0_result[pos + 1] = '\\uFFFF';\n                        A0_G1_result[pos + 1] = '\\uFFFF';\n                        A1_G0_result[pos + 1] = 'A';\n                        A1_G1_result[pos + 1] = 'A';\n                    }\n                    else if (nextCh === 'G') {\n                        A0_G0_result[pos + 1] = '\\uFFFF';\n                        A0_G1_result[pos + 1] = 'G';\n                        A1_G0_result[pos + 1] = '\\uFFFF';\n                        A1_G1_result[pos + 1] = 'G';\n                    }\n                    else {\n                        A0_G0_result[pos + 1] = nextCh;\n                        A0_G1_result[pos + 1] = nextCh;\n                        A1_G0_result[pos + 1] = nextCh;\n                        A1_G1_result[pos + 1] = nextCh;\n                    }\n                    pos++;\n                }\n            }\n        }\n        return {\n            A0_G0: A0_G0_result.join(''),\n            A0_G1: A0_G1_result.join(''),\n            A1_G0: A1_G0_result.join(''),\n            A1_G1: A1_G1_result.join('')\n        };\n    }\n    resolveAnchors(allowA, allowG) {\n        if (!this.hasAnchor || !this._anchorCache) {\n            return this.source;\n        }\n        if (allowA) {\n            if (allowG) {\n                return this._anchorCache.A1_G1;\n            }\n            else {\n                return this._anchorCache.A1_G0;\n            }\n        }\n        else {\n            if (allowG) {\n                return this._anchorCache.A0_G1;\n            }\n            else {\n                return this._anchorCache.A0_G0;\n            }\n        }\n    }\n}\nexports.RegExpSource = RegExpSource;\nclass RegExpSourceList {\n    constructor() {\n        this._items = [];\n        this._hasAnchors = false;\n        this._cached = null;\n        this._anchorCache = {\n            A0_G0: null,\n            A0_G1: null,\n            A1_G0: null,\n            A1_G1: null\n        };\n    }\n    dispose() {\n        this._disposeCaches();\n    }\n    _disposeCaches() {\n        if (this._cached) {\n            this._cached.dispose();\n            this._cached = null;\n        }\n        if (this._anchorCache.A0_G0) {\n            this._anchorCache.A0_G0.dispose();\n            this._anchorCache.A0_G0 = null;\n        }\n        if (this._anchorCache.A0_G1) {\n            this._anchorCache.A0_G1.dispose();\n            this._anchorCache.A0_G1 = null;\n        }\n        if (this._anchorCache.A1_G0) {\n            this._anchorCache.A1_G0.dispose();\n            this._anchorCache.A1_G0 = null;\n        }\n        if (this._anchorCache.A1_G1) {\n            this._anchorCache.A1_G1.dispose();\n            this._anchorCache.A1_G1 = null;\n        }\n    }\n    push(item) {\n        this._items.push(item);\n        this._hasAnchors = this._hasAnchors || item.hasAnchor;\n    }\n    unshift(item) {\n        this._items.unshift(item);\n        this._hasAnchors = this._hasAnchors || item.hasAnchor;\n    }\n    length() {\n        return this._items.length;\n    }\n    setSource(index, newSource) {\n        if (this._items[index].source !== newSource) {\n            // bust the cache\n            this._disposeCaches();\n            this._items[index].setSource(newSource);\n        }\n    }\n    compile(onigLib) {\n        if (!this._cached) {\n            let regExps = this._items.map(e => e.source);\n            this._cached = new CompiledRule(onigLib, regExps, this._items.map(e => e.ruleId));\n        }\n        return this._cached;\n    }\n    compileAG(onigLib, allowA, allowG) {\n        if (!this._hasAnchors) {\n            return this.compile(onigLib);\n        }\n        else {\n            if (allowA) {\n                if (allowG) {\n                    if (!this._anchorCache.A1_G1) {\n                        this._anchorCache.A1_G1 = this._resolveAnchors(onigLib, allowA, allowG);\n                    }\n                    return this._anchorCache.A1_G1;\n                }\n                else {\n                    if (!this._anchorCache.A1_G0) {\n                        this._anchorCache.A1_G0 = this._resolveAnchors(onigLib, allowA, allowG);\n                    }\n                    return this._anchorCache.A1_G0;\n                }\n            }\n            else {\n                if (allowG) {\n                    if (!this._anchorCache.A0_G1) {\n                        this._anchorCache.A0_G1 = this._resolveAnchors(onigLib, allowA, allowG);\n                    }\n                    return this._anchorCache.A0_G1;\n                }\n                else {\n                    if (!this._anchorCache.A0_G0) {\n                        this._anchorCache.A0_G0 = this._resolveAnchors(onigLib, allowA, allowG);\n                    }\n                    return this._anchorCache.A0_G0;\n                }\n            }\n        }\n    }\n    _resolveAnchors(onigLib, allowA, allowG) {\n        let regExps = this._items.map(e => e.resolveAnchors(allowA, allowG));\n        return new CompiledRule(onigLib, regExps, this._items.map(e => e.ruleId));\n    }\n}\nexports.RegExpSourceList = RegExpSourceList;\nclass CompiledRule {\n    constructor(onigLib, regExps, rules) {\n        this.regExps = regExps;\n        this.rules = rules;\n        this.scanner = onigLib.createOnigScanner(regExps);\n    }\n    dispose() {\n        if (typeof this.scanner.dispose === \"function\") {\n            this.scanner.dispose();\n        }\n    }\n    toString() {\n        const r = [];\n        for (let i = 0, len = this.rules.length; i < len; i++) {\n            r.push(\"   - \" + this.rules[i] + \": \" + this.regExps[i]);\n        }\n        return r.join(\"\\n\");\n    }\n    findNextMatchSync(string, startPosition, options) {\n        const result = this.scanner.findNextMatchSync(string, startPosition, options);\n        if (!result) {\n            return null;\n        }\n        return {\n            ruleId: this.rules[result.index],\n            captureIndices: result.captureIndices,\n        };\n    }\n}\nexports.CompiledRule = CompiledRule;\n//# sourceMappingURL=rule.js.map","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ThemeTrieElement = exports.ThemeTrieElementRule = exports.ColorMap = exports.fontStyleToString = exports.ParsedThemeRule = exports.parseTheme = exports.StyleAttributes = exports.ScopeStack = exports.Theme = void 0;\nconst utils_1 = require(\"./utils\");\nclass Theme {\n    constructor(_colorMap, _defaults, _root) {\n        this._colorMap = _colorMap;\n        this._defaults = _defaults;\n        this._root = _root;\n        this._cachedMatchRoot = new utils_1.CachedFn((scopeName) => this._root.match(scopeName));\n    }\n    static createFromRawTheme(source, colorMap) {\n        return this.createFromParsedTheme(parseTheme(source), colorMap);\n    }\n    static createFromParsedTheme(source, colorMap) {\n        return resolveParsedThemeRules(source, colorMap);\n    }\n    getColorMap() {\n        return this._colorMap.getColorMap();\n    }\n    getDefaults() {\n        return this._defaults;\n    }\n    match(scopePath) {\n        if (scopePath === null) {\n            return this._defaults;\n        }\n        const scopeName = scopePath.scopeName;\n        const matchingTrieElements = this._cachedMatchRoot.get(scopeName);\n        const effectiveRule = matchingTrieElements.find((v) => _scopePathMatchesParentScopes(scopePath.parent, v.parentScopes));\n        if (!effectiveRule) {\n            return null;\n        }\n        return new StyleAttributes(effectiveRule.fontStyle, effectiveRule.foreground, effectiveRule.background);\n    }\n}\nexports.Theme = Theme;\nclass ScopeStack {\n    constructor(parent, scopeName) {\n        this.parent = parent;\n        this.scopeName = scopeName;\n    }\n    static push(path, scopeNames) {\n        for (const name of scopeNames) {\n            path = new ScopeStack(path, name);\n        }\n        return path;\n    }\n    static from(...segments) {\n        let result = null;\n        for (let i = 0; i < segments.length; i++) {\n            result = new ScopeStack(result, segments[i]);\n        }\n        return result;\n    }\n    push(scopeName) {\n        return new ScopeStack(this, scopeName);\n    }\n    getSegments() {\n        let item = this;\n        const result = [];\n        while (item) {\n            result.push(item.scopeName);\n            item = item.parent;\n        }\n        result.reverse();\n        return result;\n    }\n    toString() {\n        return this.getSegments().join(' ');\n    }\n    extends(other) {\n        if (this === other) {\n            return true;\n        }\n        if (this.parent === null) {\n            return false;\n        }\n        return this.parent.extends(other);\n    }\n    getExtensionIfDefined(base) {\n        const result = [];\n        let item = this;\n        while (item && item !== base) {\n            result.push(item.scopeName);\n            item = item.parent;\n        }\n        return item === base ? result.reverse() : undefined;\n    }\n}\nexports.ScopeStack = ScopeStack;\nfunction _scopePathMatchesParentScopes(scopePath, parentScopes) {\n    if (parentScopes === null) {\n        return true;\n    }\n    let index = 0;\n    let scopePattern = parentScopes[index];\n    while (scopePath) {\n        if (_matchesScope(scopePath.scopeName, scopePattern)) {\n            index++;\n            if (index === parentScopes.length) {\n                return true;\n            }\n            scopePattern = parentScopes[index];\n        }\n        scopePath = scopePath.parent;\n    }\n    return false;\n}\nfunction _matchesScope(scopeName, scopePattern) {\n    return scopePattern === scopeName || (scopeName.startsWith(scopePattern) && scopeName[scopePattern.length] === '.');\n}\nclass StyleAttributes {\n    constructor(fontStyle, foregroundId, backgroundId) {\n        this.fontStyle = fontStyle;\n        this.foregroundId = foregroundId;\n        this.backgroundId = backgroundId;\n    }\n}\nexports.StyleAttributes = StyleAttributes;\n/**\n * Parse a raw theme into rules.\n */\nfunction parseTheme(source) {\n    if (!source) {\n        return [];\n    }\n    if (!source.settings || !Array.isArray(source.settings)) {\n        return [];\n    }\n    let settings = source.settings;\n    let result = [], resultLen = 0;\n    for (let i = 0, len = settings.length; i < len; i++) {\n        let entry = settings[i];\n        if (!entry.settings) {\n            continue;\n        }\n        let scopes;\n        if (typeof entry.scope === 'string') {\n            let _scope = entry.scope;\n            // remove leading commas\n            _scope = _scope.replace(/^[,]+/, '');\n            // remove trailing commans\n            _scope = _scope.replace(/[,]+$/, '');\n            scopes = _scope.split(',');\n        }\n        else if (Array.isArray(entry.scope)) {\n            scopes = entry.scope;\n        }\n        else {\n            scopes = [''];\n        }\n        let fontStyle = -1 /* NotSet */;\n        if (typeof entry.settings.fontStyle === 'string') {\n            fontStyle = 0 /* None */;\n            let segments = entry.settings.fontStyle.split(' ');\n            for (let j = 0, lenJ = segments.length; j < lenJ; j++) {\n                let segment = segments[j];\n                switch (segment) {\n                    case 'italic':\n                        fontStyle = fontStyle | 1 /* Italic */;\n                        break;\n                    case 'bold':\n                        fontStyle = fontStyle | 2 /* Bold */;\n                        break;\n                    case 'underline':\n                        fontStyle = fontStyle | 4 /* Underline */;\n                        break;\n                    case 'strikethrough':\n                        fontStyle = fontStyle | 8 /* Strikethrough */;\n                        break;\n                }\n            }\n        }\n        let foreground = null;\n        if (typeof entry.settings.foreground === 'string' && utils_1.isValidHexColor(entry.settings.foreground)) {\n            foreground = entry.settings.foreground;\n        }\n        let background = null;\n        if (typeof entry.settings.background === 'string' && utils_1.isValidHexColor(entry.settings.background)) {\n            background = entry.settings.background;\n        }\n        for (let j = 0, lenJ = scopes.length; j < lenJ; j++) {\n            let _scope = scopes[j].trim();\n            let segments = _scope.split(' ');\n            let scope = segments[segments.length - 1];\n            let parentScopes = null;\n            if (segments.length > 1) {\n                parentScopes = segments.slice(0, segments.length - 1);\n                parentScopes.reverse();\n            }\n            result[resultLen++] = new ParsedThemeRule(scope, parentScopes, i, fontStyle, foreground, background);\n        }\n    }\n    return result;\n}\nexports.parseTheme = parseTheme;\nclass ParsedThemeRule {\n    constructor(scope, parentScopes, index, fontStyle, foreground, background) {\n        this.scope = scope;\n        this.parentScopes = parentScopes;\n        this.index = index;\n        this.fontStyle = fontStyle;\n        this.foreground = foreground;\n        this.background = background;\n    }\n}\nexports.ParsedThemeRule = ParsedThemeRule;\nfunction fontStyleToString(fontStyle) {\n    if (fontStyle === -1 /* NotSet */) {\n        return 'not set';\n    }\n    let style = '';\n    if (fontStyle & 1 /* Italic */) {\n        style += 'italic ';\n    }\n    if (fontStyle & 2 /* Bold */) {\n        style += 'bold ';\n    }\n    if (fontStyle & 4 /* Underline */) {\n        style += 'underline ';\n    }\n    if (fontStyle & 8 /* Strikethrough */) {\n        style += 'strikethrough ';\n    }\n    if (style === '') {\n        style = 'none';\n    }\n    return style.trim();\n}\nexports.fontStyleToString = fontStyleToString;\n/**\n * Resolve rules (i.e. inheritance).\n */\nfunction resolveParsedThemeRules(parsedThemeRules, _colorMap) {\n    // Sort rules lexicographically, and then by index if necessary\n    parsedThemeRules.sort((a, b) => {\n        let r = utils_1.strcmp(a.scope, b.scope);\n        if (r !== 0) {\n            return r;\n        }\n        r = utils_1.strArrCmp(a.parentScopes, b.parentScopes);\n        if (r !== 0) {\n            return r;\n        }\n        return a.index - b.index;\n    });\n    // Determine defaults\n    let defaultFontStyle = 0 /* None */;\n    let defaultForeground = '#000000';\n    let defaultBackground = '#ffffff';\n    while (parsedThemeRules.length >= 1 && parsedThemeRules[0].scope === '') {\n        let incomingDefaults = parsedThemeRules.shift();\n        if (incomingDefaults.fontStyle !== -1 /* NotSet */) {\n            defaultFontStyle = incomingDefaults.fontStyle;\n        }\n        if (incomingDefaults.foreground !== null) {\n            defaultForeground = incomingDefaults.foreground;\n        }\n        if (incomingDefaults.background !== null) {\n            defaultBackground = incomingDefaults.background;\n        }\n    }\n    let colorMap = new ColorMap(_colorMap);\n    let defaults = new StyleAttributes(defaultFontStyle, colorMap.getId(defaultForeground), colorMap.getId(defaultBackground));\n    let root = new ThemeTrieElement(new ThemeTrieElementRule(0, null, -1 /* NotSet */, 0, 0), []);\n    for (let i = 0, len = parsedThemeRules.length; i < len; i++) {\n        let rule = parsedThemeRules[i];\n        root.insert(0, rule.scope, rule.parentScopes, rule.fontStyle, colorMap.getId(rule.foreground), colorMap.getId(rule.background));\n    }\n    return new Theme(colorMap, defaults, root);\n}\nclass ColorMap {\n    constructor(_colorMap) {\n        this._lastColorId = 0;\n        this._id2color = [];\n        this._color2id = Object.create(null);\n        if (Array.isArray(_colorMap)) {\n            this._isFrozen = true;\n            for (let i = 0, len = _colorMap.length; i < len; i++) {\n                this._color2id[_colorMap[i]] = i;\n                this._id2color[i] = _colorMap[i];\n            }\n        }\n        else {\n            this._isFrozen = false;\n        }\n    }\n    getId(color) {\n        if (color === null) {\n            return 0;\n        }\n        color = color.toUpperCase();\n        let value = this._color2id[color];\n        if (value) {\n            return value;\n        }\n        if (this._isFrozen) {\n            throw new Error(`Missing color in color map - ${color}`);\n        }\n        value = ++this._lastColorId;\n        this._color2id[color] = value;\n        this._id2color[value] = color;\n        return value;\n    }\n    getColorMap() {\n        return this._id2color.slice(0);\n    }\n}\nexports.ColorMap = ColorMap;\nclass ThemeTrieElementRule {\n    constructor(scopeDepth, parentScopes, fontStyle, foreground, background) {\n        this.scopeDepth = scopeDepth;\n        this.parentScopes = parentScopes;\n        this.fontStyle = fontStyle;\n        this.foreground = foreground;\n        this.background = background;\n    }\n    clone() {\n        return new ThemeTrieElementRule(this.scopeDepth, this.parentScopes, this.fontStyle, this.foreground, this.background);\n    }\n    static cloneArr(arr) {\n        let r = [];\n        for (let i = 0, len = arr.length; i < len; i++) {\n            r[i] = arr[i].clone();\n        }\n        return r;\n    }\n    acceptOverwrite(scopeDepth, fontStyle, foreground, background) {\n        if (this.scopeDepth > scopeDepth) {\n            console.log('how did this happen?');\n        }\n        else {\n            this.scopeDepth = scopeDepth;\n        }\n        // console.log('TODO -> my depth: ' + this.scopeDepth + ', overwriting depth: ' + scopeDepth);\n        if (fontStyle !== -1 /* NotSet */) {\n            this.fontStyle = fontStyle;\n        }\n        if (foreground !== 0) {\n            this.foreground = foreground;\n        }\n        if (background !== 0) {\n            this.background = background;\n        }\n    }\n}\nexports.ThemeTrieElementRule = ThemeTrieElementRule;\nclass ThemeTrieElement {\n    constructor(_mainRule, rulesWithParentScopes = [], _children = {}) {\n        this._mainRule = _mainRule;\n        this._children = _children;\n        this._rulesWithParentScopes = rulesWithParentScopes;\n    }\n    static _sortBySpecificity(arr) {\n        if (arr.length === 1) {\n            return arr;\n        }\n        arr.sort(this._cmpBySpecificity);\n        return arr;\n    }\n    static _cmpBySpecificity(a, b) {\n        if (a.scopeDepth === b.scopeDepth) {\n            const aParentScopes = a.parentScopes;\n            const bParentScopes = b.parentScopes;\n            let aParentScopesLen = aParentScopes === null ? 0 : aParentScopes.length;\n            let bParentScopesLen = bParentScopes === null ? 0 : bParentScopes.length;\n            if (aParentScopesLen === bParentScopesLen) {\n                for (let i = 0; i < aParentScopesLen; i++) {\n                    const aLen = aParentScopes[i].length;\n                    const bLen = bParentScopes[i].length;\n                    if (aLen !== bLen) {\n                        return bLen - aLen;\n                    }\n                }\n            }\n            return bParentScopesLen - aParentScopesLen;\n        }\n        return b.scopeDepth - a.scopeDepth;\n    }\n    match(scope) {\n        if (scope === '') {\n            return ThemeTrieElement._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));\n        }\n        let dotIndex = scope.indexOf('.');\n        let head;\n        let tail;\n        if (dotIndex === -1) {\n            head = scope;\n            tail = '';\n        }\n        else {\n            head = scope.substring(0, dotIndex);\n            tail = scope.substring(dotIndex + 1);\n        }\n        if (this._children.hasOwnProperty(head)) {\n            return this._children[head].match(tail);\n        }\n        return ThemeTrieElement._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));\n    }\n    insert(scopeDepth, scope, parentScopes, fontStyle, foreground, background) {\n        if (scope === '') {\n            this._doInsertHere(scopeDepth, parentScopes, fontStyle, foreground, background);\n            return;\n        }\n        let dotIndex = scope.indexOf('.');\n        let head;\n        let tail;\n        if (dotIndex === -1) {\n            head = scope;\n            tail = '';\n        }\n        else {\n            head = scope.substring(0, dotIndex);\n            tail = scope.substring(dotIndex + 1);\n        }\n        let child;\n        if (this._children.hasOwnProperty(head)) {\n            child = this._children[head];\n        }\n        else {\n            child = new ThemeTrieElement(this._mainRule.clone(), ThemeTrieElementRule.cloneArr(this._rulesWithParentScopes));\n            this._children[head] = child;\n        }\n        child.insert(scopeDepth + 1, tail, parentScopes, fontStyle, foreground, background);\n    }\n    _doInsertHere(scopeDepth, parentScopes, fontStyle, foreground, background) {\n        if (parentScopes === null) {\n            // Merge into the main rule\n            this._mainRule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);\n            return;\n        }\n        // Try to merge into existing rule\n        for (let i = 0, len = this._rulesWithParentScopes.length; i < len; i++) {\n            let rule = this._rulesWithParentScopes[i];\n            if (utils_1.strArrCmp(rule.parentScopes, parentScopes) === 0) {\n                // bingo! => we get to merge this into an existing one\n                rule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);\n                return;\n            }\n        }\n        // Must add a new rule\n        // Inherit from main rule\n        if (fontStyle === -1 /* NotSet */) {\n            fontStyle = this._mainRule.fontStyle;\n        }\n        if (foreground === 0) {\n            foreground = this._mainRule.foreground;\n        }\n        if (background === 0) {\n            background = this._mainRule.background;\n        }\n        this._rulesWithParentScopes.push(new ThemeTrieElementRule(scopeDepth, parentScopes, fontStyle, foreground, background));\n    }\n}\nexports.ThemeTrieElement = ThemeTrieElement;\n//# sourceMappingURL=theme.js.map","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.performanceNow = exports.CachedFn = exports.escapeRegExpCharacters = exports.isValidHexColor = exports.strArrCmp = exports.strcmp = exports.RegexSource = exports.basename = exports.mergeObjects = exports.clone = void 0;\nfunction clone(something) {\n    return doClone(something);\n}\nexports.clone = clone;\nfunction doClone(something) {\n    if (Array.isArray(something)) {\n        return cloneArray(something);\n    }\n    if (typeof something === 'object') {\n        return cloneObj(something);\n    }\n    return something;\n}\nfunction cloneArray(arr) {\n    let r = [];\n    for (let i = 0, len = arr.length; i < len; i++) {\n        r[i] = doClone(arr[i]);\n    }\n    return r;\n}\nfunction cloneObj(obj) {\n    let r = {};\n    for (let key in obj) {\n        r[key] = doClone(obj[key]);\n    }\n    return r;\n}\nfunction mergeObjects(target, ...sources) {\n    sources.forEach(source => {\n        for (let key in source) {\n            target[key] = source[key];\n        }\n    });\n    return target;\n}\nexports.mergeObjects = mergeObjects;\nfunction basename(path) {\n    const idx = ~path.lastIndexOf('/') || ~path.lastIndexOf('\\\\');\n    if (idx === 0) {\n        return path;\n    }\n    else if (~idx === path.length - 1) {\n        return basename(path.substring(0, path.length - 1));\n    }\n    else {\n        return path.substr(~idx + 1);\n    }\n}\nexports.basename = basename;\nlet CAPTURING_REGEX_SOURCE = /\\$(\\d+)|\\${(\\d+):\\/(downcase|upcase)}/g;\nclass RegexSource {\n    static hasCaptures(regexSource) {\n        if (regexSource === null) {\n            return false;\n        }\n        CAPTURING_REGEX_SOURCE.lastIndex = 0;\n        return CAPTURING_REGEX_SOURCE.test(regexSource);\n    }\n    static replaceCaptures(regexSource, captureSource, captureIndices) {\n        return regexSource.replace(CAPTURING_REGEX_SOURCE, (match, index, commandIndex, command) => {\n            let capture = captureIndices[parseInt(index || commandIndex, 10)];\n            if (capture) {\n                let result = captureSource.substring(capture.start, capture.end);\n                // Remove leading dots that would make the selector invalid\n                while (result[0] === '.') {\n                    result = result.substring(1);\n                }\n                switch (command) {\n                    case 'downcase':\n                        return result.toLowerCase();\n                    case 'upcase':\n                        return result.toUpperCase();\n                    default:\n                        return result;\n                }\n            }\n            else {\n                return match;\n            }\n        });\n    }\n}\nexports.RegexSource = RegexSource;\nfunction strcmp(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    if (a > b) {\n        return 1;\n    }\n    return 0;\n}\nexports.strcmp = strcmp;\nfunction strArrCmp(a, b) {\n    if (a === null && b === null) {\n        return 0;\n    }\n    if (!a) {\n        return -1;\n    }\n    if (!b) {\n        return 1;\n    }\n    let len1 = a.length;\n    let len2 = b.length;\n    if (len1 === len2) {\n        for (let i = 0; i < len1; i++) {\n            let res = strcmp(a[i], b[i]);\n            if (res !== 0) {\n                return res;\n            }\n        }\n        return 0;\n    }\n    return len1 - len2;\n}\nexports.strArrCmp = strArrCmp;\nfunction isValidHexColor(hex) {\n    if (/^#[0-9a-f]{6}$/i.test(hex)) {\n        // #rrggbb\n        return true;\n    }\n    if (/^#[0-9a-f]{8}$/i.test(hex)) {\n        // #rrggbbaa\n        return true;\n    }\n    if (/^#[0-9a-f]{3}$/i.test(hex)) {\n        // #rgb\n        return true;\n    }\n    if (/^#[0-9a-f]{4}$/i.test(hex)) {\n        // #rgba\n        return true;\n    }\n    return false;\n}\nexports.isValidHexColor = isValidHexColor;\n/**\n * Escapes regular expression characters in a given string\n */\nfunction escapeRegExpCharacters(value) {\n    return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&');\n}\nexports.escapeRegExpCharacters = escapeRegExpCharacters;\nclass CachedFn {\n    constructor(fn) {\n        this.fn = fn;\n        this.cache = new Map();\n    }\n    get(key) {\n        if (this.cache.has(key)) {\n            return this.cache.get(key);\n        }\n        const value = this.fn(key);\n        this.cache.set(key, value);\n        return value;\n    }\n}\nexports.CachedFn = CachedFn;\nexports.performanceNow = typeof performance === \"undefined\"\n    // performance.now() is not available in this environment, so use Date.now()\n    ? function () {\n        return Date.now();\n    }\n    : function () {\n        return performance.now();\n    };\n//# sourceMappingURL=utils.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(787);\n"],"names":["root","factory","exports","module","define","amd","this","Object","defineProperty","value","UseOnigurumaFindOptions","DebugFlags","InDebugMode","process","env","applyStateStackDiff","diffStateStacksRefEq","grammar_1","first","second","pops","newFrames","curFirst","curSecond","depth","parent","push","toStateStackFrame","reverse","stack","diff","curStack","i","frame","StateStackImpl","pushFrame","EncodedTokenAttributes","toOptionalTokenType","toBinaryStr","encodedTokenAttributes","r","toString","length","print","languageId","getLanguageId","tokenType","getTokenType","fontStyle","getFontStyle","foreground","getForeground","background","getBackground","console","log","containsBalancedBrackets","set","_languageId","_tokenType","_containsBalancedBracketsBit","_fontStyle","_foreground","_background","standardType","BasicScopeAttributesProvider","BasicScopeAttributes","utils_1","constructor","initialLanguageId","embeddedLanguages","_getBasicScopeAttributes","CachedFn","scopeName","_scopeToLanguage","standardTokenType","_toStandardTokenType","_defaultAttributes","_embeddedLanguagesMatcher","ScopeMatcher","entries","getDefaultAttributes","getBasicScopeAttributes","_NULL_SCOPE_METADATA","get","scope","match","m","STANDARD_TOKEN_TYPE_REGEXP","Error","values","scopesRegExp","Map","escapedScopes","map","escapeRegExpCharacters","sort","RegExp","join","LineTokens","BalancedBracketSelectors","AttributedScopeStack","Grammar","createGrammar","debug_1","encodedTokenAttributes_1","matcher_1","onigLib_1","rule_1","theme_1","basicScopesAttributeProvider_1","tokenizeString_1","collectInjections","result","selector","rule","ruleFactoryHelper","grammar","matchers","createMatchers","nameMatcher","ruleId","RuleFactory","getCompiledRuleId","repository","matcher","debugSelector","priority","identifers","scopes","lastIndex","every","identifier","scopesAreMatching","thisScopeName","len","substr","initialLanguage","tokenTypes","balancedBracketSelectors","grammarRepository","onigLib","_rootScopeName","_onigLib","_basicScopeAttributesProvider","_rootId","_lastRuleId","_ruleId2desc","_includedGrammars","_grammarRepository","_grammar","initGrammar","_injections","_tokenTypeMatchers","keys","type","themeProvider","dispose","createOnigScanner","sources","createOnigString","getMetadataForScope","_collectInjections","getExternalGrammar","rawInjections","injections","expression","injectionScopeNames","forEach","injectionScopeName","injectionGrammar","injectionSelector","i1","i2","getInjections","injection","registerRule","id","ruleIdFromNumber","getRule","ruleIdToNumber","rawIncludedGrammar","lookup","$base","tokenizeLine","lineText","prevState","timeLimit","_tokenize","tokens","lineTokens","getResult","ruleStack","lineLength","stoppedEarly","tokenizeLine2","getBinaryResult","emitBinaryTokens","isFirstLine","$self","NULL","reset","rawDefaultMetadata","defaultStyle","getDefaults","defaultMetadata","foregroundId","backgroundId","rootScopeName","getName","scopeList","createRootAndLookUpScopeName","createRoot","onigLineText","content","_tokenizeString","disposeOnigString","base","clone","$vscodeTextmateLocation","patterns","name","scopePath","tokenAttributes","static","namesScopeList","contentNameScopesList","current","scopeNames","ScopeStack","rawRootMetadata","rootStyle","themeMatch","resolvedTokenAttributes","mergeAttributes","getScopeNames","equals","other","a","b","existingTokenAttributes","basicScopeAttributes","styleAttributes","pushAttributed","indexOf","_pushAttributed","split","target","rawMetadata","newPath","scopeThemeMatchResult","metadata","getSegments","getExtensionIfDefined","self","undefined","enterPos","anchorPos","beginRuleCapturedEOL","endRule","nameScopesList","_stackElementBrand","_enterPos","_anchorPos","_equals","_structuralEquals","el","_reset","pop","safePop","getEnterPos","getAnchorPos","_writeString","res","outIndex","withContentNameScopesList","contentNameScopeStack","withEndRule","hasSameRuleAs","fromExtension","balancedBracketScopes","unbalancedBracketScopes","allowAny","flatMap","matchesAlways","matchesNever","excluder","includer","tokenTypeOverrides","_emitBinaryTokens","_tokenTypeOverrides","_lineText","_tokens","_binaryTokens","_lastTokenEndIndex","produce","endIndex","produceFromScopes","scopesList","substring","replace","k","startIndex","Uint32Array","parseInclude","TopLevelRepositoryReference","TopLevelReference","RelativeReference","SelfReference","BaseReference","ScopeDependencyProcessor","ExternalReferenceCollector","TopLevelRepositoryRuleReference","TopLevelRuleReference","toKey","ruleName","_references","_seenReferenceKeys","Set","visitedRule","references","add","reference","key","has","collectReferencesOfReference","baseGrammarScopeName","repo","selfGrammar","baseGrammar","collectExternalReferencesInTopLevelRule","collectExternalReferencesInTopLevelRepositoryRule","context","collectExternalReferencesInRules","Array","isArray","rules","patternRepository","mergeObjects","include","kind","newContext","initialScopeName","seenFullScopeRequests","seenPartialScopeRequests","Q","processQueue","q","deps","dep","indexOfSharp","__createBinding","create","o","k2","enumerable","__exportStar","p","prototype","hasOwnProperty","call","LocalStackElement","TokenizeStringResult","linePos","checkWhileConditions","STOP","anchorPosition","whileCheckResult","whileRules","node","nodeRule","BeginWhileRule","whileRule","ruleScanner","findOptions","prepareRuleWhileSearch","findNextMatchSync","debugName","debugWhileRegExp","whileRuleId","captureIndices","start","handleCaptures","whileCaptures","end","_checkWhileConditions","startTime","Date","now","scanNext","matchResult","prepareRuleSearch","perfStart","performanceNow","elapsedMillis","warn","matchedRuleId","matchRule","injectionResult","bestMatchRuleId","bestMatchRating","Number","MAX_VALUE","bestMatchCaptureIndices","bestMatchResultPriority","matchRating","priorityMatch","matchInjections","matchResultScore","injectionResultScore","matchRuleOrInjections","hasAdvanced","endRuleId","poppedRule","debugEndRegExp","endCaptures","popped","error","_rule","beforePush","BeginEndRule","pushedRule","debugBeginRegExp","beginCaptures","contentName","getContentName","endHasBackReferences","getEndWithResolvedBackReferences","whileHasBackReferences","getWhileWithResolvedBackReferences","matchingRule","debugMatchRegExp","captures","endRegexSource","allowA","allowG","compile","getFindOptions","compileAG","compileWhile","compileWhileAG","options","lineTextContent","Math","min","localStack","maxEnd","captureRule","captureIndex","endPos","retokenizeCapturedWithRuleId","stackClone","onigSubStr","captureRuleScopeName","captureRuleScopesList","doFail","streamState","msg","pos","source","parseJSON","filename","withMetadata","JSONStreamState","token","JSONToken","state","cur","stateStack","objStack","pushState","popState","fail","nextJSONToken","toLocation","keyValue","parseFloat","newArr","newDict","line","char","offset","_state","_out","chCode","charCodeAt","_","m0","String","fromCodePoint","parseInt","parseRawGrammar","INITIAL","Registry","grammarReader","registry_1","grammarDependencies_1","diffStateStacks_1","_options","_syncRegistry","SyncRegistry","Theme","createFromRawTheme","theme","colorMap","_ensureGrammarCache","setTheme","getColorMap","loadGrammarWithEmbeddedLanguages","loadGrammarWithConfiguration","configuration","_loadGrammar","unbalancedBracketSelectors","loadGrammar","async","dependencyProcessor","Promise","all","request","_loadSingleGrammar","_grammarForScopeName","_doLoadSingleGrammar","addGrammar","rawGrammar","grammarForScopeName","isIdentifier","matchesName","results","tokenizer","input","regex","exec","next","newTokenizer","charAt","parseConjunction","parseOperand","expressionToNegate","matcherInput","expressionInParents","some","parseInnerExpression","identifiers","str","plist","json_1","filePath","test","contents","JSON","parse","parseWithLocation","parsePLIST","parsePLISTGrammar","_parse","locationKeyName","advancePosBy","by","advancePosTo","to","skipWhitespace","advanceIfStartsWith","advanceUntil","nextOccurence","captureUntil","curKey","newState","newCur","dictState","arrState","leaveDict","leaveArray","acceptString","val","acceptReal","isNaN","acceptInteger","acceptDate","acceptData","acceptBool","parseOpenTag","isClosed","trim","parseTagValue","tag","peekChCode","_onigLibPromise","_grammars","_rawGrammars","_injectionGrammars","_theme","targetScope","CompiledRule","RegExpSourceList","RegExpSource","IncludeOnlyRule","MatchRule","CaptureRule","Rule","HAS_BACK_REFERENCES","BACK_REFERENCING_END","Symbol","$location","_name","_nameIsCapturing","RegexSource","hasCaptures","_contentName","_contentNameIsCapturing","location","basename","replaceCaptures","super","collectPatterns","out","_match","_cachedCompiledPatterns","_getCachedCompiledPatterns","hasMissingPatterns","pattern","begin","applyEndPatternLast","_begin","_end","hasBackReferences","resolveBackReferences","unshift","setSource","_while","_cachedCompiledWhilePatterns","_getCachedCompiledWhilePatterns","helper","desc","_compileCaptures","_compilePatterns","while","maximumCaptureId","captureId","numericCaptureId","createCaptureRule","localIncludedRule","externalGrammarName","externalGrammarInclude","externalGrammar","externalIncludedRule","skipRule","regExpSource","lastPushedPos","output","hasAnchor","nextCh","_anchorCache","_buildAnchorCache","newSource","capturedValues","capture","g1","ch","A0_G0_result","A0_G1_result","A1_G0_result","A1_G1_result","A0_G0","A0_G1","A1_G0","A1_G1","resolveAnchors","_items","_hasAnchors","_cached","_disposeCaches","item","index","regExps","e","_resolveAnchors","scanner","string","startPosition","ThemeTrieElement","ThemeTrieElementRule","ColorMap","fontStyleToString","ParsedThemeRule","parseTheme","StyleAttributes","_colorMap","_defaults","_root","_cachedMatchRoot","createFromParsedTheme","parsedThemeRules","strcmp","strArrCmp","parentScopes","defaultFontStyle","defaultForeground","defaultBackground","incomingDefaults","shift","defaults","getId","insert","resolveParsedThemeRules","effectiveRule","find","v","scopePattern","_matchesScope","_scopePathMatchesParentScopes","path","segments","extends","startsWith","settings","resultLen","entry","_scope","j","lenJ","isValidHexColor","slice","style","_lastColorId","_id2color","_color2id","_isFrozen","color","toUpperCase","scopeDepth","arr","acceptOverwrite","_mainRule","rulesWithParentScopes","_children","_rulesWithParentScopes","_cmpBySpecificity","aParentScopes","bParentScopes","aParentScopesLen","bParentScopesLen","aLen","bLen","_sortBySpecificity","concat","head","tail","dotIndex","_doInsertHere","child","cloneArr","doClone","something","cloneArray","obj","cloneObj","idx","lastIndexOf","CAPTURING_REGEX_SOURCE","regexSource","captureSource","commandIndex","command","toLowerCase","len1","len2","hex","fn","cache","performance","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}