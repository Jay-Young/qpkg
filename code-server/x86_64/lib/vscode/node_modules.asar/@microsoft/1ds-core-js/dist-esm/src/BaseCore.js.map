{"version":3,"file":"BaseCore.js.map","sources":["BaseCore.js"],"sourcesContent":["import { __extends } from \"tslib\";\r\n/**\r\n * BaseCore.ts\r\n * Base Core is a subset of 1DS Web SDK Core. The purpose of Base Core is to generate a smaller bundle size while providing essential features of Core. Features that are not included in Base Core are:\r\n * 1. Internal logging\r\n * 2. Sending notifications on telemetry sent/discarded\r\n * @author Abhilash Panwar (abpanwar) Hector Hernandez (hectorh)\r\n * @copyright Microsoft 2018\r\n */\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { BaseCore as InternalCore, dumpObj, _throwInternal } from \"@microsoft/applicationinsights-core-js\";\r\nimport { FullVersionString, isDocumentObjectAvailable } from \"./Utils\";\r\nvar BaseCore = /** @class */ (function (_super) {\r\n    __extends(BaseCore, _super);\r\n    function BaseCore() {\r\n        var _this = _super.call(this) || this;\r\n        dynamicProto(BaseCore, _this, function (_self, _base) {\r\n            _self.initialize = function (config, extensions, logger, notificationManager) {\r\n                if (config && !config.endpointUrl) {\r\n                    config.endpointUrl = \"https://browser.events.data.microsoft.com/OneCollector/1.0/\";\r\n                }\r\n                _self.getWParam = function () {\r\n                    return isDocumentObjectAvailable ? 0 : -1;\r\n                };\r\n                try {\r\n                    _base.initialize(config, extensions, logger, notificationManager);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(_self.logger, 1 /* eLoggingSeverity.CRITICAL */, 514 /* _eExtendedInternalMessageId.FailedToInitializeSDK */, \"Initialization Failed: \" + dumpObj(e) + \"\\n - Note: Channels must be provided through config.channels only\");\r\n                }\r\n            };\r\n            _self.track = function (item) {\r\n                var telemetryItem = item;\r\n                if (telemetryItem) {\r\n                    var ext = telemetryItem.ext = telemetryItem.ext || {};\r\n                    ext.sdk = ext.sdk || {};\r\n                    ext.sdk.ver = FullVersionString;\r\n                }\r\n                _base.track(telemetryItem);\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n    /**\r\n     * Initialize the sdk.\r\n     * @param config - The configuration to initialize the SDK.\r\n     * @param extensions - An array of extensions that are to be used by the core.\r\n     */\r\n    BaseCore.prototype.initialize = function (config, extensions, logger, notificationManager) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    BaseCore.prototype.track = function (item) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    return BaseCore;\r\n}(InternalCore));\r\nexport default BaseCore;\r\n//# sourceMappingURL=BaseCore.js.map"],"names":[],"mappings":";;;;;AAAA,gFAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;6CAUM;AACN;AACA;AACA;AACA"}